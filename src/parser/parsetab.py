
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ProgramaAND ARRAY BEGIN BOOLEAN_TYPE CASE CHAR_TYPE CONST DIFFERENT DIV DO DOWNTO ELSE END FALSE FILE FOR FUNCTION GOTO GREATEROREQUAL ID IF IN INTEGER INTEGER_TYPE KEYWORD LABEL LESSOREQUAL MOD MULTILINECOMMENTS NIL NOT OF ONELINECOMMENTS OR PACKED PROCEDURE PROGRAM REAL REAL_TYPE RECORD REPEAT SET STRING STRING_TYPE THEN TO TRUE TYPE UNTIL USES VAR WHILE WITHDvariaveis : VAR Listavariaveis\n    Atribuicao : Atribuido ':' '=' Expressao\n    \n    LocalInstsList : LocalInstsList ';' Instrucao\n    \n    Condicao : Condicao AND DeclaracaoCondicao\n             | Condicao OR DeclaracaoCondicao\n             | DeclaracaoCondicao\n             | '(' Condicao ')'\n    \n    InstrucaoCondicional : IF Condicao THEN BlocoCondicional ParteElse\n    \n    Duses : USES UseList ';'\n          | \n    \n    Programa : PROGRAM ID ';' Duses GlobalInsts BlocoPrincipal '.'\n    \n    Listavariaveis : Listavariaveis Variaveis ':' Tipo ';'\n                   | \n    \n    While : WHILE Condicao DO LocalInstsList\n    \n    Atribuido : ID\n              | Acesso_array\n    \n    BlocoCondicional : LocalInstsList\n    \n    LocalInstsList : LocalInstsList ';'\n    \n    UseList : UseList ',' ID\n            | ID \n    \n    GlobalInsts : GlobalInsts GlobalInst\n                | \n    \n    DeclaracaoCondicao : Expressao SimboloCondicional Expressao\n                       | NOT Condicao\n                       | TRUE\n                       | FALSE\n    \n    ParteElse : ELSE LocalInstsList\n              | \n    GlobalInst : Dvariaveis\n    LocalInstsList : Instrucao\n    \n    Variaveis : Variaveis ',' ID\n              | ID\n    \n    Acesso_array : Variavel_array '[' Expressao ']'\n    \n    CicloFor : FOR Atribuicao DirecaoFor Expressao DO LocalInstsList\n    \n    BlocoPrincipal : BEGIN LocalInstsList END\n    \n    Instrucao : While\n              | CicloFor\n              | InstrucaoCondicional\n              | Atribuicao \n    \n    Variavel_array : ID\n                   | Acesso_array\n    \n    DirecaoFor : TO\n               | DOWNTO\n    \n    SimboloCondicional : '='\n                       | '<' '>'\n                       | '<' '='\n                       | '<'\n                       | '>' '='\n                       | '>'\n    \n    Tipo : Datatype\n         | ARRAY '[' Intervalo ']' OF Datatype\n         | ID\n    \n     Instrucao : Bloco\n     \n    Expressao : Expressao '+' Termo\n              | Expressao '-' Termo\n              | Termo\n    \n    Bloco : BEGIN LocalInstsList END\n    \n    Intervalo : INTEGER '.' '.' INTEGER\n    \n    Termo : Termo '*' Fator\n          | Termo '/' Fator\n          | Fator\n    \n    Datatype : REAL_TYPE\n             | INTEGER_TYPE\n             | STRING_TYPE\n             | BOOLEAN_TYPE\n             | CHAR_TYPE\n    \n    Fator : ID\n          | REAL\n          | INTEGER\n          | STRING\n          | TRUE\n          | FALSE \n          | '(' Expressao ')'\n          | Acesso_array\n    "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,17,],[0,-11,]),'ID':([2,6,12,14,16,18,26,27,28,33,37,40,42,55,60,61,62,65,66,67,68,69,70,72,73,74,75,76,77,78,82,83,84,93,94,95,114,116,117,],[3,9,30,-13,34,30,47,30,47,57,30,47,47,47,30,47,47,47,47,47,-44,-47,-49,47,47,47,-42,-43,30,47,47,107,113,-45,-46,-48,30,30,-12,]),';':([3,8,9,19,20,21,22,23,24,25,34,35,37,45,46,47,48,49,50,51,58,59,80,81,85,89,91,92,96,97,99,100,101,102,104,105,107,108,109,110,111,112,115,119,120,127,],[4,15,-20,37,-30,-36,-37,-38,-39,-53,-19,37,-18,-56,-61,-67,-68,-69,-70,-74,-57,-3,-71,-72,37,-73,-54,-55,-59,-60,-28,37,-2,-33,117,-50,-52,-62,-63,-64,-65,-66,-8,37,37,-51,]),'USES':([4,],[6,]),'BEGIN':([4,5,7,11,12,13,14,15,18,33,37,60,77,114,116,117,],[-10,-22,12,-21,18,-29,-13,-9,18,-1,18,18,18,18,18,-12,]),'VAR':([4,5,7,11,13,14,15,33,117,],[-10,-22,14,-21,-29,-13,-9,-1,-12,]),',':([8,9,34,56,57,113,],[16,-20,-19,84,-32,-31,]),'.':([10,36,122,124,],[17,-35,124,126,]),'WHILE':([12,18,37,60,77,114,116,],[26,26,26,26,26,26,26,]),'FOR':([12,18,37,60,77,114,116,],[27,27,27,27,27,27,27,]),'IF':([12,18,37,60,77,114,116,],[28,28,28,28,28,28,28,]),'END':([19,20,21,22,23,24,25,35,37,45,46,47,48,49,50,51,58,59,80,81,85,89,91,92,96,97,99,100,101,102,115,119,120,],[36,-30,-36,-37,-38,-39,-53,58,-18,-56,-61,-67,-68,-69,-70,-74,-57,-3,-71,-72,-14,-73,-54,-55,-59,-60,-28,-17,-2,-33,-8,-34,-27,]),'ELSE':([20,21,22,23,24,25,37,45,46,47,48,49,50,51,58,59,80,81,85,89,91,92,96,97,99,100,101,102,115,119,120,],[-30,-36,-37,-38,-39,-53,-18,-56,-61,-67,-68,-69,-70,-74,-57,-3,-71,-72,-14,-73,-54,-55,-59,-60,116,-17,-2,-33,-8,-34,-27,]),'(':([26,28,40,42,55,61,62,65,66,67,68,69,70,72,73,74,75,76,78,82,93,94,95,],[40,40,40,40,82,82,82,82,82,82,-44,-47,-49,82,82,82,-42,-43,82,82,-45,-46,-48,]),'NOT':([26,28,40,42,61,62,],[42,42,42,42,42,42,]),'TRUE':([26,28,40,42,55,61,62,65,66,67,68,69,70,72,73,74,75,76,78,82,93,94,95,],[43,43,43,43,80,43,43,80,80,80,-44,-47,-49,80,80,80,-42,-43,80,80,-45,-46,-48,]),'FALSE':([26,28,40,42,55,61,62,65,66,67,68,69,70,72,73,74,75,76,78,82,93,94,95,],[44,44,44,44,81,44,44,81,81,81,-44,-47,-49,81,81,81,-42,-43,81,81,-45,-46,-48,]),'REAL':([26,28,40,42,55,61,62,65,66,67,68,69,70,72,73,74,75,76,78,82,93,94,95,],[48,48,48,48,48,48,48,48,48,48,-44,-47,-49,48,48,48,-42,-43,48,48,-45,-46,-48,]),'INTEGER':([26,28,40,42,55,61,62,65,66,67,68,69,70,72,73,74,75,76,78,82,93,94,95,118,126,],[49,49,49,49,49,49,49,49,49,49,-44,-47,-49,49,49,49,-42,-43,49,49,-45,-46,-48,122,128,]),'STRING':([26,28,40,42,55,61,62,65,66,67,68,69,70,72,73,74,75,76,78,82,93,94,95,],[50,50,50,50,50,50,50,50,50,50,-44,-47,-49,50,50,50,-42,-43,50,50,-45,-46,-48,]),':':([29,30,31,56,57,102,113,],[54,-15,-16,83,-32,-33,-31,]),'[':([30,31,32,47,51,102,106,],[-40,-41,55,-40,-41,-33,118,]),'DO':([38,39,43,44,45,46,47,48,49,50,51,71,80,81,86,87,88,89,90,91,92,96,97,98,102,],[60,-6,-25,-26,-56,-61,-67,-68,-69,-70,-74,-24,-71,-72,-4,-5,-7,-73,-23,-54,-55,-59,-60,114,-33,]),'AND':([38,39,43,44,45,46,47,48,49,50,51,53,63,71,80,81,86,87,88,89,90,91,92,96,97,102,],[61,-6,-25,-26,-56,-61,-67,-68,-69,-70,-74,61,61,61,-71,-72,-4,-5,-7,-73,-23,-54,-55,-59,-60,-33,]),'OR':([38,39,43,44,45,46,47,48,49,50,51,53,63,71,80,81,86,87,88,89,90,91,92,96,97,102,],[62,-6,-25,-26,-56,-61,-67,-68,-69,-70,-74,62,62,62,-71,-72,-4,-5,-7,-73,-23,-54,-55,-59,-60,-33,]),'THEN':([39,43,44,45,46,47,48,49,50,51,53,71,80,81,86,87,88,89,90,91,92,96,97,102,],[-6,-25,-26,-56,-61,-67,-68,-69,-70,-74,77,-24,-71,-72,-4,-5,-7,-73,-23,-54,-55,-59,-60,-33,]),')':([39,43,44,45,46,47,48,49,50,51,63,64,71,80,81,86,87,88,89,90,91,92,96,97,102,103,],[-6,-25,-26,-56,-61,-67,-68,-69,-70,-74,88,89,-24,-71,-72,-4,-5,-7,-73,-23,-54,-55,-59,-60,-33,89,]),'+':([41,43,44,45,46,47,48,49,50,51,64,79,80,81,89,90,91,92,96,97,98,101,102,103,],[66,-71,-72,-56,-61,-67,-68,-69,-70,-74,66,66,-71,-72,-73,66,-54,-55,-59,-60,66,66,-33,66,]),'-':([41,43,44,45,46,47,48,49,50,51,64,79,80,81,89,90,91,92,96,97,98,101,102,103,],[67,-71,-72,-56,-61,-67,-68,-69,-70,-74,67,67,-71,-72,-73,67,-54,-55,-59,-60,67,67,-33,67,]),'=':([41,43,44,45,46,47,48,49,50,51,54,64,69,70,80,81,89,91,92,96,97,102,],[68,-71,-72,-56,-61,-67,-68,-69,-70,-74,78,68,94,95,-71,-72,-73,-54,-55,-59,-60,-33,]),'<':([41,43,44,45,46,47,48,49,50,51,64,80,81,89,91,92,96,97,102,],[69,-71,-72,-56,-61,-67,-68,-69,-70,-74,69,-71,-72,-73,-54,-55,-59,-60,-33,]),'>':([41,43,44,45,46,47,48,49,50,51,64,69,80,81,89,91,92,96,97,102,],[70,-71,-72,-56,-61,-67,-68,-69,-70,-74,70,93,-71,-72,-73,-54,-55,-59,-60,-33,]),'*':([43,44,45,46,47,48,49,50,51,80,81,89,91,92,96,97,102,],[-71,-72,72,-61,-67,-68,-69,-70,-74,-71,-72,-73,72,72,-59,-60,-33,]),'/':([43,44,45,46,47,48,49,50,51,80,81,89,91,92,96,97,102,],[-71,-72,73,-61,-67,-68,-69,-70,-74,-71,-72,-73,73,73,-59,-60,-33,]),']':([45,46,47,48,49,50,51,79,80,81,89,91,92,96,97,102,121,128,],[-56,-61,-67,-68,-69,-70,-74,102,-71,-72,-73,-54,-55,-59,-60,-33,123,-58,]),'TO':([45,46,47,48,49,50,51,52,80,81,89,91,92,96,97,101,102,],[-56,-61,-67,-68,-69,-70,-74,75,-71,-72,-73,-54,-55,-59,-60,-2,-33,]),'DOWNTO':([45,46,47,48,49,50,51,52,80,81,89,91,92,96,97,101,102,],[-56,-61,-67,-68,-69,-70,-74,76,-71,-72,-73,-54,-55,-59,-60,-2,-33,]),'ARRAY':([83,],[106,]),'REAL_TYPE':([83,125,],[108,108,]),'INTEGER_TYPE':([83,125,],[109,109,]),'STRING_TYPE':([83,125,],[110,110,]),'BOOLEAN_TYPE':([83,125,],[111,111,]),'CHAR_TYPE':([83,125,],[112,112,]),'OF':([123,],[125,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Duses':([4,],[5,]),'GlobalInsts':([5,],[7,]),'UseList':([6,],[8,]),'BlocoPrincipal':([7,],[10,]),'GlobalInst':([7,],[11,]),'Dvariaveis':([7,],[13,]),'LocalInstsList':([12,18,60,77,114,116,],[19,35,85,100,119,120,]),'Instrucao':([12,18,37,60,77,114,116,],[20,20,59,20,20,20,20,]),'While':([12,18,37,60,77,114,116,],[21,21,21,21,21,21,21,]),'CicloFor':([12,18,37,60,77,114,116,],[22,22,22,22,22,22,22,]),'InstrucaoCondicional':([12,18,37,60,77,114,116,],[23,23,23,23,23,23,23,]),'Atribuicao':([12,18,27,37,60,77,114,116,],[24,24,52,24,24,24,24,24,]),'Bloco':([12,18,37,60,77,114,116,],[25,25,25,25,25,25,25,]),'Atribuido':([12,18,27,37,60,77,114,116,],[29,29,29,29,29,29,29,29,]),'Acesso_array':([12,18,26,27,28,37,40,42,55,60,61,62,65,66,67,72,73,74,77,78,82,114,116,],[31,31,51,31,51,31,51,51,51,31,51,51,51,51,51,51,51,51,31,51,51,31,31,]),'Variavel_array':([12,18,26,27,28,37,40,42,55,60,61,62,65,66,67,72,73,74,77,78,82,114,116,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'Listavariaveis':([14,],[33,]),'Condicao':([26,28,40,42,],[38,53,63,71,]),'DeclaracaoCondicao':([26,28,40,42,61,62,],[39,39,39,39,86,87,]),'Expressao':([26,28,40,42,55,61,62,65,74,78,82,],[41,41,64,41,79,41,41,90,98,101,103,]),'Termo':([26,28,40,42,55,61,62,65,66,67,74,78,82,],[45,45,45,45,45,45,45,45,91,92,45,45,45,]),'Fator':([26,28,40,42,55,61,62,65,66,67,72,73,74,78,82,],[46,46,46,46,46,46,46,46,46,46,96,97,46,46,46,]),'Variaveis':([33,],[56,]),'SimboloCondicional':([41,64,],[65,65,]),'DirecaoFor':([52,],[74,]),'BlocoCondicional':([77,],[99,]),'Tipo':([83,],[104,]),'Datatype':([83,125,],[105,127,]),'ParteElse':([99,],[115,]),'Intervalo':([118,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Dvariaveis -> VAR Listavariaveis','Dvariaveis',2,'p_dvariaveis','declarations.py',2),
  ('Atribuicao -> Atribuido : = Expressao','Atribuicao',4,'p_atribuicao','atribuicoes_rules.py',5),
  ('LocalInstsList -> LocalInstsList ; Instrucao','LocalInstsList',3,'p_localinstslist_multiple','body.py',5),
  ('Condicao -> Condicao AND DeclaracaoCondicao','Condicao',3,'p_Condicao','condicoes_rules.py',5),
  ('Condicao -> Condicao OR DeclaracaoCondicao','Condicao',3,'p_Condicao','condicoes_rules.py',6),
  ('Condicao -> DeclaracaoCondicao','Condicao',1,'p_Condicao','condicoes_rules.py',7),
  ('Condicao -> ( Condicao )','Condicao',3,'p_Condicao','condicoes_rules.py',8),
  ('InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse','InstrucaoCondicional',5,'p_instrucao_condicional','if_condicional.py',5),
  ('Duses -> USES UseList ;','Duses',3,'p_duses','declaracao_uses_rules.py',6),
  ('Duses -> <empty>','Duses',0,'p_duses','declaracao_uses_rules.py',7),
  ('Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .','Programa',7,'p_programa','main_rules.py',6),
  ('Listavariaveis -> Listavariaveis Variaveis : Tipo ;','Listavariaveis',5,'p_listavariaveis','declarations.py',8),
  ('Listavariaveis -> <empty>','Listavariaveis',0,'p_listavariaveis','declarations.py',9),
  ('While -> WHILE Condicao DO LocalInstsList','While',4,'p_While','loops.py',8),
  ('Atribuido -> ID','Atribuido',1,'p_atribuido','atribuicoes_rules.py',11),
  ('Atribuido -> Acesso_array','Atribuido',1,'p_atribuido','atribuicoes_rules.py',12),
  ('BlocoCondicional -> LocalInstsList','BlocoCondicional',1,'p_bloco_condicional','if_condicional.py',11),
  ('LocalInstsList -> LocalInstsList ;','LocalInstsList',2,'p_localinstslist_terminada','body.py',12),
  ('UseList -> UseList , ID','UseList',3,'p_uselist','declaracao_uses_rules.py',12),
  ('UseList -> ID','UseList',1,'p_uselist','declaracao_uses_rules.py',13),
  ('GlobalInsts -> GlobalInsts GlobalInst','GlobalInsts',2,'p_globalinsts','main_rules.py',12),
  ('GlobalInsts -> <empty>','GlobalInsts',0,'p_globalinsts','main_rules.py',13),
  ('DeclaracaoCondicao -> Expressao SimboloCondicional Expressao','DeclaracaoCondicao',3,'p_DeclaracaoCondicao','condicoes_rules.py',15),
  ('DeclaracaoCondicao -> NOT Condicao','DeclaracaoCondicao',2,'p_DeclaracaoCondicao','condicoes_rules.py',16),
  ('DeclaracaoCondicao -> TRUE','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',17),
  ('DeclaracaoCondicao -> FALSE','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',18),
  ('ParteElse -> ELSE LocalInstsList','ParteElse',2,'p_parte_else','if_condicional.py',17),
  ('ParteElse -> <empty>','ParteElse',0,'p_parte_else','if_condicional.py',18),
  ('GlobalInst -> Dvariaveis','GlobalInst',1,'p_globalinst','main_rules.py',17),
  ('LocalInstsList -> Instrucao','LocalInstsList',1,'p_localinstslist_single','body.py',19),
  ('Variaveis -> Variaveis , ID','Variaveis',3,'p_variaveis','declarations.py',19),
  ('Variaveis -> ID','Variaveis',1,'p_variaveis','declarations.py',20),
  ('Acesso_array -> Variavel_array [ Expressao ]','Acesso_array',4,'p_acesso_array','atribuicoes_rules.py',21),
  ('CicloFor -> FOR Atribuicao DirecaoFor Expressao DO LocalInstsList','CicloFor',6,'p_ciclo_for','loops.py',22),
  ('BlocoPrincipal -> BEGIN LocalInstsList END','BlocoPrincipal',3,'p_blocofinal','main_rules.py',23),
  ('Instrucao -> While','Instrucao',1,'p_instrucao','body.py',26),
  ('Instrucao -> CicloFor','Instrucao',1,'p_instrucao','body.py',27),
  ('Instrucao -> InstrucaoCondicional','Instrucao',1,'p_instrucao','body.py',28),
  ('Instrucao -> Atribuicao','Instrucao',1,'p_instrucao','body.py',29),
  ('Variavel_array -> ID','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',28),
  ('Variavel_array -> Acesso_array','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',29),
  ('DirecaoFor -> TO','DirecaoFor',1,'p_direcao_for','loops.py',28),
  ('DirecaoFor -> DOWNTO','DirecaoFor',1,'p_direcao_for','loops.py',29),
  ('SimboloCondicional -> =','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',29),
  ('SimboloCondicional -> < >','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',30),
  ('SimboloCondicional -> < =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',31),
  ('SimboloCondicional -> <','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',32),
  ('SimboloCondicional -> > =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',33),
  ('SimboloCondicional -> >','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',34),
  ('Tipo -> Datatype','Tipo',1,'p_tipo','declarations.py',30),
  ('Tipo -> ARRAY [ Intervalo ] OF Datatype','Tipo',6,'p_tipo','declarations.py',31),
  ('Tipo -> ID','Tipo',1,'p_tipo','declarations.py',32),
  ('Instrucao -> Bloco','Instrucao',1,'p_instrucao_bloco','body.py',36),
  ('Expressao -> Expressao + Termo','Expressao',3,'p_expressao','atribuicoes_rules.py',38),
  ('Expressao -> Expressao - Termo','Expressao',3,'p_expressao','atribuicoes_rules.py',39),
  ('Expressao -> Termo','Expressao',1,'p_expressao','atribuicoes_rules.py',40),
  ('Bloco -> BEGIN LocalInstsList END','Bloco',3,'p_bloco','body.py',43),
  ('Intervalo -> INTEGER . . INTEGER','Intervalo',4,'p_intervalo','declarations.py',46),
  ('Termo -> Termo * Fator','Termo',3,'p_termo','atribuicoes_rules.py',50),
  ('Termo -> Termo / Fator','Termo',3,'p_termo','atribuicoes_rules.py',51),
  ('Termo -> Fator','Termo',1,'p_termo','atribuicoes_rules.py',52),
  ('Datatype -> REAL_TYPE','Datatype',1,'p_datatype','declarations.py',53),
  ('Datatype -> INTEGER_TYPE','Datatype',1,'p_datatype','declarations.py',54),
  ('Datatype -> STRING_TYPE','Datatype',1,'p_datatype','declarations.py',55),
  ('Datatype -> BOOLEAN_TYPE','Datatype',1,'p_datatype','declarations.py',56),
  ('Datatype -> CHAR_TYPE','Datatype',1,'p_datatype','declarations.py',57),
  ('Fator -> ID','Fator',1,'p_fator','atribuicoes_rules.py',63),
  ('Fator -> REAL','Fator',1,'p_fator','atribuicoes_rules.py',64),
  ('Fator -> INTEGER','Fator',1,'p_fator','atribuicoes_rules.py',65),
  ('Fator -> STRING','Fator',1,'p_fator','atribuicoes_rules.py',66),
  ('Fator -> TRUE','Fator',1,'p_fator','atribuicoes_rules.py',67),
  ('Fator -> FALSE','Fator',1,'p_fator','atribuicoes_rules.py',68),
  ('Fator -> ( Expressao )','Fator',3,'p_fator','atribuicoes_rules.py',69),
  ('Fator -> Acesso_array','Fator',1,'p_fator','atribuicoes_rules.py',70),
]
