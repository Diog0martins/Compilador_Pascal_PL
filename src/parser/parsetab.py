
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ProgramaAND ARRAY BEGIN BOOLEAN_TYPE CASE CHAR_TYPE CONST DIFFERENT DIV DO DOWNTO ELSE END FALSE FILE FOR FUNCTION GOTO ID IF IN INTEGER INTEGER_TYPE KEYWORD LABEL MOD MULTILINECOMMENTS NIL NOT OF ONELINECOMMENTS OR PACKED PROCEDURE PROGRAM REAL REAL_TYPE RECORD REPEAT SET STRING STRING_TYPE THEN TO TRUE TYPE UNTIL USES VAR WHILE WITHDvariaveis : VAR Listavariaveis\n    Atribuicao : Atribuido ':' '=' Expressao\n    \n    LocalInstsList : LocalInstsList ';' Instrucao\n    \n    Condicao : Condicao AND DeclaracaoCondicao\n             | Condicao OR DeclaracaoCondicao\n             | DeclaracaoCondicao\n             | '(' Condicao ')'\n    \n    InstrucaoCondicional : IF Condicao THEN BlocoCondicional ParteElse\n    \n    Duses : USES UseList ';'\n          | \n    \n    Programa : PROGRAM ID ';' Duses GlobalInsts BlocoPrincipal '.'\n    \n    Listavariaveis : Listavariaveis Variaveis ':' Tipo ';'\n                   | \n    \n    Atribuido : ID\n              | Acesso_array\n    \n    BlocoCondicional : LocalInstsList\n    \n    LocalInstsList : Instrucao PontoVirgOpc\n    \n    UseList : UseList ',' ID\n            | ID \n    \n    GlobalInsts : GlobalInsts GlobalInst\n                | \n    \n    DeclaracaoCondicao : Expressao SimboloCondicional Expressao\n                       | NOT Condicao\n                       | TRUE\n                       | FALSE\n    \n    ParteElse : ELSE LocalInstsList\n              | \n    \n    Instrucao : Atribuicao\n              | InstrucaoCondicional\n              | Bloco\n    GlobalInst : Dvariaveis\n    Variaveis : Variaveis ',' ID\n              | ID\n    \n    Acesso_array : Variavel_array '[' Expressao ']'\n    \n    BlocoPrincipal : BEGIN LocalInstsList END\n    \n    Bloco : BEGIN LocalInstsList END\n    \n    Variavel_array : ID\n                   | Acesso_array\n    \n    SimboloCondicional : '='\n                       | '<' '>'\n                       | '<' '='\n                       | '<'\n                       | '>' '='\n                       | '>'\n    \n    Tipo : Datatype\n         | ARRAY '[' Intervalo ']' OF Datatype\n         | ID\n    \n    PontoVirgOpc : ';'\n                 |  \n\n    \n    Expressao : Expressao '+' Termo\n              | Expressao '-' Termo\n              | Termo\n    \n    Intervalo : INTEGER '.' '.' INTEGER\n    \n    Termo : Termo '*' Fator\n          | Termo '/' Fator\n          | Fator\n    \n    Datatype : REAL_TYPE\n             | INTEGER_TYPE\n             | STRING_TYPE\n             | BOOLEAN_TYPE\n             | CHAR_TYPE\n    \n    Fator : ID\n          | REAL\n          | INTEGER\n          | STRING\n          | TRUE\n          | FALSE \n          | '(' Expressao ')'\n          | Acesso_array\n    "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,17,],[0,-11,]),'ID':([2,6,12,14,16,18,25,29,33,39,41,51,56,57,58,59,62,63,64,65,66,67,69,70,74,75,76,87,88,89,105,106,],[3,9,26,-13,30,26,46,53,26,46,46,46,46,26,46,46,46,46,46,-39,-42,-44,46,46,46,97,103,-40,-41,-43,26,-12,]),';':([3,8,9,19,20,21,22,23,30,31,34,35,44,45,46,47,48,49,50,54,55,72,73,77,78,79,83,85,86,90,91,92,94,95,97,98,99,100,101,102,104,108,115,],[4,15,-19,33,35,-28,-29,-30,-18,33,-17,-48,-52,-56,-62,-63,-64,-65,-69,-36,-3,-66,-67,-2,-27,33,-68,-50,-51,-54,-55,-34,106,-45,-47,-57,-58,-59,-60,-61,-8,33,-46,]),'USES':([4,],[6,]),'BEGIN':([4,5,7,11,12,13,14,15,18,29,33,57,105,106,],[-10,-21,12,-20,18,-31,-13,-9,18,-1,18,18,18,-12,]),'VAR':([4,5,7,11,13,14,15,29,106,],[-10,-21,14,-20,-31,-13,-9,-1,-12,]),',':([8,9,30,52,53,103,],[16,-19,-18,76,-33,-32,]),'.':([10,32,110,112,],[17,-35,112,114,]),'IF':([12,18,33,57,105,],[25,25,25,25,25,]),'END':([19,20,21,22,23,31,34,35,44,45,46,47,48,49,50,54,55,72,73,77,78,79,83,85,86,90,91,92,104,108,],[32,-49,-28,-29,-30,54,-17,-48,-52,-56,-62,-63,-64,-65,-69,-36,-3,-66,-67,-2,-27,-16,-68,-50,-51,-54,-55,-34,-8,-26,]),'ELSE':([20,21,22,23,34,35,44,45,46,47,48,49,50,54,55,72,73,77,78,79,83,85,86,90,91,92,104,108,],[-49,-28,-29,-30,-17,-48,-52,-56,-62,-63,-64,-65,-69,-36,-3,-66,-67,-2,105,-16,-68,-50,-51,-54,-55,-34,-8,-26,]),':':([24,26,27,52,53,92,103,],[36,-14,-15,75,-33,-34,-32,]),'(':([25,39,41,51,56,58,59,62,63,64,65,66,67,69,70,74,87,88,89,],[39,39,39,74,74,74,74,74,74,74,-39,-42,-44,74,74,74,-40,-41,-43,]),'NOT':([25,39,41,58,59,],[41,41,41,41,41,]),'TRUE':([25,39,41,51,56,58,59,62,63,64,65,66,67,69,70,74,87,88,89,],[42,42,42,72,72,42,42,72,72,72,-39,-42,-44,72,72,72,-40,-41,-43,]),'FALSE':([25,39,41,51,56,58,59,62,63,64,65,66,67,69,70,74,87,88,89,],[43,43,43,73,73,43,43,73,73,73,-39,-42,-44,73,73,73,-40,-41,-43,]),'REAL':([25,39,41,51,56,58,59,62,63,64,65,66,67,69,70,74,87,88,89,],[47,47,47,47,47,47,47,47,47,47,-39,-42,-44,47,47,47,-40,-41,-43,]),'INTEGER':([25,39,41,51,56,58,59,62,63,64,65,66,67,69,70,74,87,88,89,107,114,],[48,48,48,48,48,48,48,48,48,48,-39,-42,-44,48,48,48,-40,-41,-43,110,116,]),'STRING':([25,39,41,51,56,58,59,62,63,64,65,66,67,69,70,74,87,88,89,],[49,49,49,49,49,49,49,49,49,49,-39,-42,-44,49,49,49,-40,-41,-43,]),'[':([26,27,28,46,50,92,96,],[-37,-38,51,-37,-38,-34,107,]),'=':([36,40,42,43,44,45,46,47,48,49,50,61,66,67,72,73,83,85,86,90,91,92,],[56,65,-66,-67,-52,-56,-62,-63,-64,-65,-69,65,88,89,-66,-67,-68,-50,-51,-54,-55,-34,]),'THEN':([37,38,42,43,44,45,46,47,48,49,50,68,72,73,80,81,82,83,84,85,86,90,91,92,],[57,-6,-24,-25,-52,-56,-62,-63,-64,-65,-69,-23,-66,-67,-4,-5,-7,-68,-22,-50,-51,-54,-55,-34,]),'AND':([37,38,42,43,44,45,46,47,48,49,50,60,68,72,73,80,81,82,83,84,85,86,90,91,92,],[58,-6,-24,-25,-52,-56,-62,-63,-64,-65,-69,58,58,-66,-67,-4,-5,-7,-68,-22,-50,-51,-54,-55,-34,]),'OR':([37,38,42,43,44,45,46,47,48,49,50,60,68,72,73,80,81,82,83,84,85,86,90,91,92,],[59,-6,-24,-25,-52,-56,-62,-63,-64,-65,-69,59,59,-66,-67,-4,-5,-7,-68,-22,-50,-51,-54,-55,-34,]),')':([38,42,43,44,45,46,47,48,49,50,60,61,68,72,73,80,81,82,83,84,85,86,90,91,92,93,],[-6,-24,-25,-52,-56,-62,-63,-64,-65,-69,82,83,-23,-66,-67,-4,-5,-7,-68,-22,-50,-51,-54,-55,-34,83,]),'+':([40,42,43,44,45,46,47,48,49,50,61,71,72,73,77,83,84,85,86,90,91,92,93,],[63,-66,-67,-52,-56,-62,-63,-64,-65,-69,63,63,-66,-67,63,-68,63,-50,-51,-54,-55,-34,63,]),'-':([40,42,43,44,45,46,47,48,49,50,61,71,72,73,77,83,84,85,86,90,91,92,93,],[64,-66,-67,-52,-56,-62,-63,-64,-65,-69,64,64,-66,-67,64,-68,64,-50,-51,-54,-55,-34,64,]),'<':([40,42,43,44,45,46,47,48,49,50,61,72,73,83,85,86,90,91,92,],[66,-66,-67,-52,-56,-62,-63,-64,-65,-69,66,-66,-67,-68,-50,-51,-54,-55,-34,]),'>':([40,42,43,44,45,46,47,48,49,50,61,66,72,73,83,85,86,90,91,92,],[67,-66,-67,-52,-56,-62,-63,-64,-65,-69,67,87,-66,-67,-68,-50,-51,-54,-55,-34,]),'*':([42,43,44,45,46,47,48,49,50,72,73,83,85,86,90,91,92,],[-66,-67,69,-56,-62,-63,-64,-65,-69,-66,-67,-68,69,69,-54,-55,-34,]),'/':([42,43,44,45,46,47,48,49,50,72,73,83,85,86,90,91,92,],[-66,-67,70,-56,-62,-63,-64,-65,-69,-66,-67,-68,70,70,-54,-55,-34,]),']':([44,45,46,47,48,49,50,71,72,73,83,85,86,90,91,92,109,116,],[-52,-56,-62,-63,-64,-65,-69,92,-66,-67,-68,-50,-51,-54,-55,-34,111,-53,]),'ARRAY':([75,],[96,]),'REAL_TYPE':([75,113,],[98,98,]),'INTEGER_TYPE':([75,113,],[99,99,]),'STRING_TYPE':([75,113,],[100,100,]),'BOOLEAN_TYPE':([75,113,],[101,101,]),'CHAR_TYPE':([75,113,],[102,102,]),'OF':([111,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Duses':([4,],[5,]),'GlobalInsts':([5,],[7,]),'UseList':([6,],[8,]),'BlocoPrincipal':([7,],[10,]),'GlobalInst':([7,],[11,]),'Dvariaveis':([7,],[13,]),'LocalInstsList':([12,18,57,105,],[19,31,79,108,]),'Instrucao':([12,18,33,57,105,],[20,20,55,20,20,]),'Atribuicao':([12,18,33,57,105,],[21,21,21,21,21,]),'InstrucaoCondicional':([12,18,33,57,105,],[22,22,22,22,22,]),'Bloco':([12,18,33,57,105,],[23,23,23,23,23,]),'Atribuido':([12,18,33,57,105,],[24,24,24,24,24,]),'Acesso_array':([12,18,25,33,39,41,51,56,57,58,59,62,63,64,69,70,74,105,],[27,27,50,27,50,50,50,50,27,50,50,50,50,50,50,50,50,27,]),'Variavel_array':([12,18,25,33,39,41,51,56,57,58,59,62,63,64,69,70,74,105,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'Listavariaveis':([14,],[29,]),'PontoVirgOpc':([20,],[34,]),'Condicao':([25,39,41,],[37,60,68,]),'DeclaracaoCondicao':([25,39,41,58,59,],[38,38,38,80,81,]),'Expressao':([25,39,41,51,56,58,59,62,74,],[40,61,40,71,77,40,40,84,93,]),'Termo':([25,39,41,51,56,58,59,62,63,64,74,],[44,44,44,44,44,44,44,44,85,86,44,]),'Fator':([25,39,41,51,56,58,59,62,63,64,69,70,74,],[45,45,45,45,45,45,45,45,45,45,90,91,45,]),'Variaveis':([29,],[52,]),'SimboloCondicional':([40,61,],[62,62,]),'BlocoCondicional':([57,],[78,]),'Tipo':([75,],[94,]),'Datatype':([75,113,],[95,115,]),'ParteElse':([78,],[104,]),'Intervalo':([107,],[109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Dvariaveis -> VAR Listavariaveis','Dvariaveis',2,'p_dvariaveis','declarations.py',2),
  ('Atribuicao -> Atribuido : = Expressao','Atribuicao',4,'p_atribuicao','atribuicoes_rules.py',5),
  ('LocalInstsList -> LocalInstsList ; Instrucao','LocalInstsList',3,'p_localinstslist_multiple','body.py',5),
  ('Condicao -> Condicao AND DeclaracaoCondicao','Condicao',3,'p_Condicao','condicoes_rules.py',5),
  ('Condicao -> Condicao OR DeclaracaoCondicao','Condicao',3,'p_Condicao','condicoes_rules.py',6),
  ('Condicao -> DeclaracaoCondicao','Condicao',1,'p_Condicao','condicoes_rules.py',7),
  ('Condicao -> ( Condicao )','Condicao',3,'p_Condicao','condicoes_rules.py',8),
  ('InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse','InstrucaoCondicional',5,'p_instrucao_condicional','if_condicional.py',5),
  ('Duses -> USES UseList ;','Duses',3,'p_duses','declaracao_uses_rules.py',6),
  ('Duses -> <empty>','Duses',0,'p_duses','declaracao_uses_rules.py',7),
  ('Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .','Programa',7,'p_programa','main_rules.py',6),
  ('Listavariaveis -> Listavariaveis Variaveis : Tipo ;','Listavariaveis',5,'p_listavariaveis','declarations.py',8),
  ('Listavariaveis -> <empty>','Listavariaveis',0,'p_listavariaveis','declarations.py',9),
  ('Atribuido -> ID','Atribuido',1,'p_atribuido','atribuicoes_rules.py',11),
  ('Atribuido -> Acesso_array','Atribuido',1,'p_atribuido','atribuicoes_rules.py',12),
  ('BlocoCondicional -> LocalInstsList','BlocoCondicional',1,'p_bloco_condicional','if_condicional.py',11),
  ('LocalInstsList -> Instrucao PontoVirgOpc','LocalInstsList',2,'p_localinstslist_single','body.py',12),
  ('UseList -> UseList , ID','UseList',3,'p_uselist','declaracao_uses_rules.py',12),
  ('UseList -> ID','UseList',1,'p_uselist','declaracao_uses_rules.py',13),
  ('GlobalInsts -> GlobalInsts GlobalInst','GlobalInsts',2,'p_globalinsts','main_rules.py',12),
  ('GlobalInsts -> <empty>','GlobalInsts',0,'p_globalinsts','main_rules.py',13),
  ('DeclaracaoCondicao -> Expressao SimboloCondicional Expressao','DeclaracaoCondicao',3,'p_DeclaracaoCondicao','condicoes_rules.py',14),
  ('DeclaracaoCondicao -> NOT Condicao','DeclaracaoCondicao',2,'p_DeclaracaoCondicao','condicoes_rules.py',15),
  ('DeclaracaoCondicao -> TRUE','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',16),
  ('DeclaracaoCondicao -> FALSE','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',17),
  ('ParteElse -> ELSE LocalInstsList','ParteElse',2,'p_parte_else','if_condicional.py',17),
  ('ParteElse -> <empty>','ParteElse',0,'p_parte_else','if_condicional.py',18),
  ('Instrucao -> Atribuicao','Instrucao',1,'p_instrucao','body.py',18),
  ('Instrucao -> InstrucaoCondicional','Instrucao',1,'p_instrucao','body.py',19),
  ('Instrucao -> Bloco','Instrucao',1,'p_instrucao','body.py',20),
  ('GlobalInst -> Dvariaveis','GlobalInst',1,'p_globalinst','main_rules.py',17),
  ('Variaveis -> Variaveis , ID','Variaveis',3,'p_variaveis','declarations.py',19),
  ('Variaveis -> ID','Variaveis',1,'p_variaveis','declarations.py',20),
  ('Acesso_array -> Variavel_array [ Expressao ]','Acesso_array',4,'p_acesso_array','atribuicoes_rules.py',21),
  ('BlocoPrincipal -> BEGIN LocalInstsList END','BlocoPrincipal',3,'p_blocofinal','main_rules.py',23),
  ('Bloco -> BEGIN LocalInstsList END','Bloco',3,'p_bloco','body.py',26),
  ('Variavel_array -> ID','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',28),
  ('Variavel_array -> Acesso_array','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',29),
  ('SimboloCondicional -> =','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',28),
  ('SimboloCondicional -> < >','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',29),
  ('SimboloCondicional -> < =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',30),
  ('SimboloCondicional -> <','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',31),
  ('SimboloCondicional -> > =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',32),
  ('SimboloCondicional -> >','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',33),
  ('Tipo -> Datatype','Tipo',1,'p_tipo','declarations.py',30),
  ('Tipo -> ARRAY [ Intervalo ] OF Datatype','Tipo',6,'p_tipo','declarations.py',31),
  ('Tipo -> ID','Tipo',1,'p_tipo','declarations.py',32),
  ('PontoVirgOpc -> ;','PontoVirgOpc',1,'p_pontoVirgOpc','body.py',33),
  ('PontoVirgOpc -> <empty>','PontoVirgOpc',0,'p_pontoVirgOpc','body.py',34),
  ('Expressao -> Expressao + Termo','Expressao',3,'p_expressao','atribuicoes_rules.py',38),
  ('Expressao -> Expressao - Termo','Expressao',3,'p_expressao','atribuicoes_rules.py',39),
  ('Expressao -> Termo','Expressao',1,'p_expressao','atribuicoes_rules.py',40),
  ('Intervalo -> INTEGER . . INTEGER','Intervalo',4,'p_intervalo','declarations.py',46),
  ('Termo -> Termo * Fator','Termo',3,'p_termo','atribuicoes_rules.py',50),
  ('Termo -> Termo / Fator','Termo',3,'p_termo','atribuicoes_rules.py',51),
  ('Termo -> Fator','Termo',1,'p_termo','atribuicoes_rules.py',52),
  ('Datatype -> REAL_TYPE','Datatype',1,'p_datatype','declarations.py',53),
  ('Datatype -> INTEGER_TYPE','Datatype',1,'p_datatype','declarations.py',54),
  ('Datatype -> STRING_TYPE','Datatype',1,'p_datatype','declarations.py',55),
  ('Datatype -> BOOLEAN_TYPE','Datatype',1,'p_datatype','declarations.py',56),
  ('Datatype -> CHAR_TYPE','Datatype',1,'p_datatype','declarations.py',57),
  ('Fator -> ID','Fator',1,'p_fator','atribuicoes_rules.py',63),
  ('Fator -> REAL','Fator',1,'p_fator','atribuicoes_rules.py',64),
  ('Fator -> INTEGER','Fator',1,'p_fator','atribuicoes_rules.py',65),
  ('Fator -> STRING','Fator',1,'p_fator','atribuicoes_rules.py',66),
  ('Fator -> TRUE','Fator',1,'p_fator','atribuicoes_rules.py',67),
  ('Fator -> FALSE','Fator',1,'p_fator','atribuicoes_rules.py',68),
  ('Fator -> ( Expressao )','Fator',3,'p_fator','atribuicoes_rules.py',69),
  ('Fator -> Acesso_array','Fator',1,'p_fator','atribuicoes_rules.py',70),
]
