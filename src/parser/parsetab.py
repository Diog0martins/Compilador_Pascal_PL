
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ProgramaAND ARRAY BEGIN BOOLEAN_TYPE CASE CHAR_TYPE CONST DIFFERENT DIV DO DOWNTO ELSE END FALSE FILE FOR FUNCTION GOTO GREATEROREQUAL ID IF IN INTEGER INTEGER_TYPE KEYWORD LABEL LESSOREQUAL MOD MULTILINECOMMENTS NIL NOT OF ONELINECOMMENTS OR PACKED PROCEDURE PROGRAM REAL REAL_TYPE RECORD REPEAT SET STRING STRING_TYPE THEN TO TRUE TYPE UNTIL USES VAR WHILE WITHDvariaveis : VAR Listavariaveis\n    Atribuicao : Atribuido ':' '=' Expressao\n    \n    LocalInstsList : LocalInstsList ';' Instrucao\n    \n    Condicao : Condicao AND DeclaracaoCondicao\n             | Condicao OR DeclaracaoCondicao\n             | DeclaracaoCondicao\n             | '(' Condicao ')'\n    \n    InstrucaoCondicional : IF Condicao THEN BlocoCondicional ParteElse\n    \n    Duses : USES UseList ';'\n          | \n    \n    Programa : PROGRAM ID ';' Duses GlobalInsts BlocoPrincipal '.'\n    \n    Listavariaveis : Listavariaveis Variaveis ':' Tipo ';'\n                   | \n    \n    While : WHILE\n    \n    Atribuido : ID\n              | Acesso_array\n    \n    BlocoCondicional : LocalInstsList\n    \n    LocalInstsList : LocalInstsList ';'\n    \n    UseList : UseList ',' ID\n            | ID \n    \n    GlobalInsts : GlobalInsts GlobalInst\n                | \n    \n    DeclaracaoCondicao : Expressao SimboloCondicional Expressao\n                       | NOT Condicao\n                       | TRUE\n                       | FALSE\n    \n    ParteElse : ELSE LocalInstsList\n              | \n    GlobalInst : Dvariaveis\n    LocalInstsList : Instrucao\n    \n    Variaveis : Variaveis ',' ID\n              | ID\n    \n    Acesso_array : Variavel_array '[' Expressao ']'\n    \n    BlocoPrincipal : BEGIN LocalInstsList END\n    \n    Instrucao : While\n              | InstrucaoCondicional\n              | Bloco\n              | Atribuicao \n    \n    Variavel_array : ID\n                   | Acesso_array\n    \n    SimboloCondicional : '='\n                       | '<' '>'\n                       | '<' '='\n                       | '<'\n                       | '>' '='\n                       | '>'\n    \n    Tipo : Datatype\n         | ARRAY '[' Intervalo ']' OF Datatype\n         | ID\n    \n    Bloco : BEGIN LocalInstsList END\n    \n    Expressao : Expressao '+' Termo\n              | Expressao '-' Termo\n              | Termo\n    \n    Intervalo : INTEGER '.' '.' INTEGER\n    \n    Termo : Termo '*' Fator\n          | Termo '/' Fator\n          | Fator\n    \n    Datatype : REAL_TYPE\n             | INTEGER_TYPE\n             | STRING_TYPE\n             | BOOLEAN_TYPE\n             | CHAR_TYPE\n    \n    Fator : ID\n          | REAL\n          | INTEGER\n          | STRING\n          | TRUE\n          | FALSE \n          | '(' Expressao ')'\n          | Acesso_array\n    "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,17,],[0,-11,]),'ID':([2,6,12,14,16,18,26,31,35,38,40,51,56,57,58,61,62,63,64,65,66,68,69,70,74,75,76,86,87,88,105,106,],[3,9,28,-13,32,28,45,53,28,45,45,45,28,45,45,45,45,45,-41,-44,-46,45,45,45,45,97,103,-42,-43,-45,28,-12,]),';':([3,8,9,19,20,21,22,23,24,25,32,33,35,43,44,45,46,47,48,49,54,55,72,73,77,78,82,84,85,89,90,91,92,94,95,97,98,99,100,101,102,104,108,115,],[4,15,-20,35,-30,-35,-36,-37,-38,-14,-19,35,-18,-53,-57,-63,-64,-65,-66,-70,-50,-3,-67,-68,-28,35,-69,-51,-52,-55,-56,-2,-33,106,-47,-49,-58,-59,-60,-61,-62,-8,35,-48,]),'USES':([4,],[6,]),'BEGIN':([4,5,7,11,12,13,14,15,18,31,35,56,105,106,],[-10,-22,12,-21,18,-29,-13,-9,18,-1,18,18,18,-12,]),'VAR':([4,5,7,11,13,14,15,31,106,],[-10,-22,14,-21,-29,-13,-9,-1,-12,]),',':([8,9,32,52,53,103,],[16,-20,-19,76,-32,-31,]),'.':([10,34,110,112,],[17,-34,112,114,]),'WHILE':([12,18,35,56,105,],[25,25,25,25,25,]),'IF':([12,18,35,56,105,],[26,26,26,26,26,]),'END':([19,20,21,22,23,24,25,33,35,43,44,45,46,47,48,49,54,55,72,73,77,78,82,84,85,89,90,91,92,104,108,],[34,-30,-35,-36,-37,-38,-14,54,-18,-53,-57,-63,-64,-65,-66,-70,-50,-3,-67,-68,-28,-17,-69,-51,-52,-55,-56,-2,-33,-8,-27,]),'ELSE':([20,21,22,23,24,25,35,43,44,45,46,47,48,49,54,55,72,73,77,78,82,84,85,89,90,91,92,104,108,],[-30,-35,-36,-37,-38,-14,-18,-53,-57,-63,-64,-65,-66,-70,-50,-3,-67,-68,105,-17,-69,-51,-52,-55,-56,-2,-33,-8,-27,]),'(':([26,38,40,51,57,58,61,62,63,64,65,66,68,69,70,74,86,87,88,],[38,38,38,74,74,74,74,74,74,-41,-44,-46,74,74,74,74,-42,-43,-45,]),'NOT':([26,38,40,57,58,],[40,40,40,40,40,]),'TRUE':([26,38,40,51,57,58,61,62,63,64,65,66,68,69,70,74,86,87,88,],[41,41,41,72,41,41,72,72,72,-41,-44,-46,72,72,72,72,-42,-43,-45,]),'FALSE':([26,38,40,51,57,58,61,62,63,64,65,66,68,69,70,74,86,87,88,],[42,42,42,73,42,42,73,73,73,-41,-44,-46,73,73,73,73,-42,-43,-45,]),'REAL':([26,38,40,51,57,58,61,62,63,64,65,66,68,69,70,74,86,87,88,],[46,46,46,46,46,46,46,46,46,-41,-44,-46,46,46,46,46,-42,-43,-45,]),'INTEGER':([26,38,40,51,57,58,61,62,63,64,65,66,68,69,70,74,86,87,88,107,114,],[47,47,47,47,47,47,47,47,47,-41,-44,-46,47,47,47,47,-42,-43,-45,110,116,]),'STRING':([26,38,40,51,57,58,61,62,63,64,65,66,68,69,70,74,86,87,88,],[48,48,48,48,48,48,48,48,48,-41,-44,-46,48,48,48,48,-42,-43,-45,]),':':([27,28,29,52,53,92,103,],[50,-15,-16,75,-32,-33,-31,]),'[':([28,29,30,45,49,92,96,],[-39,-40,51,-39,-40,-33,107,]),'THEN':([36,37,41,42,43,44,45,46,47,48,49,67,72,73,79,80,81,82,83,84,85,89,90,92,],[56,-6,-25,-26,-53,-57,-63,-64,-65,-66,-70,-24,-67,-68,-4,-5,-7,-69,-23,-51,-52,-55,-56,-33,]),'AND':([36,37,41,42,43,44,45,46,47,48,49,59,67,72,73,79,80,81,82,83,84,85,89,90,92,],[57,-6,-25,-26,-53,-57,-63,-64,-65,-66,-70,57,57,-67,-68,-4,-5,-7,-69,-23,-51,-52,-55,-56,-33,]),'OR':([36,37,41,42,43,44,45,46,47,48,49,59,67,72,73,79,80,81,82,83,84,85,89,90,92,],[58,-6,-25,-26,-53,-57,-63,-64,-65,-66,-70,58,58,-67,-68,-4,-5,-7,-69,-23,-51,-52,-55,-56,-33,]),')':([37,41,42,43,44,45,46,47,48,49,59,60,67,72,73,79,80,81,82,83,84,85,89,90,92,93,],[-6,-25,-26,-53,-57,-63,-64,-65,-66,-70,81,82,-24,-67,-68,-4,-5,-7,-69,-23,-51,-52,-55,-56,-33,82,]),'+':([39,41,42,43,44,45,46,47,48,49,60,71,72,73,82,83,84,85,89,90,91,92,93,],[62,-67,-68,-53,-57,-63,-64,-65,-66,-70,62,62,-67,-68,-69,62,-51,-52,-55,-56,62,-33,62,]),'-':([39,41,42,43,44,45,46,47,48,49,60,71,72,73,82,83,84,85,89,90,91,92,93,],[63,-67,-68,-53,-57,-63,-64,-65,-66,-70,63,63,-67,-68,-69,63,-51,-52,-55,-56,63,-33,63,]),'=':([39,41,42,43,44,45,46,47,48,49,50,60,65,66,72,73,82,84,85,89,90,92,],[64,-67,-68,-53,-57,-63,-64,-65,-66,-70,70,64,87,88,-67,-68,-69,-51,-52,-55,-56,-33,]),'<':([39,41,42,43,44,45,46,47,48,49,60,72,73,82,84,85,89,90,92,],[65,-67,-68,-53,-57,-63,-64,-65,-66,-70,65,-67,-68,-69,-51,-52,-55,-56,-33,]),'>':([39,41,42,43,44,45,46,47,48,49,60,65,72,73,82,84,85,89,90,92,],[66,-67,-68,-53,-57,-63,-64,-65,-66,-70,66,86,-67,-68,-69,-51,-52,-55,-56,-33,]),'*':([41,42,43,44,45,46,47,48,49,72,73,82,84,85,89,90,92,],[-67,-68,68,-57,-63,-64,-65,-66,-70,-67,-68,-69,68,68,-55,-56,-33,]),'/':([41,42,43,44,45,46,47,48,49,72,73,82,84,85,89,90,92,],[-67,-68,69,-57,-63,-64,-65,-66,-70,-67,-68,-69,69,69,-55,-56,-33,]),']':([43,44,45,46,47,48,49,71,72,73,82,84,85,89,90,92,109,116,],[-53,-57,-63,-64,-65,-66,-70,92,-67,-68,-69,-51,-52,-55,-56,-33,111,-54,]),'ARRAY':([75,],[96,]),'REAL_TYPE':([75,113,],[98,98,]),'INTEGER_TYPE':([75,113,],[99,99,]),'STRING_TYPE':([75,113,],[100,100,]),'BOOLEAN_TYPE':([75,113,],[101,101,]),'CHAR_TYPE':([75,113,],[102,102,]),'OF':([111,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Duses':([4,],[5,]),'GlobalInsts':([5,],[7,]),'UseList':([6,],[8,]),'BlocoPrincipal':([7,],[10,]),'GlobalInst':([7,],[11,]),'Dvariaveis':([7,],[13,]),'LocalInstsList':([12,18,56,105,],[19,33,78,108,]),'Instrucao':([12,18,35,56,105,],[20,20,55,20,20,]),'While':([12,18,35,56,105,],[21,21,21,21,21,]),'InstrucaoCondicional':([12,18,35,56,105,],[22,22,22,22,22,]),'Bloco':([12,18,35,56,105,],[23,23,23,23,23,]),'Atribuicao':([12,18,35,56,105,],[24,24,24,24,24,]),'Atribuido':([12,18,35,56,105,],[27,27,27,27,27,]),'Acesso_array':([12,18,26,35,38,40,51,56,57,58,61,62,63,68,69,70,74,105,],[29,29,49,29,49,49,49,29,49,49,49,49,49,49,49,49,49,29,]),'Variavel_array':([12,18,26,35,38,40,51,56,57,58,61,62,63,68,69,70,74,105,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'Listavariaveis':([14,],[31,]),'Condicao':([26,38,40,],[36,59,67,]),'DeclaracaoCondicao':([26,38,40,57,58,],[37,37,37,79,80,]),'Expressao':([26,38,40,51,57,58,61,70,74,],[39,60,39,71,39,39,83,91,93,]),'Termo':([26,38,40,51,57,58,61,62,63,70,74,],[43,43,43,43,43,43,43,84,85,43,43,]),'Fator':([26,38,40,51,57,58,61,62,63,68,69,70,74,],[44,44,44,44,44,44,44,44,44,89,90,44,44,]),'Variaveis':([31,],[52,]),'SimboloCondicional':([39,60,],[61,61,]),'BlocoCondicional':([56,],[77,]),'Tipo':([75,],[94,]),'Datatype':([75,113,],[95,115,]),'ParteElse':([77,],[104,]),'Intervalo':([107,],[109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Dvariaveis -> VAR Listavariaveis','Dvariaveis',2,'p_dvariaveis','declarations.py',2),
  ('Atribuicao -> Atribuido : = Expressao','Atribuicao',4,'p_atribuicao','atribuicoes_rules.py',5),
  ('LocalInstsList -> LocalInstsList ; Instrucao','LocalInstsList',3,'p_localinstslist_multiple','body.py',5),
  ('Condicao -> Condicao AND DeclaracaoCondicao','Condicao',3,'p_Condicao','condicoes_rules.py',5),
  ('Condicao -> Condicao OR DeclaracaoCondicao','Condicao',3,'p_Condicao','condicoes_rules.py',6),
  ('Condicao -> DeclaracaoCondicao','Condicao',1,'p_Condicao','condicoes_rules.py',7),
  ('Condicao -> ( Condicao )','Condicao',3,'p_Condicao','condicoes_rules.py',8),
  ('InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse','InstrucaoCondicional',5,'p_instrucao_condicional','if_condicional.py',5),
  ('Duses -> USES UseList ;','Duses',3,'p_duses','declaracao_uses_rules.py',6),
  ('Duses -> <empty>','Duses',0,'p_duses','declaracao_uses_rules.py',7),
  ('Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .','Programa',7,'p_programa','main_rules.py',6),
  ('Listavariaveis -> Listavariaveis Variaveis : Tipo ;','Listavariaveis',5,'p_listavariaveis','declarations.py',8),
  ('Listavariaveis -> <empty>','Listavariaveis',0,'p_listavariaveis','declarations.py',9),
  ('While -> WHILE','While',1,'p_While','loops.py',8),
  ('Atribuido -> ID','Atribuido',1,'p_atribuido','atribuicoes_rules.py',11),
  ('Atribuido -> Acesso_array','Atribuido',1,'p_atribuido','atribuicoes_rules.py',12),
  ('BlocoCondicional -> LocalInstsList','BlocoCondicional',1,'p_bloco_condicional','if_condicional.py',11),
  ('LocalInstsList -> LocalInstsList ;','LocalInstsList',2,'p_localinstslist_terminada','body.py',12),
  ('UseList -> UseList , ID','UseList',3,'p_uselist','declaracao_uses_rules.py',12),
  ('UseList -> ID','UseList',1,'p_uselist','declaracao_uses_rules.py',13),
  ('GlobalInsts -> GlobalInsts GlobalInst','GlobalInsts',2,'p_globalinsts','main_rules.py',12),
  ('GlobalInsts -> <empty>','GlobalInsts',0,'p_globalinsts','main_rules.py',13),
  ('DeclaracaoCondicao -> Expressao SimboloCondicional Expressao','DeclaracaoCondicao',3,'p_DeclaracaoCondicao','condicoes_rules.py',14),
  ('DeclaracaoCondicao -> NOT Condicao','DeclaracaoCondicao',2,'p_DeclaracaoCondicao','condicoes_rules.py',15),
  ('DeclaracaoCondicao -> TRUE','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',16),
  ('DeclaracaoCondicao -> FALSE','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',17),
  ('ParteElse -> ELSE LocalInstsList','ParteElse',2,'p_parte_else','if_condicional.py',17),
  ('ParteElse -> <empty>','ParteElse',0,'p_parte_else','if_condicional.py',18),
  ('GlobalInst -> Dvariaveis','GlobalInst',1,'p_globalinst','main_rules.py',17),
  ('LocalInstsList -> Instrucao','LocalInstsList',1,'p_localinstslist_single','body.py',19),
  ('Variaveis -> Variaveis , ID','Variaveis',3,'p_variaveis','declarations.py',19),
  ('Variaveis -> ID','Variaveis',1,'p_variaveis','declarations.py',20),
  ('Acesso_array -> Variavel_array [ Expressao ]','Acesso_array',4,'p_acesso_array','atribuicoes_rules.py',21),
  ('BlocoPrincipal -> BEGIN LocalInstsList END','BlocoPrincipal',3,'p_blocofinal','main_rules.py',23),
  ('Instrucao -> While','Instrucao',1,'p_instrucao','body.py',26),
  ('Instrucao -> InstrucaoCondicional','Instrucao',1,'p_instrucao','body.py',27),
  ('Instrucao -> Bloco','Instrucao',1,'p_instrucao','body.py',28),
  ('Instrucao -> Atribuicao','Instrucao',1,'p_instrucao','body.py',29),
  ('Variavel_array -> ID','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',28),
  ('Variavel_array -> Acesso_array','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',29),
  ('SimboloCondicional -> =','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',28),
  ('SimboloCondicional -> < >','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',29),
  ('SimboloCondicional -> < =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',30),
  ('SimboloCondicional -> <','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',31),
  ('SimboloCondicional -> > =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',32),
  ('SimboloCondicional -> >','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',33),
  ('Tipo -> Datatype','Tipo',1,'p_tipo','declarations.py',30),
  ('Tipo -> ARRAY [ Intervalo ] OF Datatype','Tipo',6,'p_tipo','declarations.py',31),
  ('Tipo -> ID','Tipo',1,'p_tipo','declarations.py',32),
  ('Bloco -> BEGIN LocalInstsList END','Bloco',3,'p_bloco','body.py',36),
  ('Expressao -> Expressao + Termo','Expressao',3,'p_expressao','atribuicoes_rules.py',38),
  ('Expressao -> Expressao - Termo','Expressao',3,'p_expressao','atribuicoes_rules.py',39),
  ('Expressao -> Termo','Expressao',1,'p_expressao','atribuicoes_rules.py',40),
  ('Intervalo -> INTEGER . . INTEGER','Intervalo',4,'p_intervalo','declarations.py',46),
  ('Termo -> Termo * Fator','Termo',3,'p_termo','atribuicoes_rules.py',50),
  ('Termo -> Termo / Fator','Termo',3,'p_termo','atribuicoes_rules.py',51),
  ('Termo -> Fator','Termo',1,'p_termo','atribuicoes_rules.py',52),
  ('Datatype -> REAL_TYPE','Datatype',1,'p_datatype','declarations.py',53),
  ('Datatype -> INTEGER_TYPE','Datatype',1,'p_datatype','declarations.py',54),
  ('Datatype -> STRING_TYPE','Datatype',1,'p_datatype','declarations.py',55),
  ('Datatype -> BOOLEAN_TYPE','Datatype',1,'p_datatype','declarations.py',56),
  ('Datatype -> CHAR_TYPE','Datatype',1,'p_datatype','declarations.py',57),
  ('Fator -> ID','Fator',1,'p_fator','atribuicoes_rules.py',63),
  ('Fator -> REAL','Fator',1,'p_fator','atribuicoes_rules.py',64),
  ('Fator -> INTEGER','Fator',1,'p_fator','atribuicoes_rules.py',65),
  ('Fator -> STRING','Fator',1,'p_fator','atribuicoes_rules.py',66),
  ('Fator -> TRUE','Fator',1,'p_fator','atribuicoes_rules.py',67),
  ('Fator -> FALSE','Fator',1,'p_fator','atribuicoes_rules.py',68),
  ('Fator -> ( Expressao )','Fator',3,'p_fator','atribuicoes_rules.py',69),
  ('Fator -> Acesso_array','Fator',1,'p_fator','atribuicoes_rules.py',70),
]
