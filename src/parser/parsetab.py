
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ProgramaAND ARRAY BEGIN BOOLEAN_TYPE CASE CHAR_TYPE CONST DIFFERENT DIV DO DOWNTO ELSE END FALSE FILE FOR FUNCTION GOTO ID IF IN INTEGER INTEGER_TYPE KEYWORD LABEL MOD MULTILINECOMMENTS NIL NOT OF ONELINECOMMENTS OR PACKED PROCEDURE PROGRAM REAL REAL_TYPE RECORD REPEAT SET STRING STRING_TYPE THEN TO TRUE TYPE UNTIL USES VAR WHILE WITH\n    LocalInstsList : LocalInstsList ';' Instrucao\n    \n    Condicao : Condicao AND Condicao\n             | Condicao OR Condicao\n             | NOT Condicao\n             | DeclaracaoCondicao\n             | '(' Condicao ')'\n    Dvariaveis : VAR Listavariaveis\n    Duses : USES UseList ';'\n          | \n    \n    Programa : PROGRAM ID ';' Duses GlobalInsts BlocoPrincipal '.'\n    \n    InstrucaoCondicional : IF Condicao THEN BlocoCondicional ParteElse\n    \n    Atribuicao : Atribuido ':' '=' Expressao\n    \n    Dfuncao : FuncDec BufferVar BEGIN LocalInstsList END ';'\n    \n    LocalInstsList : LocalInstsList ';'\n    \n    Listavariaveis : Listavariaveis Variaveis ':' Tipo ';'\n                   | \n    \n    UseList : UseList ',' ID\n            | ID \n    \n    While : WHILE Condicao DO Instrucao\n    \n    LocalInstsList : Instrucao \n    \n    Instrucao : While\n              | CicloFor\n              | InstrucaoCondicional\n              | Atribuicao \n              | Expressao\n    \n    GlobalInsts : GlobalInsts GlobalInst\n                | \n    \n    BlocoCondicional : Instrucao\n    \n    DeclaracaoCondicao : Expressao SimboloCondicional Expressao\n                       | Expressao\n    \n    GlobalInst : Dfuncao\n               | Dprocedimento\n    \n     Instrucao : Bloco\n     \n    ParteElse : ELSE Instrucao\n              | \n    \n    GlobalInst : Dvariaveis\n    \n    CicloFor : FOR Atribuicao DirecaoFor Expressao DO Instrucao\n    \n    Bloco : BEGIN LocalInstsList END \n    \n    BlocoPrincipal : BEGIN LocalInstsList END\n    \n    BufferVar : BufferVar Dvariaveis\n              |\n    \n    Variaveis : Variaveis ',' ID\n              | ID\n    \n    Tipo : Datatype\n         | ARRAY '[' Intervalo ']' OF Datatype\n         | ID\n    \n    FuncReturn : ID ':' '=' Expressao ';'\n    \n    FuncDec : Cabeca ArgumentosSetter ':' Tipo ';'\n    \n    Intervalo : INTEGER '.' '.' INTEGER\n    \n    Datatype : REAL_TYPE\n             | INTEGER_TYPE\n             | STRING_TYPE\n             | BOOLEAN_TYPE\n             | CHAR_TYPE\n    \n    SimboloCondicional : '='\n                       | '<' '>'\n                       | '<' '='\n                       | '<'\n                       | '>' '='\n                       | '>'\n    \n    Cabeca : FUNCTION ID\n    \n    Dprocedimento : PROCEDURE ID ArgumentosProcedimentoOpc ';' GlobalInsts BEGIN LocalInstsList END ';'\n    \n    ArgumentosProcedimentoOpc : ArgumentosSetter\n                              | \n    \n    ArgumentosGetter : '(' ArgumentosGetterInit ')'\n    \n    Atribuido : ID\n              | Acesso_array\n    \n    DirecaoFor : TO\n               | DOWNTO\n    \n    ArgumentosGetterInit : ArgumentosGetterBuffer Expressao\n                           | \n    \n    Acesso_array : Variavel_array '[' Expressao ']'\n    \n    ArgumentosGetterBuffer : ArgumentosGetterBuffer Expressao ','\n                           | \n    \n    ArgumentosSetter : '(' ArgumentosSetterBuffer ')'\n    \n    Variavel_array : ID\n                   | Acesso_array\n    \n    Expressao : Expressao '+' Termo\n              | Expressao '-' Termo\n    \n    ArgumentosSetterBuffer : ArgumentosSetterBuffer ',' Argumento\n                           | Argumento\n                           | \n    \n    Expressao : Termo\n    \n    Argumento : OutrosArgumentos ID ':' Tipo\n    \n    Termo : Termo '*' Fator\n          | Termo MOD Fator\n          | Termo DIV Fator\n    \n    OutrosArgumentos : OutrosArgumentos ID ','\n                     | \n    \n    Termo : Fator\n    Fator : ID\n    Fator : INTEGER\n    \n    Fator : REAL\n    \n    Fator : STRING\n    \n    Fator : TRUE\n    \n    Fator : FALSE\n    \n    Fator : '(' Expressao ')'\n    \n    Fator : Acesso_array\n    \n    Fator : ChamadaFuncao\n    \n    ChamadaFuncao : ID ArgumentosGetter\n    \n    ArgumentosGetter : '(' ListaArgumentos ')'\n                     | '(' ')'\n    \n    ListaArgumentos : ListaArgumentos ',' Expressao\n                    | Expressao\n    "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,23,],[0,-10,]),'ID':([2,6,12,17,18,20,22,24,33,34,35,47,51,53,58,59,60,62,64,73,74,75,77,78,80,86,89,94,95,96,100,101,102,103,104,105,106,107,108,115,121,122,133,140,141,142,149,159,160,161,163,165,167,168,],[3,9,38,50,-16,54,55,38,66,69,66,66,85,-89,38,66,66,66,66,66,66,66,66,66,38,126,134,38,66,66,66,-55,-58,-60,66,-68,-69,38,66,66,126,155,-89,-56,-57,-59,66,126,-88,38,38,-73,38,-15,]),';':([3,8,9,25,26,27,28,29,30,31,32,37,38,39,40,42,43,44,45,46,48,50,55,56,58,66,67,76,82,83,90,91,92,93,109,110,111,113,118,119,123,124,126,127,128,129,130,131,132,135,144,145,146,147,148,151,152,154,162,172,173,174,177,181,],[4,21,-18,58,-20,-21,-22,-23,-24,-25,-33,-83,-91,-98,-90,-92,-93,-94,-95,-96,-99,-64,-17,58,-14,-91,-98,-100,120,-63,-38,-1,-78,-79,-85,-86,-87,-102,-97,58,156,-44,-46,-50,-51,-52,-53,-54,-75,-19,-35,-28,-12,-65,-101,-72,166,168,-11,-37,-34,58,180,-45,]),'USES':([4,],[6,]),'BEGIN':([4,5,7,11,12,13,14,15,16,18,21,24,49,51,58,80,81,94,107,120,153,156,161,163,166,167,168,180,],[-9,-27,12,-26,24,-31,-32,-36,-41,-16,-8,24,80,-7,24,24,-40,24,24,-27,167,-48,24,24,-13,24,-15,-62,]),'PROCEDURE':([4,5,7,11,13,14,15,18,21,51,120,153,166,168,180,],[-9,-27,17,-26,-31,-32,-36,-16,-8,-7,-27,17,-13,-15,-62,]),'VAR':([4,5,7,11,13,14,15,16,18,21,49,51,81,120,153,156,166,168,180,],[-9,-27,18,-26,-31,-32,-36,-41,-16,-8,18,-7,-40,-27,18,-48,-13,-15,-62,]),'FUNCTION':([4,5,7,11,13,14,15,18,21,51,120,153,166,168,180,],[-9,-27,20,-26,-31,-32,-36,-16,-8,-7,-27,20,-13,-15,-62,]),',':([8,9,37,40,42,43,44,45,46,48,53,55,66,67,76,84,85,87,88,92,93,109,110,111,113,114,116,118,124,126,127,128,129,130,131,134,147,148,150,151,155,158,164,171,181,],[22,-18,-83,-90,-92,-93,-94,-95,-96,-99,-82,-17,-91,-98,-100,122,-43,133,-81,-78,-79,-85,-86,-87,-102,149,-104,-97,-44,-46,-50,-51,-52,-53,-54,160,-65,-101,165,-72,-42,-80,-103,-84,-45,]),'.':([10,57,170,176,],[23,-39,176,179,]),'WHILE':([12,24,58,80,94,107,161,163,167,],[33,33,33,33,33,33,33,33,33,]),'FOR':([12,24,58,80,94,107,161,163,167,],[34,34,34,34,34,34,34,34,34,]),'IF':([12,24,58,80,94,107,161,163,167,],[35,35,35,35,35,35,35,35,35,]),'INTEGER':([12,24,33,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,101,102,103,104,105,106,107,108,115,140,141,142,149,157,161,163,165,167,179,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-55,-58,-60,42,-68,-69,42,42,42,-56,-57,-59,42,170,42,42,-73,42,182,]),'REAL':([12,24,33,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,101,102,103,104,105,106,107,108,115,140,141,142,149,161,163,165,167,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-55,-58,-60,43,-68,-69,43,43,43,-56,-57,-59,43,43,43,-73,43,]),'STRING':([12,24,33,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,101,102,103,104,105,106,107,108,115,140,141,142,149,161,163,165,167,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-55,-58,-60,44,-68,-69,44,44,44,-56,-57,-59,44,44,44,-73,44,]),'TRUE':([12,24,33,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,101,102,103,104,105,106,107,108,115,140,141,142,149,161,163,165,167,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-55,-58,-60,45,-68,-69,45,45,45,-56,-57,-59,45,45,45,-73,45,]),'FALSE':([12,24,33,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,101,102,103,104,105,106,107,108,115,140,141,142,149,161,163,165,167,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-55,-58,-60,46,-68,-69,46,46,46,-56,-57,-59,46,46,46,-73,46,]),'(':([12,19,24,33,35,38,47,50,54,58,59,60,62,64,66,73,74,75,77,78,80,94,95,96,100,101,102,103,104,105,106,107,108,115,140,141,142,149,161,163,165,167,],[47,53,47,64,64,77,47,53,-61,47,47,47,64,64,77,47,47,47,47,47,47,47,64,64,47,-55,-58,-60,47,-68,-69,47,47,47,-56,-57,-59,47,47,47,-73,47,]),'END':([25,26,27,28,29,30,31,32,37,38,39,40,42,43,44,45,46,48,56,58,66,67,76,90,91,92,93,109,110,111,113,118,119,135,144,145,146,147,148,151,162,172,173,174,],[57,-20,-21,-22,-23,-24,-25,-33,-83,-91,-98,-90,-92,-93,-94,-95,-96,-99,90,-14,-91,-98,-100,-38,-1,-78,-79,-85,-86,-87,-102,-97,152,-19,-35,-28,-12,-65,-101,-72,-11,-37,-34,177,]),'ELSE':([27,28,29,30,31,32,37,38,39,40,42,43,44,45,46,48,66,67,76,90,92,93,109,110,111,113,118,135,144,145,146,147,148,151,162,172,173,],[-21,-22,-23,-24,-25,-33,-83,-91,-98,-90,-92,-93,-94,-95,-96,-99,-91,-98,-100,-38,-78,-79,-85,-86,-87,-102,-97,-19,163,-28,-12,-65,-101,-72,-11,-37,-34,]),'+':([31,37,38,39,40,42,43,44,45,46,48,65,66,67,76,79,92,93,99,109,110,111,113,116,117,118,139,143,146,147,148,150,151,164,],[59,-83,-91,-98,-90,-92,-93,-94,-95,-96,-99,59,-91,-98,-100,59,-78,-79,59,-85,-86,-87,-102,59,59,-97,59,59,59,-65,-101,59,-72,59,]),'-':([31,37,38,39,40,42,43,44,45,46,48,65,66,67,76,79,92,93,99,109,110,111,113,116,117,118,139,143,146,147,148,150,151,164,],[60,-83,-91,-98,-90,-92,-93,-94,-95,-96,-99,60,-91,-98,-100,60,-78,-79,60,-85,-86,-87,-102,60,60,-97,60,60,60,-65,-101,60,-72,60,]),'NOT':([33,35,62,64,95,96,],[62,62,62,62,62,62,]),':':([36,38,39,52,69,70,84,85,132,134,151,155,],[72,-66,-67,86,-66,-67,121,-43,-75,159,-72,-42,]),'=':([37,40,42,43,44,45,46,48,65,66,67,72,76,92,93,99,102,103,109,110,111,113,118,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,101,-91,-98,108,-100,-78,-79,101,141,142,-85,-86,-87,-102,-97,-65,-101,-72,]),'<':([37,40,42,43,44,45,46,48,65,66,67,76,92,93,99,109,110,111,113,118,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,102,-91,-98,-100,-78,-79,102,-85,-86,-87,-102,-97,-65,-101,-72,]),'>':([37,40,42,43,44,45,46,48,65,66,67,76,92,93,99,102,109,110,111,113,118,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,103,-91,-98,-100,-78,-79,103,140,-85,-86,-87,-102,-97,-65,-101,-72,]),'DO':([37,40,42,43,44,45,46,48,61,63,65,66,67,76,92,93,97,109,110,111,113,118,136,137,138,139,143,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,94,-5,-30,-91,-98,-100,-78,-79,-4,-85,-86,-87,-102,-97,-2,-3,-6,-29,161,-65,-101,-72,]),'AND':([37,40,42,43,44,45,46,48,61,63,65,66,67,71,76,92,93,97,98,99,109,110,111,113,118,136,137,138,139,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,95,-5,-30,-91,-98,95,-100,-78,-79,95,95,-30,-85,-86,-87,-102,-97,95,95,-6,-29,-65,-101,-72,]),'OR':([37,40,42,43,44,45,46,48,61,63,65,66,67,71,76,92,93,97,98,99,109,110,111,113,118,136,137,138,139,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,96,-5,-30,-91,-98,96,-100,-78,-79,96,96,-30,-85,-86,-87,-102,-97,96,96,-6,-29,-65,-101,-72,]),'THEN':([37,40,42,43,44,45,46,48,63,65,66,67,71,76,92,93,97,109,110,111,113,118,136,137,138,139,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,-5,-30,-91,-98,107,-100,-78,-79,-4,-85,-86,-87,-102,-97,-2,-3,-6,-29,-65,-101,-72,]),')':([37,40,42,43,44,45,46,48,53,63,65,66,67,76,77,79,87,88,92,93,97,98,99,109,110,111,112,113,114,116,118,124,126,127,128,129,130,131,136,137,138,139,147,148,150,151,158,164,171,181,],[-83,-90,-92,-93,-94,-95,-96,-99,-82,-5,-30,-91,-98,-100,113,118,132,-81,-78,-79,-4,138,118,-85,-86,-87,147,-102,148,-104,-97,-44,-46,-50,-51,-52,-53,-54,-2,-3,-6,-29,-65,-101,-70,-72,-80,-103,-84,-45,]),']':([37,40,42,43,44,45,46,48,66,67,76,92,93,109,110,111,113,117,118,147,148,151,169,182,],[-83,-90,-92,-93,-94,-95,-96,-99,-91,-98,-100,-78,-79,-85,-86,-87,-102,151,-97,-65,-101,-72,175,-49,]),'TO':([37,40,42,43,44,45,46,48,66,67,68,76,92,93,109,110,111,113,118,146,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,-91,-98,105,-100,-78,-79,-85,-86,-87,-102,-97,-12,-65,-101,-72,]),'DOWNTO':([37,40,42,43,44,45,46,48,66,67,68,76,92,93,109,110,111,113,118,146,147,148,151,],[-83,-90,-92,-93,-94,-95,-96,-99,-91,-98,106,-100,-78,-79,-85,-86,-87,-102,-97,-12,-65,-101,-72,]),'*':([37,38,39,40,42,43,44,45,46,48,66,67,76,92,93,109,110,111,113,118,147,148,151,],[73,-91,-98,-90,-92,-93,-94,-95,-96,-99,-91,-98,-100,73,73,-85,-86,-87,-102,-97,-65,-101,-72,]),'MOD':([37,38,39,40,42,43,44,45,46,48,66,67,76,92,93,109,110,111,113,118,147,148,151,],[74,-91,-98,-90,-92,-93,-94,-95,-96,-99,-91,-98,-100,74,74,-85,-86,-87,-102,-97,-65,-101,-72,]),'DIV':([37,38,39,40,42,43,44,45,46,48,66,67,76,92,93,109,110,111,113,118,147,148,151,],[75,-91,-98,-90,-92,-93,-94,-95,-96,-99,-91,-98,-100,75,75,-85,-86,-87,-102,-97,-65,-101,-72,]),'[':([38,39,41,66,67,69,70,125,151,],[-76,-77,78,-76,-77,-76,-77,157,-72,]),'ARRAY':([86,121,159,],[125,125,125,]),'REAL_TYPE':([86,121,159,178,],[127,127,127,127,]),'INTEGER_TYPE':([86,121,159,178,],[128,128,128,128,]),'STRING_TYPE':([86,121,159,178,],[129,129,129,129,]),'BOOLEAN_TYPE':([86,121,159,178,],[130,130,130,130,]),'CHAR_TYPE':([86,121,159,178,],[131,131,131,131,]),'OF':([175,],[178,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Duses':([4,],[5,]),'GlobalInsts':([5,120,],[7,153,]),'UseList':([6,],[8,]),'BlocoPrincipal':([7,],[10,]),'GlobalInst':([7,153,],[11,11,]),'Dfuncao':([7,153,],[13,13,]),'Dprocedimento':([7,153,],[14,14,]),'Dvariaveis':([7,49,153,],[15,81,15,]),'FuncDec':([7,153,],[16,16,]),'Cabeca':([7,153,],[19,19,]),'LocalInstsList':([12,24,80,167,],[25,56,119,174,]),'Instrucao':([12,24,58,80,94,107,161,163,167,],[26,26,91,26,135,145,172,173,26,]),'While':([12,24,58,80,94,107,161,163,167,],[27,27,27,27,27,27,27,27,27,]),'CicloFor':([12,24,58,80,94,107,161,163,167,],[28,28,28,28,28,28,28,28,28,]),'InstrucaoCondicional':([12,24,58,80,94,107,161,163,167,],[29,29,29,29,29,29,29,29,29,]),'Atribuicao':([12,24,34,58,80,94,107,161,163,167,],[30,30,68,30,30,30,30,30,30,30,]),'Expressao':([12,24,33,35,47,58,62,64,77,78,80,94,95,96,100,104,107,108,115,149,161,163,167,],[31,31,65,65,79,31,65,99,116,117,31,31,65,65,139,143,31,146,150,164,31,31,31,]),'Bloco':([12,24,58,80,94,107,161,163,167,],[32,32,32,32,32,32,32,32,32,]),'Atribuido':([12,24,34,58,80,94,107,161,163,167,],[36,36,36,36,36,36,36,36,36,36,]),'Termo':([12,24,33,35,47,58,59,60,62,64,77,78,80,94,95,96,100,104,107,108,115,149,161,163,167,],[37,37,37,37,37,37,92,93,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'Acesso_array':([12,24,33,34,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,104,107,108,115,149,161,163,167,],[39,39,67,70,67,67,39,67,67,67,67,67,67,67,67,67,39,39,67,67,67,67,39,67,67,67,39,39,39,]),'Fator':([12,24,33,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,104,107,108,115,149,161,163,167,],[40,40,40,40,40,40,40,40,40,40,109,110,111,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'Variavel_array':([12,24,33,34,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,104,107,108,115,149,161,163,167,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'ChamadaFuncao':([12,24,33,35,47,58,59,60,62,64,73,74,75,77,78,80,94,95,96,100,104,107,108,115,149,161,163,167,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'BufferVar':([16,],[49,]),'Listavariaveis':([18,],[51,]),'ArgumentosSetter':([19,50,],[52,83,]),'Condicao':([33,35,62,64,95,96,],[61,71,97,98,136,137,]),'DeclaracaoCondicao':([33,35,62,64,95,96,],[63,63,63,63,63,63,]),'ArgumentosGetter':([38,66,],[76,76,]),'ArgumentosProcedimentoOpc':([50,],[82,]),'Variaveis':([51,],[84,]),'ArgumentosSetterBuffer':([53,],[87,]),'Argumento':([53,133,],[88,158,]),'OutrosArgumentos':([53,133,],[89,89,]),'SimboloCondicional':([65,99,],[100,100,]),'DirecaoFor':([68,],[104,]),'ArgumentosGetterInit':([77,],[112,]),'ListaArgumentos':([77,],[114,]),'ArgumentosGetterBuffer':([77,],[115,]),'Tipo':([86,121,159,],[123,154,171,]),'Datatype':([86,121,159,178,],[124,124,124,181,]),'BlocoCondicional':([107,],[144,]),'ParteElse':([144,],[162,]),'Intervalo':([157,],[169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('LocalInstsList -> LocalInstsList ; Instrucao','LocalInstsList',3,'p_localinstslist_multiple','body.py',5),
  ('Condicao -> Condicao AND Condicao','Condicao',3,'p_Condicao','condicoes_rules.py',5),
  ('Condicao -> Condicao OR Condicao','Condicao',3,'p_Condicao','condicoes_rules.py',6),
  ('Condicao -> NOT Condicao','Condicao',2,'p_Condicao','condicoes_rules.py',7),
  ('Condicao -> DeclaracaoCondicao','Condicao',1,'p_Condicao','condicoes_rules.py',8),
  ('Condicao -> ( Condicao )','Condicao',3,'p_Condicao','condicoes_rules.py',9),
  ('Dvariaveis -> VAR Listavariaveis','Dvariaveis',2,'p_dvariaveis','declarations.py',4),
  ('Duses -> USES UseList ;','Duses',3,'p_duses','declaracao_uses_rules.py',6),
  ('Duses -> <empty>','Duses',0,'p_duses','declaracao_uses_rules.py',7),
  ('Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .','Programa',7,'p_programa','main_rules.py',6),
  ('InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse','InstrucaoCondicional',5,'p_instrucao_condicional','if_condicional.py',7),
  ('Atribuicao -> Atribuido : = Expressao','Atribuicao',4,'p_atribuicao','atribuicoes_rules.py',8),
  ('Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList END ;','Dfuncao',6,'p_funcao','funcoes_rules.py',10),
  ('LocalInstsList -> LocalInstsList ;','LocalInstsList',2,'p_localinstslist_terminada','body.py',11),
  ('Listavariaveis -> Listavariaveis Variaveis : Tipo ;','Listavariaveis',5,'p_listavariaveis','declarations.py',11),
  ('Listavariaveis -> <empty>','Listavariaveis',0,'p_listavariaveis','declarations.py',12),
  ('UseList -> UseList , ID','UseList',3,'p_uselist','declaracao_uses_rules.py',12),
  ('UseList -> ID','UseList',1,'p_uselist','declaracao_uses_rules.py',13),
  ('While -> WHILE Condicao DO Instrucao','While',4,'p_While','loops.py',13),
  ('LocalInstsList -> Instrucao','LocalInstsList',1,'p_localinstslist_single','body.py',17),
  ('Instrucao -> While','Instrucao',1,'p_instrucao','body.py',24),
  ('Instrucao -> CicloFor','Instrucao',1,'p_instrucao','body.py',25),
  ('Instrucao -> InstrucaoCondicional','Instrucao',1,'p_instrucao','body.py',26),
  ('Instrucao -> Atribuicao','Instrucao',1,'p_instrucao','body.py',27),
  ('Instrucao -> Expressao','Instrucao',1,'p_instrucao','body.py',28),
  ('GlobalInsts -> GlobalInsts GlobalInst','GlobalInsts',2,'p_globalinsts','main_rules.py',24),
  ('GlobalInsts -> <empty>','GlobalInsts',0,'p_globalinsts','main_rules.py',25),
  ('BlocoCondicional -> Instrucao','BlocoCondicional',1,'p_bloco_condicional','if_condicional.py',29),
  ('DeclaracaoCondicao -> Expressao SimboloCondicional Expressao','DeclaracaoCondicao',3,'p_DeclaracaoCondicao','condicoes_rules.py',31),
  ('DeclaracaoCondicao -> Expressao','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',32),
  ('GlobalInst -> Dfuncao','GlobalInst',1,'p_globalinst_func','main_rules.py',35),
  ('GlobalInst -> Dprocedimento','GlobalInst',1,'p_globalinst_func','main_rules.py',36),
  ('Instrucao -> Bloco','Instrucao',1,'p_instrucao_bloco','body.py',36),
  ('ParteElse -> ELSE Instrucao','ParteElse',2,'p_parte_else','if_condicional.py',36),
  ('ParteElse -> <empty>','ParteElse',0,'p_parte_else','if_condicional.py',37),
  ('GlobalInst -> Dvariaveis','GlobalInst',1,'p_globalinst_var','main_rules.py',42),
  ('CicloFor -> FOR Atribuicao DirecaoFor Expressao DO Instrucao','CicloFor',6,'p_ciclo_for','loops.py',43),
  ('Bloco -> BEGIN LocalInstsList END','Bloco',3,'p_bloco','body.py',44),
  ('BlocoPrincipal -> BEGIN LocalInstsList END','BlocoPrincipal',3,'p_blocofinal','main_rules.py',52),
  ('BufferVar -> BufferVar Dvariaveis','BufferVar',2,'p_funky_town','funcoes_rules.py',55),
  ('BufferVar -> <empty>','BufferVar',0,'p_funky_town','funcoes_rules.py',56),
  ('Variaveis -> Variaveis , ID','Variaveis',3,'p_variaveis','declarations.py',58),
  ('Variaveis -> ID','Variaveis',1,'p_variaveis','declarations.py',59),
  ('Tipo -> Datatype','Tipo',1,'p_tipo','declarations.py',69),
  ('Tipo -> ARRAY [ Intervalo ] OF Datatype','Tipo',6,'p_tipo','declarations.py',70),
  ('Tipo -> ID','Tipo',1,'p_tipo','declarations.py',71),
  ('FuncReturn -> ID : = Expressao ;','FuncReturn',5,'p_func_return','funcoes_rules.py',75),
  ('FuncDec -> Cabeca ArgumentosSetter : Tipo ;','FuncDec',5,'p_func_dec','funcoes_rules.py',84),
  ('Intervalo -> INTEGER . . INTEGER','Intervalo',4,'p_intervalo','declarations.py',87),
  ('Datatype -> REAL_TYPE','Datatype',1,'p_datatype','declarations.py',94),
  ('Datatype -> INTEGER_TYPE','Datatype',1,'p_datatype','declarations.py',95),
  ('Datatype -> STRING_TYPE','Datatype',1,'p_datatype','declarations.py',96),
  ('Datatype -> BOOLEAN_TYPE','Datatype',1,'p_datatype','declarations.py',97),
  ('Datatype -> CHAR_TYPE','Datatype',1,'p_datatype','declarations.py',98),
  ('SimboloCondicional -> =','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',95),
  ('SimboloCondicional -> < >','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',96),
  ('SimboloCondicional -> < =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',97),
  ('SimboloCondicional -> <','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',98),
  ('SimboloCondicional -> > =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',99),
  ('SimboloCondicional -> >','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',100),
  ('Cabeca -> FUNCTION ID','Cabeca',2,'p_cabeca','funcoes_rules.py',105),
  ('Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ;','Dprocedimento',9,'p_procedimento','funcoes_rules.py',113),
  ('ArgumentosProcedimentoOpc -> ArgumentosSetter','ArgumentosProcedimentoOpc',1,'p_argumentos_procedimento_opc','funcoes_rules.py',120),
  ('ArgumentosProcedimentoOpc -> <empty>','ArgumentosProcedimentoOpc',0,'p_argumentos_procedimento_opc','funcoes_rules.py',121),
  ('ArgumentosGetter -> ( ArgumentosGetterInit )','ArgumentosGetter',3,'p_argumentos_getter','funcoes_rules.py',137),
  ('Atribuido -> ID','Atribuido',1,'p_atribuido','atribuicoes_rules.py',140),
  ('Atribuido -> Acesso_array','Atribuido',1,'p_atribuido','atribuicoes_rules.py',141),
  ('DirecaoFor -> TO','DirecaoFor',1,'p_direcao_for','loops.py',145),
  ('DirecaoFor -> DOWNTO','DirecaoFor',1,'p_direcao_for','loops.py',146),
  ('ArgumentosGetterInit -> ArgumentosGetterBuffer Expressao','ArgumentosGetterInit',2,'p_argumentos_getter_init','funcoes_rules.py',146),
  ('ArgumentosGetterInit -> <empty>','ArgumentosGetterInit',0,'p_argumentos_getter_init','funcoes_rules.py',147),
  ('Acesso_array -> Variavel_array [ Expressao ]','Acesso_array',4,'p_acesso_array','atribuicoes_rules.py',150),
  ('ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao ,','ArgumentosGetterBuffer',3,'p_argumentos_getter_buffer','funcoes_rules.py',160),
  ('ArgumentosGetterBuffer -> <empty>','ArgumentosGetterBuffer',0,'p_argumentos_getter_buffer','funcoes_rules.py',161),
  ('ArgumentosSetter -> ( ArgumentosSetterBuffer )','ArgumentosSetter',3,'p_argumentos_setter','funcoes_rules.py',173),
  ('Variavel_array -> ID','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',190),
  ('Variavel_array -> Acesso_array','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',191),
  ('Expressao -> Expressao + Termo','Expressao',3,'p_Expressao_complex','atribuicoes_rules.py',200),
  ('Expressao -> Expressao - Termo','Expressao',3,'p_Expressao_complex','atribuicoes_rules.py',201),
  ('ArgumentosSetterBuffer -> ArgumentosSetterBuffer , Argumento','ArgumentosSetterBuffer',3,'p_argumentos_setter_buffer','funcoes_rules.py',213),
  ('ArgumentosSetterBuffer -> Argumento','ArgumentosSetterBuffer',1,'p_argumentos_setter_buffer','funcoes_rules.py',214),
  ('ArgumentosSetterBuffer -> <empty>','ArgumentosSetterBuffer',0,'p_argumentos_setter_buffer','funcoes_rules.py',215),
  ('Expressao -> Termo','Expressao',1,'p_Expressao','atribuicoes_rules.py',228),
  ('Argumento -> OutrosArgumentos ID : Tipo','Argumento',4,'p_argumento','funcoes_rules.py',231),
  ('Termo -> Termo * Fator','Termo',3,'p_termo_complex','atribuicoes_rules.py',236),
  ('Termo -> Termo MOD Fator','Termo',3,'p_termo_complex','atribuicoes_rules.py',237),
  ('Termo -> Termo DIV Fator','Termo',3,'p_termo_complex','atribuicoes_rules.py',238),
  ('OutrosArgumentos -> OutrosArgumentos ID ,','OutrosArgumentos',3,'p_outros_argumentos','funcoes_rules.py',248),
  ('OutrosArgumentos -> <empty>','OutrosArgumentos',0,'p_outros_argumentos','funcoes_rules.py',249),
  ('Termo -> Fator','Termo',1,'p_termo_simple','atribuicoes_rules.py',272),
  ('Fator -> ID','Fator',1,'p_fator_id','atribuicoes_rules.py',278),
  ('Fator -> INTEGER','Fator',1,'p_fator_integer','atribuicoes_rules.py',300),
  ('Fator -> REAL','Fator',1,'p_fator_real','atribuicoes_rules.py',307),
  ('Fator -> STRING','Fator',1,'p_fator_string','atribuicoes_rules.py',314),
  ('Fator -> TRUE','Fator',1,'p_fator_true','atribuicoes_rules.py',321),
  ('Fator -> FALSE','Fator',1,'p_fator_false','atribuicoes_rules.py',328),
  ('Fator -> ( Expressao )','Fator',3,'p_fator_parenthesis','atribuicoes_rules.py',335),
  ('Fator -> Acesso_array','Fator',1,'p_fator_array','atribuicoes_rules.py',342),
  ('Fator -> ChamadaFuncao','Fator',1,'p_fator_func_call','atribuicoes_rules.py',355),
  ('ChamadaFuncao -> ID ArgumentosGetter','ChamadaFuncao',2,'p_ChamadaFuncao','atribuicoes_rules.py',365),
  ('ArgumentosGetter -> ( ListaArgumentos )','ArgumentosGetter',3,'p_ArgumentosGetter','atribuicoes_rules.py',508),
  ('ArgumentosGetter -> ( )','ArgumentosGetter',2,'p_ArgumentosGetter','atribuicoes_rules.py',509),
  ('ListaArgumentos -> ListaArgumentos , Expressao','ListaArgumentos',3,'p_ListaArgumentos','atribuicoes_rules.py',519),
  ('ListaArgumentos -> Expressao','ListaArgumentos',1,'p_ListaArgumentos','atribuicoes_rules.py',520),
]
