
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ProgramaAND ARRAY BEGIN BOOLEAN_TYPE CASE CHAR_TYPE CONST DIFFERENT DIV DO DOWNTO ELSE END FALSE FILE FOR FUNCTION GOTO GREATEROREQUAL ID IF IN INTEGER INTEGER_TYPE KEYWORD LABEL LESSOREQUAL MOD MULTILINECOMMENTS NIL NOT OF ONELINECOMMENTS OR PACKED PROCEDURE PROGRAM REAL REAL_TYPE RECORD REPEAT SET STRING STRING_TYPE THEN TO TRUE TYPE UNTIL USES VAR WHILE WITHDvariaveis : VAR Listavariaveis\n    Atribuicao : Atribuido ':' '=' Expressao\n    \n    LocalInstsList : LocalInstsList ';' Instrucao\n    \n    Condicao : Condicao AND DeclaracaoCondicao\n             | Condicao OR DeclaracaoCondicao\n             | DeclaracaoCondicao\n             | '(' Condicao ')'\n    \n    InstrucaoCondicional : IF Condicao THEN BlocoCondicional ParteElse\n    \n    Duses : USES UseList ';'\n          | \n    \n    Programa : PROGRAM ID ';' Duses GlobalInsts BlocoPrincipal '.'\n    \n    While : WHILE ';'\n    \n    Listavariaveis : Listavariaveis Variaveis ':' Tipo ';'\n                   | \n    \n    Atribuido : ID\n              | Acesso_array\n    \n    BlocoCondicional : LocalInstsList\n    \n    LocalInstsList : Instrucao PontoVirgOpc\n    \n    UseList : UseList ',' ID\n            | ID \n    \n    GlobalInsts : GlobalInsts GlobalInst\n                | \n    \n    DeclaracaoCondicao : Expressao SimboloCondicional Expressao\n                       | NOT Condicao\n                       | TRUE\n                       | FALSE\n    \n    ParteElse : ELSE LocalInstsList\n              | \n    \n    Instrucao : Atribuicao\n              | InstrucaoCondicional\n              | Bloco\n              | While\n    GlobalInst : Dvariaveis\n    Variaveis : Variaveis ',' ID\n              | ID\n    \n    Acesso_array : Variavel_array '[' Expressao ']'\n    \n    BlocoPrincipal : BEGIN LocalInstsList END\n    \n    Bloco : BEGIN LocalInstsList END\n    \n    Variavel_array : ID\n                   | Acesso_array\n    \n    SimboloCondicional : '='\n                       | '<' '>'\n                       | '<' '='\n                       | '<'\n                       | '>' '='\n                       | '>'\n    \n    Tipo : Datatype\n         | ARRAY '[' Intervalo ']' OF Datatype\n         | ID\n    \n    PontoVirgOpc : ';'\n                 |  \n\n    \n    Expressao : Expressao '+' Termo\n              | Expressao '-' Termo\n              | Termo\n    \n    Intervalo : INTEGER '.' '.' INTEGER\n    \n    Termo : Termo '*' Fator\n          | Termo '/' Fator\n          | Fator\n    \n    Datatype : REAL_TYPE\n             | INTEGER_TYPE\n             | STRING_TYPE\n             | BOOLEAN_TYPE\n             | CHAR_TYPE\n    \n    Fator : ID\n          | REAL\n          | INTEGER\n          | STRING\n          | TRUE\n          | FALSE \n          | '(' Expressao ')'\n          | Acesso_array\n    "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,17,],[0,-11,]),'ID':([2,6,12,14,16,18,26,31,35,41,43,54,59,60,61,62,65,66,67,68,69,70,72,73,77,78,79,90,91,92,108,109,],[3,9,28,-14,32,28,48,56,28,48,48,48,48,28,48,48,48,48,48,-41,-44,-46,48,48,48,100,106,-42,-43,-45,28,-13,]),';':([3,8,9,19,20,21,22,23,24,27,32,33,36,37,46,47,48,49,50,51,52,53,57,58,75,76,80,81,82,86,88,89,93,94,95,97,98,100,101,102,103,104,105,107,111,118,],[4,15,-20,35,37,-29,-30,-31,-32,53,-19,35,-18,-50,-54,-58,-64,-65,-66,-67,-71,-12,-38,-3,-68,-69,-2,-28,35,-70,-52,-53,-56,-57,-36,109,-47,-49,-59,-60,-61,-62,-63,-8,35,-48,]),'USES':([4,],[6,]),'BEGIN':([4,5,7,11,12,13,14,15,18,31,35,60,108,109,],[-10,-22,12,-21,18,-33,-14,-9,18,-1,18,18,18,-13,]),'VAR':([4,5,7,11,13,14,15,31,109,],[-10,-22,14,-21,-33,-14,-9,-1,-13,]),',':([8,9,32,55,56,106,],[16,-20,-19,79,-35,-34,]),'.':([10,34,113,115,],[17,-37,115,117,]),'IF':([12,18,35,60,108,],[26,26,26,26,26,]),'WHILE':([12,18,35,60,108,],[27,27,27,27,27,]),'END':([19,20,21,22,23,24,33,36,37,46,47,48,49,50,51,52,53,57,58,75,76,80,81,82,86,88,89,93,94,95,107,111,],[34,-51,-29,-30,-31,-32,57,-18,-50,-54,-58,-64,-65,-66,-67,-71,-12,-38,-3,-68,-69,-2,-28,-17,-70,-52,-53,-56,-57,-36,-8,-27,]),'ELSE':([20,21,22,23,24,36,37,46,47,48,49,50,51,52,53,57,58,75,76,80,81,82,86,88,89,93,94,95,107,111,],[-51,-29,-30,-31,-32,-18,-50,-54,-58,-64,-65,-66,-67,-71,-12,-38,-3,-68,-69,-2,108,-17,-70,-52,-53,-56,-57,-36,-8,-27,]),':':([25,28,29,55,56,95,106,],[38,-15,-16,78,-35,-36,-34,]),'(':([26,41,43,54,59,61,62,65,66,67,68,69,70,72,73,77,90,91,92,],[41,41,41,77,77,77,77,77,77,77,-41,-44,-46,77,77,77,-42,-43,-45,]),'NOT':([26,41,43,61,62,],[43,43,43,43,43,]),'TRUE':([26,41,43,54,59,61,62,65,66,67,68,69,70,72,73,77,90,91,92,],[44,44,44,75,75,44,44,75,75,75,-41,-44,-46,75,75,75,-42,-43,-45,]),'FALSE':([26,41,43,54,59,61,62,65,66,67,68,69,70,72,73,77,90,91,92,],[45,45,45,76,76,45,45,76,76,76,-41,-44,-46,76,76,76,-42,-43,-45,]),'REAL':([26,41,43,54,59,61,62,65,66,67,68,69,70,72,73,77,90,91,92,],[49,49,49,49,49,49,49,49,49,49,-41,-44,-46,49,49,49,-42,-43,-45,]),'INTEGER':([26,41,43,54,59,61,62,65,66,67,68,69,70,72,73,77,90,91,92,110,117,],[50,50,50,50,50,50,50,50,50,50,-41,-44,-46,50,50,50,-42,-43,-45,113,119,]),'STRING':([26,41,43,54,59,61,62,65,66,67,68,69,70,72,73,77,90,91,92,],[51,51,51,51,51,51,51,51,51,51,-41,-44,-46,51,51,51,-42,-43,-45,]),'[':([28,29,30,48,52,95,99,],[-39,-40,54,-39,-40,-36,110,]),'=':([38,42,44,45,46,47,48,49,50,51,52,64,69,70,75,76,86,88,89,93,94,95,],[59,68,-68,-69,-54,-58,-64,-65,-66,-67,-71,68,91,92,-68,-69,-70,-52,-53,-56,-57,-36,]),'THEN':([39,40,44,45,46,47,48,49,50,51,52,71,75,76,83,84,85,86,87,88,89,93,94,95,],[60,-6,-25,-26,-54,-58,-64,-65,-66,-67,-71,-24,-68,-69,-4,-5,-7,-70,-23,-52,-53,-56,-57,-36,]),'AND':([39,40,44,45,46,47,48,49,50,51,52,63,71,75,76,83,84,85,86,87,88,89,93,94,95,],[61,-6,-25,-26,-54,-58,-64,-65,-66,-67,-71,61,61,-68,-69,-4,-5,-7,-70,-23,-52,-53,-56,-57,-36,]),'OR':([39,40,44,45,46,47,48,49,50,51,52,63,71,75,76,83,84,85,86,87,88,89,93,94,95,],[62,-6,-25,-26,-54,-58,-64,-65,-66,-67,-71,62,62,-68,-69,-4,-5,-7,-70,-23,-52,-53,-56,-57,-36,]),')':([40,44,45,46,47,48,49,50,51,52,63,64,71,75,76,83,84,85,86,87,88,89,93,94,95,96,],[-6,-25,-26,-54,-58,-64,-65,-66,-67,-71,85,86,-24,-68,-69,-4,-5,-7,-70,-23,-52,-53,-56,-57,-36,86,]),'+':([42,44,45,46,47,48,49,50,51,52,64,74,75,76,80,86,87,88,89,93,94,95,96,],[66,-68,-69,-54,-58,-64,-65,-66,-67,-71,66,66,-68,-69,66,-70,66,-52,-53,-56,-57,-36,66,]),'-':([42,44,45,46,47,48,49,50,51,52,64,74,75,76,80,86,87,88,89,93,94,95,96,],[67,-68,-69,-54,-58,-64,-65,-66,-67,-71,67,67,-68,-69,67,-70,67,-52,-53,-56,-57,-36,67,]),'<':([42,44,45,46,47,48,49,50,51,52,64,75,76,86,88,89,93,94,95,],[69,-68,-69,-54,-58,-64,-65,-66,-67,-71,69,-68,-69,-70,-52,-53,-56,-57,-36,]),'>':([42,44,45,46,47,48,49,50,51,52,64,69,75,76,86,88,89,93,94,95,],[70,-68,-69,-54,-58,-64,-65,-66,-67,-71,70,90,-68,-69,-70,-52,-53,-56,-57,-36,]),'*':([44,45,46,47,48,49,50,51,52,75,76,86,88,89,93,94,95,],[-68,-69,72,-58,-64,-65,-66,-67,-71,-68,-69,-70,72,72,-56,-57,-36,]),'/':([44,45,46,47,48,49,50,51,52,75,76,86,88,89,93,94,95,],[-68,-69,73,-58,-64,-65,-66,-67,-71,-68,-69,-70,73,73,-56,-57,-36,]),']':([46,47,48,49,50,51,52,74,75,76,86,88,89,93,94,95,112,119,],[-54,-58,-64,-65,-66,-67,-71,95,-68,-69,-70,-52,-53,-56,-57,-36,114,-55,]),'ARRAY':([78,],[99,]),'REAL_TYPE':([78,116,],[101,101,]),'INTEGER_TYPE':([78,116,],[102,102,]),'STRING_TYPE':([78,116,],[103,103,]),'BOOLEAN_TYPE':([78,116,],[104,104,]),'CHAR_TYPE':([78,116,],[105,105,]),'OF':([114,],[116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Duses':([4,],[5,]),'GlobalInsts':([5,],[7,]),'UseList':([6,],[8,]),'BlocoPrincipal':([7,],[10,]),'GlobalInst':([7,],[11,]),'Dvariaveis':([7,],[13,]),'LocalInstsList':([12,18,60,108,],[19,33,82,111,]),'Instrucao':([12,18,35,60,108,],[20,20,58,20,20,]),'Atribuicao':([12,18,35,60,108,],[21,21,21,21,21,]),'InstrucaoCondicional':([12,18,35,60,108,],[22,22,22,22,22,]),'Bloco':([12,18,35,60,108,],[23,23,23,23,23,]),'While':([12,18,35,60,108,],[24,24,24,24,24,]),'Atribuido':([12,18,35,60,108,],[25,25,25,25,25,]),'Acesso_array':([12,18,26,35,41,43,54,59,60,61,62,65,66,67,72,73,77,108,],[29,29,52,29,52,52,52,52,29,52,52,52,52,52,52,52,52,29,]),'Variavel_array':([12,18,26,35,41,43,54,59,60,61,62,65,66,67,72,73,77,108,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'Listavariaveis':([14,],[31,]),'PontoVirgOpc':([20,],[36,]),'Condicao':([26,41,43,],[39,63,71,]),'DeclaracaoCondicao':([26,41,43,61,62,],[40,40,40,83,84,]),'Expressao':([26,41,43,54,59,61,62,65,77,],[42,64,42,74,80,42,42,87,96,]),'Termo':([26,41,43,54,59,61,62,65,66,67,77,],[46,46,46,46,46,46,46,46,88,89,46,]),'Fator':([26,41,43,54,59,61,62,65,66,67,72,73,77,],[47,47,47,47,47,47,47,47,47,47,93,94,47,]),'Variaveis':([31,],[55,]),'SimboloCondicional':([42,64,],[65,65,]),'BlocoCondicional':([60,],[81,]),'Tipo':([78,],[97,]),'Datatype':([78,116,],[98,118,]),'ParteElse':([81,],[107,]),'Intervalo':([110,],[112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Dvariaveis -> VAR Listavariaveis','Dvariaveis',2,'p_dvariaveis','declarations.py',2),
  ('Atribuicao -> Atribuido : = Expressao','Atribuicao',4,'p_atribuicao','atribuicoes_rules.py',5),
  ('LocalInstsList -> LocalInstsList ; Instrucao','LocalInstsList',3,'p_localinstslist_multiple','body.py',5),
  ('Condicao -> Condicao AND DeclaracaoCondicao','Condicao',3,'p_Condicao','condicoes_rules.py',5),
  ('Condicao -> Condicao OR DeclaracaoCondicao','Condicao',3,'p_Condicao','condicoes_rules.py',6),
  ('Condicao -> DeclaracaoCondicao','Condicao',1,'p_Condicao','condicoes_rules.py',7),
  ('Condicao -> ( Condicao )','Condicao',3,'p_Condicao','condicoes_rules.py',8),
  ('InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse','InstrucaoCondicional',5,'p_instrucao_condicional','if_condicional.py',5),
  ('Duses -> USES UseList ;','Duses',3,'p_duses','declaracao_uses_rules.py',6),
  ('Duses -> <empty>','Duses',0,'p_duses','declaracao_uses_rules.py',7),
  ('Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .','Programa',7,'p_programa','main_rules.py',6),
  ('While -> WHILE ;','While',2,'p_While','loops.py',7),
  ('Listavariaveis -> Listavariaveis Variaveis : Tipo ;','Listavariaveis',5,'p_listavariaveis','declarations.py',8),
  ('Listavariaveis -> <empty>','Listavariaveis',0,'p_listavariaveis','declarations.py',9),
  ('Atribuido -> ID','Atribuido',1,'p_atribuido','atribuicoes_rules.py',11),
  ('Atribuido -> Acesso_array','Atribuido',1,'p_atribuido','atribuicoes_rules.py',12),
  ('BlocoCondicional -> LocalInstsList','BlocoCondicional',1,'p_bloco_condicional','if_condicional.py',11),
  ('LocalInstsList -> Instrucao PontoVirgOpc','LocalInstsList',2,'p_localinstslist_single','body.py',12),
  ('UseList -> UseList , ID','UseList',3,'p_uselist','declaracao_uses_rules.py',12),
  ('UseList -> ID','UseList',1,'p_uselist','declaracao_uses_rules.py',13),
  ('GlobalInsts -> GlobalInsts GlobalInst','GlobalInsts',2,'p_globalinsts','main_rules.py',12),
  ('GlobalInsts -> <empty>','GlobalInsts',0,'p_globalinsts','main_rules.py',13),
  ('DeclaracaoCondicao -> Expressao SimboloCondicional Expressao','DeclaracaoCondicao',3,'p_DeclaracaoCondicao','condicoes_rules.py',14),
  ('DeclaracaoCondicao -> NOT Condicao','DeclaracaoCondicao',2,'p_DeclaracaoCondicao','condicoes_rules.py',15),
  ('DeclaracaoCondicao -> TRUE','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',16),
  ('DeclaracaoCondicao -> FALSE','DeclaracaoCondicao',1,'p_DeclaracaoCondicao','condicoes_rules.py',17),
  ('ParteElse -> ELSE LocalInstsList','ParteElse',2,'p_parte_else','if_condicional.py',17),
  ('ParteElse -> <empty>','ParteElse',0,'p_parte_else','if_condicional.py',18),
  ('Instrucao -> Atribuicao','Instrucao',1,'p_instrucao','body.py',18),
  ('Instrucao -> InstrucaoCondicional','Instrucao',1,'p_instrucao','body.py',19),
  ('Instrucao -> Bloco','Instrucao',1,'p_instrucao','body.py',20),
  ('Instrucao -> While','Instrucao',1,'p_instrucao','body.py',21),
  ('GlobalInst -> Dvariaveis','GlobalInst',1,'p_globalinst','main_rules.py',17),
  ('Variaveis -> Variaveis , ID','Variaveis',3,'p_variaveis','declarations.py',19),
  ('Variaveis -> ID','Variaveis',1,'p_variaveis','declarations.py',20),
  ('Acesso_array -> Variavel_array [ Expressao ]','Acesso_array',4,'p_acesso_array','atribuicoes_rules.py',21),
  ('BlocoPrincipal -> BEGIN LocalInstsList END','BlocoPrincipal',3,'p_blocofinal','main_rules.py',23),
  ('Bloco -> BEGIN LocalInstsList END','Bloco',3,'p_bloco','body.py',27),
  ('Variavel_array -> ID','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',28),
  ('Variavel_array -> Acesso_array','Variavel_array',1,'p_variavel_array','atribuicoes_rules.py',29),
  ('SimboloCondicional -> =','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',28),
  ('SimboloCondicional -> < >','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',29),
  ('SimboloCondicional -> < =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',30),
  ('SimboloCondicional -> <','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',31),
  ('SimboloCondicional -> > =','SimboloCondicional',2,'p_SimboloCondicional','condicoes_rules.py',32),
  ('SimboloCondicional -> >','SimboloCondicional',1,'p_SimboloCondicional','condicoes_rules.py',33),
  ('Tipo -> Datatype','Tipo',1,'p_tipo','declarations.py',30),
  ('Tipo -> ARRAY [ Intervalo ] OF Datatype','Tipo',6,'p_tipo','declarations.py',31),
  ('Tipo -> ID','Tipo',1,'p_tipo','declarations.py',32),
  ('PontoVirgOpc -> ;','PontoVirgOpc',1,'p_pontoVirgOpc','body.py',34),
  ('PontoVirgOpc -> <empty>','PontoVirgOpc',0,'p_pontoVirgOpc','body.py',35),
  ('Expressao -> Expressao + Termo','Expressao',3,'p_expressao','atribuicoes_rules.py',38),
  ('Expressao -> Expressao - Termo','Expressao',3,'p_expressao','atribuicoes_rules.py',39),
  ('Expressao -> Termo','Expressao',1,'p_expressao','atribuicoes_rules.py',40),
  ('Intervalo -> INTEGER . . INTEGER','Intervalo',4,'p_intervalo','declarations.py',46),
  ('Termo -> Termo * Fator','Termo',3,'p_termo','atribuicoes_rules.py',50),
  ('Termo -> Termo / Fator','Termo',3,'p_termo','atribuicoes_rules.py',51),
  ('Termo -> Fator','Termo',1,'p_termo','atribuicoes_rules.py',52),
  ('Datatype -> REAL_TYPE','Datatype',1,'p_datatype','declarations.py',53),
  ('Datatype -> INTEGER_TYPE','Datatype',1,'p_datatype','declarations.py',54),
  ('Datatype -> STRING_TYPE','Datatype',1,'p_datatype','declarations.py',55),
  ('Datatype -> BOOLEAN_TYPE','Datatype',1,'p_datatype','declarations.py',56),
  ('Datatype -> CHAR_TYPE','Datatype',1,'p_datatype','declarations.py',57),
  ('Fator -> ID','Fator',1,'p_fator','atribuicoes_rules.py',63),
  ('Fator -> REAL','Fator',1,'p_fator','atribuicoes_rules.py',64),
  ('Fator -> INTEGER','Fator',1,'p_fator','atribuicoes_rules.py',65),
  ('Fator -> STRING','Fator',1,'p_fator','atribuicoes_rules.py',66),
  ('Fator -> TRUE','Fator',1,'p_fator','atribuicoes_rules.py',67),
  ('Fator -> FALSE','Fator',1,'p_fator','atribuicoes_rules.py',68),
  ('Fator -> ( Expressao )','Fator',3,'p_fator','atribuicoes_rules.py',69),
  ('Fator -> Acesso_array','Fator',1,'p_fator','atribuicoes_rules.py',70),
]
