Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CASE
    CONST
    DIFFERENT
    DIV
    FILE
    FUNCTION
    GOTO
    GREATEROREQUAL
    IN
    KEYWORD
    LABEL
    LESSOREQUAL
    MOD
    MULTILINECOMMENTS
    NIL
    ONELINECOMMENTS
    PACKED
    PROCEDURE
    RECORD
    REPEAT
    SET
    TYPE
    UNTIL
    WITH

Grammar

Rule 0     S' -> Programa
Rule 1     Dvariaveis -> VAR Listavariaveis
Rule 2     Atribuicao -> Atribuido : = Expressao
Rule 3     LocalInstsList -> LocalInstsList ; Instrucao
Rule 4     Condicao -> Condicao AND DeclaracaoCondicao
Rule 5     Condicao -> Condicao OR DeclaracaoCondicao
Rule 6     Condicao -> DeclaracaoCondicao
Rule 7     Condicao -> ( Condicao )
Rule 8     InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse
Rule 9     Duses -> USES UseList ;
Rule 10    Duses -> <empty>
Rule 11    Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .
Rule 12    Listavariaveis -> Listavariaveis Variaveis : Tipo ;
Rule 13    Listavariaveis -> <empty>
Rule 14    While -> WHILE Condicao DO LocalInstsList
Rule 15    Atribuido -> ID
Rule 16    Atribuido -> Acesso_array
Rule 17    BlocoCondicional -> LocalInstsList
Rule 18    LocalInstsList -> LocalInstsList ;
Rule 19    UseList -> UseList , ID
Rule 20    UseList -> ID
Rule 21    GlobalInsts -> GlobalInsts GlobalInst
Rule 22    GlobalInsts -> <empty>
Rule 23    DeclaracaoCondicao -> Expressao SimboloCondicional Expressao
Rule 24    DeclaracaoCondicao -> NOT Condicao
Rule 25    DeclaracaoCondicao -> TRUE
Rule 26    DeclaracaoCondicao -> FALSE
Rule 27    ParteElse -> ELSE LocalInstsList
Rule 28    ParteElse -> <empty>
Rule 29    GlobalInst -> Dvariaveis
Rule 30    LocalInstsList -> Instrucao
Rule 31    Variaveis -> Variaveis , ID
Rule 32    Variaveis -> ID
Rule 33    Acesso_array -> Variavel_array [ Expressao ]
Rule 34    CicloFor -> FOR Atribuicao DirecaoFor Expressao DO LocalInstsList
Rule 35    BlocoPrincipal -> BEGIN LocalInstsList END
Rule 36    Instrucao -> While
Rule 37    Instrucao -> CicloFor
Rule 38    Instrucao -> InstrucaoCondicional
Rule 39    Instrucao -> Atribuicao
Rule 40    Variavel_array -> ID
Rule 41    Variavel_array -> Acesso_array
Rule 42    DirecaoFor -> TO
Rule 43    DirecaoFor -> DOWNTO
Rule 44    SimboloCondicional -> =
Rule 45    SimboloCondicional -> < >
Rule 46    SimboloCondicional -> < =
Rule 47    SimboloCondicional -> <
Rule 48    SimboloCondicional -> > =
Rule 49    SimboloCondicional -> >
Rule 50    Tipo -> Datatype
Rule 51    Tipo -> ARRAY [ Intervalo ] OF Datatype
Rule 52    Tipo -> ID
Rule 53    Instrucao -> Bloco
Rule 54    Expressao -> Expressao + Termo
Rule 55    Expressao -> Expressao - Termo
Rule 56    Expressao -> Termo
Rule 57    Bloco -> BEGIN LocalInstsList END
Rule 58    Intervalo -> INTEGER . . INTEGER
Rule 59    Termo -> Termo * Fator
Rule 60    Termo -> Termo / Fator
Rule 61    Termo -> Fator
Rule 62    Datatype -> REAL_TYPE
Rule 63    Datatype -> INTEGER_TYPE
Rule 64    Datatype -> STRING_TYPE
Rule 65    Datatype -> BOOLEAN_TYPE
Rule 66    Datatype -> CHAR_TYPE
Rule 67    Fator -> ID
Rule 68    Fator -> REAL
Rule 69    Fator -> INTEGER
Rule 70    Fator -> STRING
Rule 71    Fator -> TRUE
Rule 72    Fator -> FALSE
Rule 73    Fator -> ( Expressao )
Rule 74    Fator -> Acesso_array

Terminals, with rules where they appear

(                    : 7 73
)                    : 7 73
*                    : 59
+                    : 54
,                    : 19 31
-                    : 55
.                    : 11 58 58
/                    : 60
:                    : 2 12
;                    : 3 9 11 12 18
<                    : 45 46 47
=                    : 2 44 46 48
>                    : 45 48 49
AND                  : 4
ARRAY                : 51
BEGIN                : 35 57
BOOLEAN_TYPE         : 65
CASE                 : 
CHAR_TYPE            : 66
CONST                : 
DIFFERENT            : 
DIV                  : 
DO                   : 14 34
DOWNTO               : 43
ELSE                 : 27
END                  : 35 57
FALSE                : 26 72
FILE                 : 
FOR                  : 34
FUNCTION             : 
GOTO                 : 
GREATEROREQUAL       : 
ID                   : 11 15 19 20 31 32 40 52 67
IF                   : 8
IN                   : 
INTEGER              : 58 58 69
INTEGER_TYPE         : 63
KEYWORD              : 
LABEL                : 
LESSOREQUAL          : 
MOD                  : 
MULTILINECOMMENTS    : 
NIL                  : 
NOT                  : 24
OF                   : 51
ONELINECOMMENTS      : 
OR                   : 5
PACKED               : 
PROCEDURE            : 
PROGRAM              : 11
REAL                 : 68
REAL_TYPE            : 62
RECORD               : 
REPEAT               : 
SET                  : 
STRING               : 70
STRING_TYPE          : 64
THEN                 : 8
TO                   : 42
TRUE                 : 25 71
TYPE                 : 
UNTIL                : 
USES                 : 9
VAR                  : 1
WHILE                : 14
WITH                 : 
[                    : 33 51
]                    : 33 51
error                : 

Nonterminals, with rules where they appear

Acesso_array         : 16 41 74
Atribuicao           : 34 39
Atribuido            : 2
Bloco                : 53
BlocoCondicional     : 8
BlocoPrincipal       : 11
CicloFor             : 37
Condicao             : 4 5 7 8 14 24
Datatype             : 50 51
DeclaracaoCondicao   : 4 5 6
DirecaoFor           : 34
Duses                : 11
Dvariaveis           : 29
Expressao            : 2 23 23 33 34 54 55 73
Fator                : 59 60 61
GlobalInst           : 21
GlobalInsts          : 11 21
Instrucao            : 3 30
InstrucaoCondicional : 38
Intervalo            : 51
Listavariaveis       : 1 12
LocalInstsList       : 3 14 17 18 27 34 35 57
ParteElse            : 8
Programa             : 0
SimboloCondicional   : 23
Termo                : 54 55 56 59 60
Tipo                 : 12
UseList              : 9 19
Variaveis            : 12 31
Variavel_array       : 33
While                : 36

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (11) Programa -> . PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .

    PROGRAM         shift and go to state 2

    Programa                       shift and go to state 1

state 1

    (0) S' -> Programa .



state 2

    (11) Programa -> PROGRAM . ID ; Duses GlobalInsts BlocoPrincipal .

    ID              shift and go to state 3


state 3

    (11) Programa -> PROGRAM ID . ; Duses GlobalInsts BlocoPrincipal .

    ;               shift and go to state 4


state 4

    (11) Programa -> PROGRAM ID ; . Duses GlobalInsts BlocoPrincipal .
    (9) Duses -> . USES UseList ;
    (10) Duses -> .

    USES            shift and go to state 6
    BEGIN           reduce using rule 10 (Duses -> .)
    VAR             reduce using rule 10 (Duses -> .)

    Duses                          shift and go to state 5

state 5

    (11) Programa -> PROGRAM ID ; Duses . GlobalInsts BlocoPrincipal .
    (21) GlobalInsts -> . GlobalInsts GlobalInst
    (22) GlobalInsts -> .

    BEGIN           reduce using rule 22 (GlobalInsts -> .)
    VAR             reduce using rule 22 (GlobalInsts -> .)

    GlobalInsts                    shift and go to state 7

state 6

    (9) Duses -> USES . UseList ;
    (19) UseList -> . UseList , ID
    (20) UseList -> . ID

    ID              shift and go to state 9

    UseList                        shift and go to state 8

state 7

    (11) Programa -> PROGRAM ID ; Duses GlobalInsts . BlocoPrincipal .
    (21) GlobalInsts -> GlobalInsts . GlobalInst
    (35) BlocoPrincipal -> . BEGIN LocalInstsList END
    (29) GlobalInst -> . Dvariaveis
    (1) Dvariaveis -> . VAR Listavariaveis

    BEGIN           shift and go to state 12
    VAR             shift and go to state 14

    BlocoPrincipal                 shift and go to state 10
    GlobalInst                     shift and go to state 11
    Dvariaveis                     shift and go to state 13

state 8

    (9) Duses -> USES UseList . ;
    (19) UseList -> UseList . , ID

    ;               shift and go to state 15
    ,               shift and go to state 16


state 9

    (20) UseList -> ID .

    ;               reduce using rule 20 (UseList -> ID .)
    ,               reduce using rule 20 (UseList -> ID .)


state 10

    (11) Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal . .

    .               shift and go to state 17


state 11

    (21) GlobalInsts -> GlobalInsts GlobalInst .

    BEGIN           reduce using rule 21 (GlobalInsts -> GlobalInsts GlobalInst .)
    VAR             reduce using rule 21 (GlobalInsts -> GlobalInsts GlobalInst .)


state 12

    (35) BlocoPrincipal -> BEGIN . LocalInstsList END
    (3) LocalInstsList -> . LocalInstsList ; Instrucao
    (18) LocalInstsList -> . LocalInstsList ;
    (30) LocalInstsList -> . Instrucao
    (36) Instrucao -> . While
    (37) Instrucao -> . CicloFor
    (38) Instrucao -> . InstrucaoCondicional
    (39) Instrucao -> . Atribuicao
    (53) Instrucao -> . Bloco
    (14) While -> . WHILE Condicao DO LocalInstsList
    (34) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO LocalInstsList
    (8) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (2) Atribuicao -> . Atribuido : = Expressao
    (57) Bloco -> . BEGIN LocalInstsList END
    (15) Atribuido -> . ID
    (16) Atribuido -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    IF              shift and go to state 28
    BEGIN           shift and go to state 18
    ID              shift and go to state 30

    LocalInstsList                 shift and go to state 19
    Instrucao                      shift and go to state 20
    While                          shift and go to state 21
    CicloFor                       shift and go to state 22
    InstrucaoCondicional           shift and go to state 23
    Atribuicao                     shift and go to state 24
    Bloco                          shift and go to state 25
    Atribuido                      shift and go to state 29
    Acesso_array                   shift and go to state 31
    Variavel_array                 shift and go to state 32

state 13

    (29) GlobalInst -> Dvariaveis .

    BEGIN           reduce using rule 29 (GlobalInst -> Dvariaveis .)
    VAR             reduce using rule 29 (GlobalInst -> Dvariaveis .)


state 14

    (1) Dvariaveis -> VAR . Listavariaveis
    (12) Listavariaveis -> . Listavariaveis Variaveis : Tipo ;
    (13) Listavariaveis -> .

    ID              reduce using rule 13 (Listavariaveis -> .)
    BEGIN           reduce using rule 13 (Listavariaveis -> .)
    VAR             reduce using rule 13 (Listavariaveis -> .)

    Listavariaveis                 shift and go to state 33

state 15

    (9) Duses -> USES UseList ; .

    BEGIN           reduce using rule 9 (Duses -> USES UseList ; .)
    VAR             reduce using rule 9 (Duses -> USES UseList ; .)


state 16

    (19) UseList -> UseList , . ID

    ID              shift and go to state 34


state 17

    (11) Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal . .

    $end            reduce using rule 11 (Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal . .)


state 18

    (57) Bloco -> BEGIN . LocalInstsList END
    (3) LocalInstsList -> . LocalInstsList ; Instrucao
    (18) LocalInstsList -> . LocalInstsList ;
    (30) LocalInstsList -> . Instrucao
    (36) Instrucao -> . While
    (37) Instrucao -> . CicloFor
    (38) Instrucao -> . InstrucaoCondicional
    (39) Instrucao -> . Atribuicao
    (53) Instrucao -> . Bloco
    (14) While -> . WHILE Condicao DO LocalInstsList
    (34) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO LocalInstsList
    (8) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (2) Atribuicao -> . Atribuido : = Expressao
    (57) Bloco -> . BEGIN LocalInstsList END
    (15) Atribuido -> . ID
    (16) Atribuido -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    IF              shift and go to state 28
    BEGIN           shift and go to state 18
    ID              shift and go to state 30

    LocalInstsList                 shift and go to state 35
    Instrucao                      shift and go to state 20
    While                          shift and go to state 21
    CicloFor                       shift and go to state 22
    InstrucaoCondicional           shift and go to state 23
    Atribuicao                     shift and go to state 24
    Bloco                          shift and go to state 25
    Atribuido                      shift and go to state 29
    Acesso_array                   shift and go to state 31
    Variavel_array                 shift and go to state 32

state 19

    (35) BlocoPrincipal -> BEGIN LocalInstsList . END
    (3) LocalInstsList -> LocalInstsList . ; Instrucao
    (18) LocalInstsList -> LocalInstsList . ;

    END             shift and go to state 36
    ;               shift and go to state 37


state 20

    (30) LocalInstsList -> Instrucao .

    END             reduce using rule 30 (LocalInstsList -> Instrucao .)
    ;               reduce using rule 30 (LocalInstsList -> Instrucao .)
    ELSE            reduce using rule 30 (LocalInstsList -> Instrucao .)


state 21

    (36) Instrucao -> While .

    END             reduce using rule 36 (Instrucao -> While .)
    ;               reduce using rule 36 (Instrucao -> While .)
    ELSE            reduce using rule 36 (Instrucao -> While .)


state 22

    (37) Instrucao -> CicloFor .

    END             reduce using rule 37 (Instrucao -> CicloFor .)
    ;               reduce using rule 37 (Instrucao -> CicloFor .)
    ELSE            reduce using rule 37 (Instrucao -> CicloFor .)


state 23

    (38) Instrucao -> InstrucaoCondicional .

    END             reduce using rule 38 (Instrucao -> InstrucaoCondicional .)
    ;               reduce using rule 38 (Instrucao -> InstrucaoCondicional .)
    ELSE            reduce using rule 38 (Instrucao -> InstrucaoCondicional .)


state 24

    (39) Instrucao -> Atribuicao .

    END             reduce using rule 39 (Instrucao -> Atribuicao .)
    ;               reduce using rule 39 (Instrucao -> Atribuicao .)
    ELSE            reduce using rule 39 (Instrucao -> Atribuicao .)


state 25

    (53) Instrucao -> Bloco .

    END             reduce using rule 53 (Instrucao -> Bloco .)
    ;               reduce using rule 53 (Instrucao -> Bloco .)
    ELSE            reduce using rule 53 (Instrucao -> Bloco .)


state 26

    (14) While -> WHILE . Condicao DO LocalInstsList
    (4) Condicao -> . Condicao AND DeclaracaoCondicao
    (5) Condicao -> . Condicao OR DeclaracaoCondicao
    (6) Condicao -> . DeclaracaoCondicao
    (7) Condicao -> . ( Condicao )
    (23) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (24) DeclaracaoCondicao -> . NOT Condicao
    (25) DeclaracaoCondicao -> . TRUE
    (26) DeclaracaoCondicao -> . FALSE
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    (               shift and go to state 40
    NOT             shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50

    Condicao                       shift and go to state 38
    DeclaracaoCondicao             shift and go to state 39
    Expressao                      shift and go to state 41
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 27

    (34) CicloFor -> FOR . Atribuicao DirecaoFor Expressao DO LocalInstsList
    (2) Atribuicao -> . Atribuido : = Expressao
    (15) Atribuido -> . ID
    (16) Atribuido -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 30

    Atribuicao                     shift and go to state 52
    Atribuido                      shift and go to state 29
    Acesso_array                   shift and go to state 31
    Variavel_array                 shift and go to state 32

state 28

    (8) InstrucaoCondicional -> IF . Condicao THEN BlocoCondicional ParteElse
    (4) Condicao -> . Condicao AND DeclaracaoCondicao
    (5) Condicao -> . Condicao OR DeclaracaoCondicao
    (6) Condicao -> . DeclaracaoCondicao
    (7) Condicao -> . ( Condicao )
    (23) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (24) DeclaracaoCondicao -> . NOT Condicao
    (25) DeclaracaoCondicao -> . TRUE
    (26) DeclaracaoCondicao -> . FALSE
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    (               shift and go to state 40
    NOT             shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50

    Condicao                       shift and go to state 53
    DeclaracaoCondicao             shift and go to state 39
    Expressao                      shift and go to state 41
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 29

    (2) Atribuicao -> Atribuido . : = Expressao

    :               shift and go to state 54


state 30

    (15) Atribuido -> ID .
    (40) Variavel_array -> ID .

    :               reduce using rule 15 (Atribuido -> ID .)
    [               reduce using rule 40 (Variavel_array -> ID .)


state 31

    (16) Atribuido -> Acesso_array .
    (41) Variavel_array -> Acesso_array .

    :               reduce using rule 16 (Atribuido -> Acesso_array .)
    [               reduce using rule 41 (Variavel_array -> Acesso_array .)


state 32

    (33) Acesso_array -> Variavel_array . [ Expressao ]

    [               shift and go to state 55


state 33

    (1) Dvariaveis -> VAR Listavariaveis .
    (12) Listavariaveis -> Listavariaveis . Variaveis : Tipo ;
    (31) Variaveis -> . Variaveis , ID
    (32) Variaveis -> . ID

    BEGIN           reduce using rule 1 (Dvariaveis -> VAR Listavariaveis .)
    VAR             reduce using rule 1 (Dvariaveis -> VAR Listavariaveis .)
    ID              shift and go to state 57

    Variaveis                      shift and go to state 56

state 34

    (19) UseList -> UseList , ID .

    ;               reduce using rule 19 (UseList -> UseList , ID .)
    ,               reduce using rule 19 (UseList -> UseList , ID .)


state 35

    (57) Bloco -> BEGIN LocalInstsList . END
    (3) LocalInstsList -> LocalInstsList . ; Instrucao
    (18) LocalInstsList -> LocalInstsList . ;

    END             shift and go to state 58
    ;               shift and go to state 37


state 36

    (35) BlocoPrincipal -> BEGIN LocalInstsList END .

    .               reduce using rule 35 (BlocoPrincipal -> BEGIN LocalInstsList END .)


state 37

    (3) LocalInstsList -> LocalInstsList ; . Instrucao
    (18) LocalInstsList -> LocalInstsList ; .
    (36) Instrucao -> . While
    (37) Instrucao -> . CicloFor
    (38) Instrucao -> . InstrucaoCondicional
    (39) Instrucao -> . Atribuicao
    (53) Instrucao -> . Bloco
    (14) While -> . WHILE Condicao DO LocalInstsList
    (34) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO LocalInstsList
    (8) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (2) Atribuicao -> . Atribuido : = Expressao
    (57) Bloco -> . BEGIN LocalInstsList END
    (15) Atribuido -> . ID
    (16) Atribuido -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    END             reduce using rule 18 (LocalInstsList -> LocalInstsList ; .)
    ;               reduce using rule 18 (LocalInstsList -> LocalInstsList ; .)
    ELSE            reduce using rule 18 (LocalInstsList -> LocalInstsList ; .)
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    IF              shift and go to state 28
    BEGIN           shift and go to state 18
    ID              shift and go to state 30

    Instrucao                      shift and go to state 59
    While                          shift and go to state 21
    CicloFor                       shift and go to state 22
    InstrucaoCondicional           shift and go to state 23
    Atribuicao                     shift and go to state 24
    Bloco                          shift and go to state 25
    Atribuido                      shift and go to state 29
    Acesso_array                   shift and go to state 31
    Variavel_array                 shift and go to state 32

state 38

    (14) While -> WHILE Condicao . DO LocalInstsList
    (4) Condicao -> Condicao . AND DeclaracaoCondicao
    (5) Condicao -> Condicao . OR DeclaracaoCondicao

    DO              shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62


state 39

    (6) Condicao -> DeclaracaoCondicao .

    DO              reduce using rule 6 (Condicao -> DeclaracaoCondicao .)
    AND             reduce using rule 6 (Condicao -> DeclaracaoCondicao .)
    OR              reduce using rule 6 (Condicao -> DeclaracaoCondicao .)
    THEN            reduce using rule 6 (Condicao -> DeclaracaoCondicao .)
    )               reduce using rule 6 (Condicao -> DeclaracaoCondicao .)


state 40

    (7) Condicao -> ( . Condicao )
    (73) Fator -> ( . Expressao )
    (4) Condicao -> . Condicao AND DeclaracaoCondicao
    (5) Condicao -> . Condicao OR DeclaracaoCondicao
    (6) Condicao -> . DeclaracaoCondicao
    (7) Condicao -> . ( Condicao )
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (23) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (24) DeclaracaoCondicao -> . NOT Condicao
    (25) DeclaracaoCondicao -> . TRUE
    (26) DeclaracaoCondicao -> . FALSE
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    (               shift and go to state 40
    NOT             shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50

    Condicao                       shift and go to state 63
    Expressao                      shift and go to state 64
    DeclaracaoCondicao             shift and go to state 39
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 41

    (23) DeclaracaoCondicao -> Expressao . SimboloCondicional Expressao
    (54) Expressao -> Expressao . + Termo
    (55) Expressao -> Expressao . - Termo
    (44) SimboloCondicional -> . =
    (45) SimboloCondicional -> . < >
    (46) SimboloCondicional -> . < =
    (47) SimboloCondicional -> . <
    (48) SimboloCondicional -> . > =
    (49) SimboloCondicional -> . >

    +               shift and go to state 66
    -               shift and go to state 67
    =               shift and go to state 68
    <               shift and go to state 69
    >               shift and go to state 70

    SimboloCondicional             shift and go to state 65

state 42

    (24) DeclaracaoCondicao -> NOT . Condicao
    (4) Condicao -> . Condicao AND DeclaracaoCondicao
    (5) Condicao -> . Condicao OR DeclaracaoCondicao
    (6) Condicao -> . DeclaracaoCondicao
    (7) Condicao -> . ( Condicao )
    (23) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (24) DeclaracaoCondicao -> . NOT Condicao
    (25) DeclaracaoCondicao -> . TRUE
    (26) DeclaracaoCondicao -> . FALSE
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    (               shift and go to state 40
    NOT             shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50

    Condicao                       shift and go to state 71
    DeclaracaoCondicao             shift and go to state 39
    Expressao                      shift and go to state 41
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 43

    (25) DeclaracaoCondicao -> TRUE .
    (71) Fator -> TRUE .

  ! reduce/reduce conflict for ) resolved using rule 25 (DeclaracaoCondicao -> TRUE .)
    DO              reduce using rule 25 (DeclaracaoCondicao -> TRUE .)
    AND             reduce using rule 25 (DeclaracaoCondicao -> TRUE .)
    OR              reduce using rule 25 (DeclaracaoCondicao -> TRUE .)
    THEN            reduce using rule 25 (DeclaracaoCondicao -> TRUE .)
    )               reduce using rule 25 (DeclaracaoCondicao -> TRUE .)
    *               reduce using rule 71 (Fator -> TRUE .)
    /               reduce using rule 71 (Fator -> TRUE .)
    +               reduce using rule 71 (Fator -> TRUE .)
    -               reduce using rule 71 (Fator -> TRUE .)
    =               reduce using rule 71 (Fator -> TRUE .)
    <               reduce using rule 71 (Fator -> TRUE .)
    >               reduce using rule 71 (Fator -> TRUE .)

  ! )               [ reduce using rule 71 (Fator -> TRUE .) ]


state 44

    (26) DeclaracaoCondicao -> FALSE .
    (72) Fator -> FALSE .

  ! reduce/reduce conflict for ) resolved using rule 26 (DeclaracaoCondicao -> FALSE .)
    DO              reduce using rule 26 (DeclaracaoCondicao -> FALSE .)
    AND             reduce using rule 26 (DeclaracaoCondicao -> FALSE .)
    OR              reduce using rule 26 (DeclaracaoCondicao -> FALSE .)
    THEN            reduce using rule 26 (DeclaracaoCondicao -> FALSE .)
    )               reduce using rule 26 (DeclaracaoCondicao -> FALSE .)
    *               reduce using rule 72 (Fator -> FALSE .)
    /               reduce using rule 72 (Fator -> FALSE .)
    +               reduce using rule 72 (Fator -> FALSE .)
    -               reduce using rule 72 (Fator -> FALSE .)
    =               reduce using rule 72 (Fator -> FALSE .)
    <               reduce using rule 72 (Fator -> FALSE .)
    >               reduce using rule 72 (Fator -> FALSE .)

  ! )               [ reduce using rule 72 (Fator -> FALSE .) ]


state 45

    (56) Expressao -> Termo .
    (59) Termo -> Termo . * Fator
    (60) Termo -> Termo . / Fator

    +               reduce using rule 56 (Expressao -> Termo .)
    -               reduce using rule 56 (Expressao -> Termo .)
    =               reduce using rule 56 (Expressao -> Termo .)
    <               reduce using rule 56 (Expressao -> Termo .)
    >               reduce using rule 56 (Expressao -> Termo .)
    )               reduce using rule 56 (Expressao -> Termo .)
    ]               reduce using rule 56 (Expressao -> Termo .)
    DO              reduce using rule 56 (Expressao -> Termo .)
    AND             reduce using rule 56 (Expressao -> Termo .)
    OR              reduce using rule 56 (Expressao -> Termo .)
    THEN            reduce using rule 56 (Expressao -> Termo .)
    END             reduce using rule 56 (Expressao -> Termo .)
    ;               reduce using rule 56 (Expressao -> Termo .)
    TO              reduce using rule 56 (Expressao -> Termo .)
    DOWNTO          reduce using rule 56 (Expressao -> Termo .)
    ELSE            reduce using rule 56 (Expressao -> Termo .)
    *               shift and go to state 72
    /               shift and go to state 73


state 46

    (61) Termo -> Fator .

    *               reduce using rule 61 (Termo -> Fator .)
    /               reduce using rule 61 (Termo -> Fator .)
    +               reduce using rule 61 (Termo -> Fator .)
    -               reduce using rule 61 (Termo -> Fator .)
    =               reduce using rule 61 (Termo -> Fator .)
    <               reduce using rule 61 (Termo -> Fator .)
    >               reduce using rule 61 (Termo -> Fator .)
    )               reduce using rule 61 (Termo -> Fator .)
    ]               reduce using rule 61 (Termo -> Fator .)
    DO              reduce using rule 61 (Termo -> Fator .)
    AND             reduce using rule 61 (Termo -> Fator .)
    OR              reduce using rule 61 (Termo -> Fator .)
    THEN            reduce using rule 61 (Termo -> Fator .)
    END             reduce using rule 61 (Termo -> Fator .)
    ;               reduce using rule 61 (Termo -> Fator .)
    TO              reduce using rule 61 (Termo -> Fator .)
    DOWNTO          reduce using rule 61 (Termo -> Fator .)
    ELSE            reduce using rule 61 (Termo -> Fator .)


state 47

    (67) Fator -> ID .
    (40) Variavel_array -> ID .

    *               reduce using rule 67 (Fator -> ID .)
    /               reduce using rule 67 (Fator -> ID .)
    +               reduce using rule 67 (Fator -> ID .)
    -               reduce using rule 67 (Fator -> ID .)
    =               reduce using rule 67 (Fator -> ID .)
    <               reduce using rule 67 (Fator -> ID .)
    >               reduce using rule 67 (Fator -> ID .)
    )               reduce using rule 67 (Fator -> ID .)
    ]               reduce using rule 67 (Fator -> ID .)
    DO              reduce using rule 67 (Fator -> ID .)
    AND             reduce using rule 67 (Fator -> ID .)
    OR              reduce using rule 67 (Fator -> ID .)
    THEN            reduce using rule 67 (Fator -> ID .)
    END             reduce using rule 67 (Fator -> ID .)
    ;               reduce using rule 67 (Fator -> ID .)
    TO              reduce using rule 67 (Fator -> ID .)
    DOWNTO          reduce using rule 67 (Fator -> ID .)
    ELSE            reduce using rule 67 (Fator -> ID .)
    [               reduce using rule 40 (Variavel_array -> ID .)


state 48

    (68) Fator -> REAL .

    *               reduce using rule 68 (Fator -> REAL .)
    /               reduce using rule 68 (Fator -> REAL .)
    +               reduce using rule 68 (Fator -> REAL .)
    -               reduce using rule 68 (Fator -> REAL .)
    =               reduce using rule 68 (Fator -> REAL .)
    <               reduce using rule 68 (Fator -> REAL .)
    >               reduce using rule 68 (Fator -> REAL .)
    )               reduce using rule 68 (Fator -> REAL .)
    ]               reduce using rule 68 (Fator -> REAL .)
    DO              reduce using rule 68 (Fator -> REAL .)
    AND             reduce using rule 68 (Fator -> REAL .)
    OR              reduce using rule 68 (Fator -> REAL .)
    THEN            reduce using rule 68 (Fator -> REAL .)
    END             reduce using rule 68 (Fator -> REAL .)
    ;               reduce using rule 68 (Fator -> REAL .)
    TO              reduce using rule 68 (Fator -> REAL .)
    DOWNTO          reduce using rule 68 (Fator -> REAL .)
    ELSE            reduce using rule 68 (Fator -> REAL .)


state 49

    (69) Fator -> INTEGER .

    *               reduce using rule 69 (Fator -> INTEGER .)
    /               reduce using rule 69 (Fator -> INTEGER .)
    +               reduce using rule 69 (Fator -> INTEGER .)
    -               reduce using rule 69 (Fator -> INTEGER .)
    =               reduce using rule 69 (Fator -> INTEGER .)
    <               reduce using rule 69 (Fator -> INTEGER .)
    >               reduce using rule 69 (Fator -> INTEGER .)
    )               reduce using rule 69 (Fator -> INTEGER .)
    ]               reduce using rule 69 (Fator -> INTEGER .)
    DO              reduce using rule 69 (Fator -> INTEGER .)
    AND             reduce using rule 69 (Fator -> INTEGER .)
    OR              reduce using rule 69 (Fator -> INTEGER .)
    THEN            reduce using rule 69 (Fator -> INTEGER .)
    END             reduce using rule 69 (Fator -> INTEGER .)
    ;               reduce using rule 69 (Fator -> INTEGER .)
    TO              reduce using rule 69 (Fator -> INTEGER .)
    DOWNTO          reduce using rule 69 (Fator -> INTEGER .)
    ELSE            reduce using rule 69 (Fator -> INTEGER .)


state 50

    (70) Fator -> STRING .

    *               reduce using rule 70 (Fator -> STRING .)
    /               reduce using rule 70 (Fator -> STRING .)
    +               reduce using rule 70 (Fator -> STRING .)
    -               reduce using rule 70 (Fator -> STRING .)
    =               reduce using rule 70 (Fator -> STRING .)
    <               reduce using rule 70 (Fator -> STRING .)
    >               reduce using rule 70 (Fator -> STRING .)
    )               reduce using rule 70 (Fator -> STRING .)
    ]               reduce using rule 70 (Fator -> STRING .)
    DO              reduce using rule 70 (Fator -> STRING .)
    AND             reduce using rule 70 (Fator -> STRING .)
    OR              reduce using rule 70 (Fator -> STRING .)
    THEN            reduce using rule 70 (Fator -> STRING .)
    END             reduce using rule 70 (Fator -> STRING .)
    ;               reduce using rule 70 (Fator -> STRING .)
    TO              reduce using rule 70 (Fator -> STRING .)
    DOWNTO          reduce using rule 70 (Fator -> STRING .)
    ELSE            reduce using rule 70 (Fator -> STRING .)


state 51

    (74) Fator -> Acesso_array .
    (41) Variavel_array -> Acesso_array .

    *               reduce using rule 74 (Fator -> Acesso_array .)
    /               reduce using rule 74 (Fator -> Acesso_array .)
    +               reduce using rule 74 (Fator -> Acesso_array .)
    -               reduce using rule 74 (Fator -> Acesso_array .)
    =               reduce using rule 74 (Fator -> Acesso_array .)
    <               reduce using rule 74 (Fator -> Acesso_array .)
    >               reduce using rule 74 (Fator -> Acesso_array .)
    )               reduce using rule 74 (Fator -> Acesso_array .)
    ]               reduce using rule 74 (Fator -> Acesso_array .)
    DO              reduce using rule 74 (Fator -> Acesso_array .)
    AND             reduce using rule 74 (Fator -> Acesso_array .)
    OR              reduce using rule 74 (Fator -> Acesso_array .)
    THEN            reduce using rule 74 (Fator -> Acesso_array .)
    END             reduce using rule 74 (Fator -> Acesso_array .)
    ;               reduce using rule 74 (Fator -> Acesso_array .)
    TO              reduce using rule 74 (Fator -> Acesso_array .)
    DOWNTO          reduce using rule 74 (Fator -> Acesso_array .)
    ELSE            reduce using rule 74 (Fator -> Acesso_array .)
    [               reduce using rule 41 (Variavel_array -> Acesso_array .)


state 52

    (34) CicloFor -> FOR Atribuicao . DirecaoFor Expressao DO LocalInstsList
    (42) DirecaoFor -> . TO
    (43) DirecaoFor -> . DOWNTO

    TO              shift and go to state 75
    DOWNTO          shift and go to state 76

    DirecaoFor                     shift and go to state 74

state 53

    (8) InstrucaoCondicional -> IF Condicao . THEN BlocoCondicional ParteElse
    (4) Condicao -> Condicao . AND DeclaracaoCondicao
    (5) Condicao -> Condicao . OR DeclaracaoCondicao

    THEN            shift and go to state 77
    AND             shift and go to state 61
    OR              shift and go to state 62


state 54

    (2) Atribuicao -> Atribuido : . = Expressao

    =               shift and go to state 78


state 55

    (33) Acesso_array -> Variavel_array [ . Expressao ]
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Variavel_array                 shift and go to state 32
    Expressao                      shift and go to state 79
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51

state 56

    (12) Listavariaveis -> Listavariaveis Variaveis . : Tipo ;
    (31) Variaveis -> Variaveis . , ID

    :               shift and go to state 83
    ,               shift and go to state 84


state 57

    (32) Variaveis -> ID .

    :               reduce using rule 32 (Variaveis -> ID .)
    ,               reduce using rule 32 (Variaveis -> ID .)


state 58

    (57) Bloco -> BEGIN LocalInstsList END .

    END             reduce using rule 57 (Bloco -> BEGIN LocalInstsList END .)
    ;               reduce using rule 57 (Bloco -> BEGIN LocalInstsList END .)
    ELSE            reduce using rule 57 (Bloco -> BEGIN LocalInstsList END .)


state 59

    (3) LocalInstsList -> LocalInstsList ; Instrucao .

    END             reduce using rule 3 (LocalInstsList -> LocalInstsList ; Instrucao .)
    ;               reduce using rule 3 (LocalInstsList -> LocalInstsList ; Instrucao .)
    ELSE            reduce using rule 3 (LocalInstsList -> LocalInstsList ; Instrucao .)


state 60

    (14) While -> WHILE Condicao DO . LocalInstsList
    (3) LocalInstsList -> . LocalInstsList ; Instrucao
    (18) LocalInstsList -> . LocalInstsList ;
    (30) LocalInstsList -> . Instrucao
    (36) Instrucao -> . While
    (37) Instrucao -> . CicloFor
    (38) Instrucao -> . InstrucaoCondicional
    (39) Instrucao -> . Atribuicao
    (53) Instrucao -> . Bloco
    (14) While -> . WHILE Condicao DO LocalInstsList
    (34) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO LocalInstsList
    (8) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (2) Atribuicao -> . Atribuido : = Expressao
    (57) Bloco -> . BEGIN LocalInstsList END
    (15) Atribuido -> . ID
    (16) Atribuido -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    IF              shift and go to state 28
    BEGIN           shift and go to state 18
    ID              shift and go to state 30

    LocalInstsList                 shift and go to state 85
    Instrucao                      shift and go to state 20
    While                          shift and go to state 21
    CicloFor                       shift and go to state 22
    InstrucaoCondicional           shift and go to state 23
    Atribuicao                     shift and go to state 24
    Bloco                          shift and go to state 25
    Atribuido                      shift and go to state 29
    Acesso_array                   shift and go to state 31
    Variavel_array                 shift and go to state 32

state 61

    (4) Condicao -> Condicao AND . DeclaracaoCondicao
    (23) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (24) DeclaracaoCondicao -> . NOT Condicao
    (25) DeclaracaoCondicao -> . TRUE
    (26) DeclaracaoCondicao -> . FALSE
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    NOT             shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    (               shift and go to state 82

    DeclaracaoCondicao             shift and go to state 86
    Expressao                      shift and go to state 41
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 62

    (5) Condicao -> Condicao OR . DeclaracaoCondicao
    (23) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (24) DeclaracaoCondicao -> . NOT Condicao
    (25) DeclaracaoCondicao -> . TRUE
    (26) DeclaracaoCondicao -> . FALSE
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    NOT             shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    (               shift and go to state 82

    DeclaracaoCondicao             shift and go to state 87
    Expressao                      shift and go to state 41
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 63

    (7) Condicao -> ( Condicao . )
    (4) Condicao -> Condicao . AND DeclaracaoCondicao
    (5) Condicao -> Condicao . OR DeclaracaoCondicao

    )               shift and go to state 88
    AND             shift and go to state 61
    OR              shift and go to state 62


state 64

    (73) Fator -> ( Expressao . )
    (54) Expressao -> Expressao . + Termo
    (55) Expressao -> Expressao . - Termo
    (23) DeclaracaoCondicao -> Expressao . SimboloCondicional Expressao
    (44) SimboloCondicional -> . =
    (45) SimboloCondicional -> . < >
    (46) SimboloCondicional -> . < =
    (47) SimboloCondicional -> . <
    (48) SimboloCondicional -> . > =
    (49) SimboloCondicional -> . >

    )               shift and go to state 89
    +               shift and go to state 66
    -               shift and go to state 67
    =               shift and go to state 68
    <               shift and go to state 69
    >               shift and go to state 70

    SimboloCondicional             shift and go to state 65

state 65

    (23) DeclaracaoCondicao -> Expressao SimboloCondicional . Expressao
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Expressao                      shift and go to state 90
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 66

    (54) Expressao -> Expressao + . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Termo                          shift and go to state 91
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 67

    (55) Expressao -> Expressao - . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Termo                          shift and go to state 92
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 68

    (44) SimboloCondicional -> = .

    ID              reduce using rule 44 (SimboloCondicional -> = .)
    REAL            reduce using rule 44 (SimboloCondicional -> = .)
    INTEGER         reduce using rule 44 (SimboloCondicional -> = .)
    STRING          reduce using rule 44 (SimboloCondicional -> = .)
    TRUE            reduce using rule 44 (SimboloCondicional -> = .)
    FALSE           reduce using rule 44 (SimboloCondicional -> = .)
    (               reduce using rule 44 (SimboloCondicional -> = .)


state 69

    (45) SimboloCondicional -> < . >
    (46) SimboloCondicional -> < . =
    (47) SimboloCondicional -> < .

    >               shift and go to state 93
    =               shift and go to state 94
    ID              reduce using rule 47 (SimboloCondicional -> < .)
    REAL            reduce using rule 47 (SimboloCondicional -> < .)
    INTEGER         reduce using rule 47 (SimboloCondicional -> < .)
    STRING          reduce using rule 47 (SimboloCondicional -> < .)
    TRUE            reduce using rule 47 (SimboloCondicional -> < .)
    FALSE           reduce using rule 47 (SimboloCondicional -> < .)
    (               reduce using rule 47 (SimboloCondicional -> < .)


state 70

    (48) SimboloCondicional -> > . =
    (49) SimboloCondicional -> > .

    =               shift and go to state 95
    ID              reduce using rule 49 (SimboloCondicional -> > .)
    REAL            reduce using rule 49 (SimboloCondicional -> > .)
    INTEGER         reduce using rule 49 (SimboloCondicional -> > .)
    STRING          reduce using rule 49 (SimboloCondicional -> > .)
    TRUE            reduce using rule 49 (SimboloCondicional -> > .)
    FALSE           reduce using rule 49 (SimboloCondicional -> > .)
    (               reduce using rule 49 (SimboloCondicional -> > .)


state 71

    (24) DeclaracaoCondicao -> NOT Condicao .
    (4) Condicao -> Condicao . AND DeclaracaoCondicao
    (5) Condicao -> Condicao . OR DeclaracaoCondicao

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    DO              reduce using rule 24 (DeclaracaoCondicao -> NOT Condicao .)
    THEN            reduce using rule 24 (DeclaracaoCondicao -> NOT Condicao .)
    )               reduce using rule 24 (DeclaracaoCondicao -> NOT Condicao .)
    AND             shift and go to state 61
    OR              shift and go to state 62

  ! AND             [ reduce using rule 24 (DeclaracaoCondicao -> NOT Condicao .) ]
  ! OR              [ reduce using rule 24 (DeclaracaoCondicao -> NOT Condicao .) ]


state 72

    (59) Termo -> Termo * . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Fator                          shift and go to state 96
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 73

    (60) Termo -> Termo / . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Fator                          shift and go to state 97
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 74

    (34) CicloFor -> FOR Atribuicao DirecaoFor . Expressao DO LocalInstsList
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Expressao                      shift and go to state 98
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 75

    (42) DirecaoFor -> TO .

    ID              reduce using rule 42 (DirecaoFor -> TO .)
    REAL            reduce using rule 42 (DirecaoFor -> TO .)
    INTEGER         reduce using rule 42 (DirecaoFor -> TO .)
    STRING          reduce using rule 42 (DirecaoFor -> TO .)
    TRUE            reduce using rule 42 (DirecaoFor -> TO .)
    FALSE           reduce using rule 42 (DirecaoFor -> TO .)
    (               reduce using rule 42 (DirecaoFor -> TO .)


state 76

    (43) DirecaoFor -> DOWNTO .

    ID              reduce using rule 43 (DirecaoFor -> DOWNTO .)
    REAL            reduce using rule 43 (DirecaoFor -> DOWNTO .)
    INTEGER         reduce using rule 43 (DirecaoFor -> DOWNTO .)
    STRING          reduce using rule 43 (DirecaoFor -> DOWNTO .)
    TRUE            reduce using rule 43 (DirecaoFor -> DOWNTO .)
    FALSE           reduce using rule 43 (DirecaoFor -> DOWNTO .)
    (               reduce using rule 43 (DirecaoFor -> DOWNTO .)


state 77

    (8) InstrucaoCondicional -> IF Condicao THEN . BlocoCondicional ParteElse
    (17) BlocoCondicional -> . LocalInstsList
    (3) LocalInstsList -> . LocalInstsList ; Instrucao
    (18) LocalInstsList -> . LocalInstsList ;
    (30) LocalInstsList -> . Instrucao
    (36) Instrucao -> . While
    (37) Instrucao -> . CicloFor
    (38) Instrucao -> . InstrucaoCondicional
    (39) Instrucao -> . Atribuicao
    (53) Instrucao -> . Bloco
    (14) While -> . WHILE Condicao DO LocalInstsList
    (34) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO LocalInstsList
    (8) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (2) Atribuicao -> . Atribuido : = Expressao
    (57) Bloco -> . BEGIN LocalInstsList END
    (15) Atribuido -> . ID
    (16) Atribuido -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    IF              shift and go to state 28
    BEGIN           shift and go to state 18
    ID              shift and go to state 30

    BlocoCondicional               shift and go to state 99
    LocalInstsList                 shift and go to state 100
    Instrucao                      shift and go to state 20
    While                          shift and go to state 21
    CicloFor                       shift and go to state 22
    InstrucaoCondicional           shift and go to state 23
    Atribuicao                     shift and go to state 24
    Bloco                          shift and go to state 25
    Atribuido                      shift and go to state 29
    Acesso_array                   shift and go to state 31
    Variavel_array                 shift and go to state 32

state 78

    (2) Atribuicao -> Atribuido : = . Expressao
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Expressao                      shift and go to state 101
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 79

    (33) Acesso_array -> Variavel_array [ Expressao . ]
    (54) Expressao -> Expressao . + Termo
    (55) Expressao -> Expressao . - Termo

    ]               shift and go to state 102
    +               shift and go to state 66
    -               shift and go to state 67


state 80

    (71) Fator -> TRUE .

    *               reduce using rule 71 (Fator -> TRUE .)
    /               reduce using rule 71 (Fator -> TRUE .)
    ]               reduce using rule 71 (Fator -> TRUE .)
    +               reduce using rule 71 (Fator -> TRUE .)
    -               reduce using rule 71 (Fator -> TRUE .)
    DO              reduce using rule 71 (Fator -> TRUE .)
    AND             reduce using rule 71 (Fator -> TRUE .)
    OR              reduce using rule 71 (Fator -> TRUE .)
    THEN            reduce using rule 71 (Fator -> TRUE .)
    )               reduce using rule 71 (Fator -> TRUE .)
    =               reduce using rule 71 (Fator -> TRUE .)
    <               reduce using rule 71 (Fator -> TRUE .)
    >               reduce using rule 71 (Fator -> TRUE .)
    END             reduce using rule 71 (Fator -> TRUE .)
    ;               reduce using rule 71 (Fator -> TRUE .)
    TO              reduce using rule 71 (Fator -> TRUE .)
    DOWNTO          reduce using rule 71 (Fator -> TRUE .)
    ELSE            reduce using rule 71 (Fator -> TRUE .)


state 81

    (72) Fator -> FALSE .

    *               reduce using rule 72 (Fator -> FALSE .)
    /               reduce using rule 72 (Fator -> FALSE .)
    ]               reduce using rule 72 (Fator -> FALSE .)
    +               reduce using rule 72 (Fator -> FALSE .)
    -               reduce using rule 72 (Fator -> FALSE .)
    DO              reduce using rule 72 (Fator -> FALSE .)
    AND             reduce using rule 72 (Fator -> FALSE .)
    OR              reduce using rule 72 (Fator -> FALSE .)
    THEN            reduce using rule 72 (Fator -> FALSE .)
    )               reduce using rule 72 (Fator -> FALSE .)
    =               reduce using rule 72 (Fator -> FALSE .)
    <               reduce using rule 72 (Fator -> FALSE .)
    >               reduce using rule 72 (Fator -> FALSE .)
    END             reduce using rule 72 (Fator -> FALSE .)
    ;               reduce using rule 72 (Fator -> FALSE .)
    TO              reduce using rule 72 (Fator -> FALSE .)
    DOWNTO          reduce using rule 72 (Fator -> FALSE .)
    ELSE            reduce using rule 72 (Fator -> FALSE .)


state 82

    (73) Fator -> ( . Expressao )
    (54) Expressao -> . Expressao + Termo
    (55) Expressao -> . Expressao - Termo
    (56) Expressao -> . Termo
    (59) Termo -> . Termo * Fator
    (60) Termo -> . Termo / Fator
    (61) Termo -> . Fator
    (67) Fator -> . ID
    (68) Fator -> . REAL
    (69) Fator -> . INTEGER
    (70) Fator -> . STRING
    (71) Fator -> . TRUE
    (72) Fator -> . FALSE
    (73) Fator -> . ( Expressao )
    (74) Fator -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    ID              shift and go to state 47
    REAL            shift and go to state 48
    INTEGER         shift and go to state 49
    STRING          shift and go to state 50
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    (               shift and go to state 82

    Expressao                      shift and go to state 103
    Termo                          shift and go to state 45
    Fator                          shift and go to state 46
    Acesso_array                   shift and go to state 51
    Variavel_array                 shift and go to state 32

state 83

    (12) Listavariaveis -> Listavariaveis Variaveis : . Tipo ;
    (50) Tipo -> . Datatype
    (51) Tipo -> . ARRAY [ Intervalo ] OF Datatype
    (52) Tipo -> . ID
    (62) Datatype -> . REAL_TYPE
    (63) Datatype -> . INTEGER_TYPE
    (64) Datatype -> . STRING_TYPE
    (65) Datatype -> . BOOLEAN_TYPE
    (66) Datatype -> . CHAR_TYPE

    ARRAY           shift and go to state 106
    ID              shift and go to state 107
    REAL_TYPE       shift and go to state 108
    INTEGER_TYPE    shift and go to state 109
    STRING_TYPE     shift and go to state 110
    BOOLEAN_TYPE    shift and go to state 111
    CHAR_TYPE       shift and go to state 112

    Tipo                           shift and go to state 104
    Datatype                       shift and go to state 105

state 84

    (31) Variaveis -> Variaveis , . ID

    ID              shift and go to state 113


state 85

    (14) While -> WHILE Condicao DO LocalInstsList .
    (3) LocalInstsList -> LocalInstsList . ; Instrucao
    (18) LocalInstsList -> LocalInstsList . ;

  ! shift/reduce conflict for ; resolved as shift
    END             reduce using rule 14 (While -> WHILE Condicao DO LocalInstsList .)
    ELSE            reduce using rule 14 (While -> WHILE Condicao DO LocalInstsList .)
    ;               shift and go to state 37

  ! ;               [ reduce using rule 14 (While -> WHILE Condicao DO LocalInstsList .) ]


state 86

    (4) Condicao -> Condicao AND DeclaracaoCondicao .

    DO              reduce using rule 4 (Condicao -> Condicao AND DeclaracaoCondicao .)
    AND             reduce using rule 4 (Condicao -> Condicao AND DeclaracaoCondicao .)
    OR              reduce using rule 4 (Condicao -> Condicao AND DeclaracaoCondicao .)
    THEN            reduce using rule 4 (Condicao -> Condicao AND DeclaracaoCondicao .)
    )               reduce using rule 4 (Condicao -> Condicao AND DeclaracaoCondicao .)


state 87

    (5) Condicao -> Condicao OR DeclaracaoCondicao .

    DO              reduce using rule 5 (Condicao -> Condicao OR DeclaracaoCondicao .)
    AND             reduce using rule 5 (Condicao -> Condicao OR DeclaracaoCondicao .)
    OR              reduce using rule 5 (Condicao -> Condicao OR DeclaracaoCondicao .)
    THEN            reduce using rule 5 (Condicao -> Condicao OR DeclaracaoCondicao .)
    )               reduce using rule 5 (Condicao -> Condicao OR DeclaracaoCondicao .)


state 88

    (7) Condicao -> ( Condicao ) .

    DO              reduce using rule 7 (Condicao -> ( Condicao ) .)
    AND             reduce using rule 7 (Condicao -> ( Condicao ) .)
    OR              reduce using rule 7 (Condicao -> ( Condicao ) .)
    THEN            reduce using rule 7 (Condicao -> ( Condicao ) .)
    )               reduce using rule 7 (Condicao -> ( Condicao ) .)


state 89

    (73) Fator -> ( Expressao ) .

    *               reduce using rule 73 (Fator -> ( Expressao ) .)
    /               reduce using rule 73 (Fator -> ( Expressao ) .)
    +               reduce using rule 73 (Fator -> ( Expressao ) .)
    -               reduce using rule 73 (Fator -> ( Expressao ) .)
    =               reduce using rule 73 (Fator -> ( Expressao ) .)
    <               reduce using rule 73 (Fator -> ( Expressao ) .)
    >               reduce using rule 73 (Fator -> ( Expressao ) .)
    )               reduce using rule 73 (Fator -> ( Expressao ) .)
    ]               reduce using rule 73 (Fator -> ( Expressao ) .)
    DO              reduce using rule 73 (Fator -> ( Expressao ) .)
    AND             reduce using rule 73 (Fator -> ( Expressao ) .)
    OR              reduce using rule 73 (Fator -> ( Expressao ) .)
    THEN            reduce using rule 73 (Fator -> ( Expressao ) .)
    END             reduce using rule 73 (Fator -> ( Expressao ) .)
    ;               reduce using rule 73 (Fator -> ( Expressao ) .)
    TO              reduce using rule 73 (Fator -> ( Expressao ) .)
    DOWNTO          reduce using rule 73 (Fator -> ( Expressao ) .)
    ELSE            reduce using rule 73 (Fator -> ( Expressao ) .)


state 90

    (23) DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .
    (54) Expressao -> Expressao . + Termo
    (55) Expressao -> Expressao . - Termo

    DO              reduce using rule 23 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    AND             reduce using rule 23 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    OR              reduce using rule 23 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    THEN            reduce using rule 23 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    )               reduce using rule 23 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    +               shift and go to state 66
    -               shift and go to state 67


state 91

    (54) Expressao -> Expressao + Termo .
    (59) Termo -> Termo . * Fator
    (60) Termo -> Termo . / Fator

    +               reduce using rule 54 (Expressao -> Expressao + Termo .)
    -               reduce using rule 54 (Expressao -> Expressao + Termo .)
    =               reduce using rule 54 (Expressao -> Expressao + Termo .)
    <               reduce using rule 54 (Expressao -> Expressao + Termo .)
    >               reduce using rule 54 (Expressao -> Expressao + Termo .)
    )               reduce using rule 54 (Expressao -> Expressao + Termo .)
    ]               reduce using rule 54 (Expressao -> Expressao + Termo .)
    DO              reduce using rule 54 (Expressao -> Expressao + Termo .)
    AND             reduce using rule 54 (Expressao -> Expressao + Termo .)
    OR              reduce using rule 54 (Expressao -> Expressao + Termo .)
    THEN            reduce using rule 54 (Expressao -> Expressao + Termo .)
    END             reduce using rule 54 (Expressao -> Expressao + Termo .)
    ;               reduce using rule 54 (Expressao -> Expressao + Termo .)
    TO              reduce using rule 54 (Expressao -> Expressao + Termo .)
    DOWNTO          reduce using rule 54 (Expressao -> Expressao + Termo .)
    ELSE            reduce using rule 54 (Expressao -> Expressao + Termo .)
    *               shift and go to state 72
    /               shift and go to state 73


state 92

    (55) Expressao -> Expressao - Termo .
    (59) Termo -> Termo . * Fator
    (60) Termo -> Termo . / Fator

    +               reduce using rule 55 (Expressao -> Expressao - Termo .)
    -               reduce using rule 55 (Expressao -> Expressao - Termo .)
    =               reduce using rule 55 (Expressao -> Expressao - Termo .)
    <               reduce using rule 55 (Expressao -> Expressao - Termo .)
    >               reduce using rule 55 (Expressao -> Expressao - Termo .)
    )               reduce using rule 55 (Expressao -> Expressao - Termo .)
    ]               reduce using rule 55 (Expressao -> Expressao - Termo .)
    DO              reduce using rule 55 (Expressao -> Expressao - Termo .)
    AND             reduce using rule 55 (Expressao -> Expressao - Termo .)
    OR              reduce using rule 55 (Expressao -> Expressao - Termo .)
    THEN            reduce using rule 55 (Expressao -> Expressao - Termo .)
    END             reduce using rule 55 (Expressao -> Expressao - Termo .)
    ;               reduce using rule 55 (Expressao -> Expressao - Termo .)
    TO              reduce using rule 55 (Expressao -> Expressao - Termo .)
    DOWNTO          reduce using rule 55 (Expressao -> Expressao - Termo .)
    ELSE            reduce using rule 55 (Expressao -> Expressao - Termo .)
    *               shift and go to state 72
    /               shift and go to state 73


state 93

    (45) SimboloCondicional -> < > .

    ID              reduce using rule 45 (SimboloCondicional -> < > .)
    REAL            reduce using rule 45 (SimboloCondicional -> < > .)
    INTEGER         reduce using rule 45 (SimboloCondicional -> < > .)
    STRING          reduce using rule 45 (SimboloCondicional -> < > .)
    TRUE            reduce using rule 45 (SimboloCondicional -> < > .)
    FALSE           reduce using rule 45 (SimboloCondicional -> < > .)
    (               reduce using rule 45 (SimboloCondicional -> < > .)


state 94

    (46) SimboloCondicional -> < = .

    ID              reduce using rule 46 (SimboloCondicional -> < = .)
    REAL            reduce using rule 46 (SimboloCondicional -> < = .)
    INTEGER         reduce using rule 46 (SimboloCondicional -> < = .)
    STRING          reduce using rule 46 (SimboloCondicional -> < = .)
    TRUE            reduce using rule 46 (SimboloCondicional -> < = .)
    FALSE           reduce using rule 46 (SimboloCondicional -> < = .)
    (               reduce using rule 46 (SimboloCondicional -> < = .)


state 95

    (48) SimboloCondicional -> > = .

    ID              reduce using rule 48 (SimboloCondicional -> > = .)
    REAL            reduce using rule 48 (SimboloCondicional -> > = .)
    INTEGER         reduce using rule 48 (SimboloCondicional -> > = .)
    STRING          reduce using rule 48 (SimboloCondicional -> > = .)
    TRUE            reduce using rule 48 (SimboloCondicional -> > = .)
    FALSE           reduce using rule 48 (SimboloCondicional -> > = .)
    (               reduce using rule 48 (SimboloCondicional -> > = .)


state 96

    (59) Termo -> Termo * Fator .

    *               reduce using rule 59 (Termo -> Termo * Fator .)
    /               reduce using rule 59 (Termo -> Termo * Fator .)
    +               reduce using rule 59 (Termo -> Termo * Fator .)
    -               reduce using rule 59 (Termo -> Termo * Fator .)
    =               reduce using rule 59 (Termo -> Termo * Fator .)
    <               reduce using rule 59 (Termo -> Termo * Fator .)
    >               reduce using rule 59 (Termo -> Termo * Fator .)
    )               reduce using rule 59 (Termo -> Termo * Fator .)
    ]               reduce using rule 59 (Termo -> Termo * Fator .)
    DO              reduce using rule 59 (Termo -> Termo * Fator .)
    AND             reduce using rule 59 (Termo -> Termo * Fator .)
    OR              reduce using rule 59 (Termo -> Termo * Fator .)
    THEN            reduce using rule 59 (Termo -> Termo * Fator .)
    END             reduce using rule 59 (Termo -> Termo * Fator .)
    ;               reduce using rule 59 (Termo -> Termo * Fator .)
    TO              reduce using rule 59 (Termo -> Termo * Fator .)
    DOWNTO          reduce using rule 59 (Termo -> Termo * Fator .)
    ELSE            reduce using rule 59 (Termo -> Termo * Fator .)


state 97

    (60) Termo -> Termo / Fator .

    *               reduce using rule 60 (Termo -> Termo / Fator .)
    /               reduce using rule 60 (Termo -> Termo / Fator .)
    +               reduce using rule 60 (Termo -> Termo / Fator .)
    -               reduce using rule 60 (Termo -> Termo / Fator .)
    =               reduce using rule 60 (Termo -> Termo / Fator .)
    <               reduce using rule 60 (Termo -> Termo / Fator .)
    >               reduce using rule 60 (Termo -> Termo / Fator .)
    )               reduce using rule 60 (Termo -> Termo / Fator .)
    ]               reduce using rule 60 (Termo -> Termo / Fator .)
    DO              reduce using rule 60 (Termo -> Termo / Fator .)
    AND             reduce using rule 60 (Termo -> Termo / Fator .)
    OR              reduce using rule 60 (Termo -> Termo / Fator .)
    THEN            reduce using rule 60 (Termo -> Termo / Fator .)
    END             reduce using rule 60 (Termo -> Termo / Fator .)
    ;               reduce using rule 60 (Termo -> Termo / Fator .)
    TO              reduce using rule 60 (Termo -> Termo / Fator .)
    DOWNTO          reduce using rule 60 (Termo -> Termo / Fator .)
    ELSE            reduce using rule 60 (Termo -> Termo / Fator .)


state 98

    (34) CicloFor -> FOR Atribuicao DirecaoFor Expressao . DO LocalInstsList
    (54) Expressao -> Expressao . + Termo
    (55) Expressao -> Expressao . - Termo

    DO              shift and go to state 114
    +               shift and go to state 66
    -               shift and go to state 67


state 99

    (8) InstrucaoCondicional -> IF Condicao THEN BlocoCondicional . ParteElse
    (27) ParteElse -> . ELSE LocalInstsList
    (28) ParteElse -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 116
    END             reduce using rule 28 (ParteElse -> .)
    ;               reduce using rule 28 (ParteElse -> .)

  ! ELSE            [ reduce using rule 28 (ParteElse -> .) ]

    ParteElse                      shift and go to state 115

state 100

    (17) BlocoCondicional -> LocalInstsList .
    (3) LocalInstsList -> LocalInstsList . ; Instrucao
    (18) LocalInstsList -> LocalInstsList . ;

  ! shift/reduce conflict for ; resolved as shift
    END             reduce using rule 17 (BlocoCondicional -> LocalInstsList .)
    ELSE            reduce using rule 17 (BlocoCondicional -> LocalInstsList .)
    ;               shift and go to state 37

  ! ;               [ reduce using rule 17 (BlocoCondicional -> LocalInstsList .) ]


state 101

    (2) Atribuicao -> Atribuido : = Expressao .
    (54) Expressao -> Expressao . + Termo
    (55) Expressao -> Expressao . - Termo

    END             reduce using rule 2 (Atribuicao -> Atribuido : = Expressao .)
    ;               reduce using rule 2 (Atribuicao -> Atribuido : = Expressao .)
    TO              reduce using rule 2 (Atribuicao -> Atribuido : = Expressao .)
    DOWNTO          reduce using rule 2 (Atribuicao -> Atribuido : = Expressao .)
    ELSE            reduce using rule 2 (Atribuicao -> Atribuido : = Expressao .)
    +               shift and go to state 66
    -               shift and go to state 67


state 102

    (33) Acesso_array -> Variavel_array [ Expressao ] .

    :               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    [               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    *               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    /               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    +               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    -               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    =               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    <               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    >               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    )               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    ]               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    DO              reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    AND             reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    OR              reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    THEN            reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    END             reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    ;               reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    TO              reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    DOWNTO          reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)
    ELSE            reduce using rule 33 (Acesso_array -> Variavel_array [ Expressao ] .)


state 103

    (73) Fator -> ( Expressao . )
    (54) Expressao -> Expressao . + Termo
    (55) Expressao -> Expressao . - Termo

    )               shift and go to state 89
    +               shift and go to state 66
    -               shift and go to state 67


state 104

    (12) Listavariaveis -> Listavariaveis Variaveis : Tipo . ;

    ;               shift and go to state 117


state 105

    (50) Tipo -> Datatype .

    ;               reduce using rule 50 (Tipo -> Datatype .)


state 106

    (51) Tipo -> ARRAY . [ Intervalo ] OF Datatype

    [               shift and go to state 118


state 107

    (52) Tipo -> ID .

    ;               reduce using rule 52 (Tipo -> ID .)


state 108

    (62) Datatype -> REAL_TYPE .

    ;               reduce using rule 62 (Datatype -> REAL_TYPE .)


state 109

    (63) Datatype -> INTEGER_TYPE .

    ;               reduce using rule 63 (Datatype -> INTEGER_TYPE .)


state 110

    (64) Datatype -> STRING_TYPE .

    ;               reduce using rule 64 (Datatype -> STRING_TYPE .)


state 111

    (65) Datatype -> BOOLEAN_TYPE .

    ;               reduce using rule 65 (Datatype -> BOOLEAN_TYPE .)


state 112

    (66) Datatype -> CHAR_TYPE .

    ;               reduce using rule 66 (Datatype -> CHAR_TYPE .)


state 113

    (31) Variaveis -> Variaveis , ID .

    :               reduce using rule 31 (Variaveis -> Variaveis , ID .)
    ,               reduce using rule 31 (Variaveis -> Variaveis , ID .)


state 114

    (34) CicloFor -> FOR Atribuicao DirecaoFor Expressao DO . LocalInstsList
    (3) LocalInstsList -> . LocalInstsList ; Instrucao
    (18) LocalInstsList -> . LocalInstsList ;
    (30) LocalInstsList -> . Instrucao
    (36) Instrucao -> . While
    (37) Instrucao -> . CicloFor
    (38) Instrucao -> . InstrucaoCondicional
    (39) Instrucao -> . Atribuicao
    (53) Instrucao -> . Bloco
    (14) While -> . WHILE Condicao DO LocalInstsList
    (34) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO LocalInstsList
    (8) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (2) Atribuicao -> . Atribuido : = Expressao
    (57) Bloco -> . BEGIN LocalInstsList END
    (15) Atribuido -> . ID
    (16) Atribuido -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    IF              shift and go to state 28
    BEGIN           shift and go to state 18
    ID              shift and go to state 30

    Atribuicao                     shift and go to state 24
    LocalInstsList                 shift and go to state 119
    Instrucao                      shift and go to state 20
    While                          shift and go to state 21
    CicloFor                       shift and go to state 22
    InstrucaoCondicional           shift and go to state 23
    Bloco                          shift and go to state 25
    Atribuido                      shift and go to state 29
    Acesso_array                   shift and go to state 31
    Variavel_array                 shift and go to state 32

state 115

    (8) InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse .

    END             reduce using rule 8 (InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse .)
    ;               reduce using rule 8 (InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse .)
    ELSE            reduce using rule 8 (InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse .)


state 116

    (27) ParteElse -> ELSE . LocalInstsList
    (3) LocalInstsList -> . LocalInstsList ; Instrucao
    (18) LocalInstsList -> . LocalInstsList ;
    (30) LocalInstsList -> . Instrucao
    (36) Instrucao -> . While
    (37) Instrucao -> . CicloFor
    (38) Instrucao -> . InstrucaoCondicional
    (39) Instrucao -> . Atribuicao
    (53) Instrucao -> . Bloco
    (14) While -> . WHILE Condicao DO LocalInstsList
    (34) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO LocalInstsList
    (8) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (2) Atribuicao -> . Atribuido : = Expressao
    (57) Bloco -> . BEGIN LocalInstsList END
    (15) Atribuido -> . ID
    (16) Atribuido -> . Acesso_array
    (33) Acesso_array -> . Variavel_array [ Expressao ]
    (40) Variavel_array -> . ID
    (41) Variavel_array -> . Acesso_array

    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    IF              shift and go to state 28
    BEGIN           shift and go to state 18
    ID              shift and go to state 30

    LocalInstsList                 shift and go to state 120
    Instrucao                      shift and go to state 20
    While                          shift and go to state 21
    CicloFor                       shift and go to state 22
    InstrucaoCondicional           shift and go to state 23
    Atribuicao                     shift and go to state 24
    Bloco                          shift and go to state 25
    Atribuido                      shift and go to state 29
    Acesso_array                   shift and go to state 31
    Variavel_array                 shift and go to state 32

state 117

    (12) Listavariaveis -> Listavariaveis Variaveis : Tipo ; .

    ID              reduce using rule 12 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)
    BEGIN           reduce using rule 12 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)
    VAR             reduce using rule 12 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)


state 118

    (51) Tipo -> ARRAY [ . Intervalo ] OF Datatype
    (58) Intervalo -> . INTEGER . . INTEGER

    INTEGER         shift and go to state 122

    Intervalo                      shift and go to state 121

state 119

    (34) CicloFor -> FOR Atribuicao DirecaoFor Expressao DO LocalInstsList .
    (3) LocalInstsList -> LocalInstsList . ; Instrucao
    (18) LocalInstsList -> LocalInstsList . ;

  ! shift/reduce conflict for ; resolved as shift
    END             reduce using rule 34 (CicloFor -> FOR Atribuicao DirecaoFor Expressao DO LocalInstsList .)
    ELSE            reduce using rule 34 (CicloFor -> FOR Atribuicao DirecaoFor Expressao DO LocalInstsList .)
    ;               shift and go to state 37

  ! ;               [ reduce using rule 34 (CicloFor -> FOR Atribuicao DirecaoFor Expressao DO LocalInstsList .) ]


state 120

    (27) ParteElse -> ELSE LocalInstsList .
    (3) LocalInstsList -> LocalInstsList . ; Instrucao
    (18) LocalInstsList -> LocalInstsList . ;

  ! shift/reduce conflict for ; resolved as shift
    END             reduce using rule 27 (ParteElse -> ELSE LocalInstsList .)
    ELSE            reduce using rule 27 (ParteElse -> ELSE LocalInstsList .)
    ;               shift and go to state 37

  ! ;               [ reduce using rule 27 (ParteElse -> ELSE LocalInstsList .) ]


state 121

    (51) Tipo -> ARRAY [ Intervalo . ] OF Datatype

    ]               shift and go to state 123


state 122

    (58) Intervalo -> INTEGER . . . INTEGER

    .               shift and go to state 124


state 123

    (51) Tipo -> ARRAY [ Intervalo ] . OF Datatype

    OF              shift and go to state 125


state 124

    (58) Intervalo -> INTEGER . . . INTEGER

    .               shift and go to state 126


state 125

    (51) Tipo -> ARRAY [ Intervalo ] OF . Datatype
    (62) Datatype -> . REAL_TYPE
    (63) Datatype -> . INTEGER_TYPE
    (64) Datatype -> . STRING_TYPE
    (65) Datatype -> . BOOLEAN_TYPE
    (66) Datatype -> . CHAR_TYPE

    REAL_TYPE       shift and go to state 108
    INTEGER_TYPE    shift and go to state 109
    STRING_TYPE     shift and go to state 110
    BOOLEAN_TYPE    shift and go to state 111
    CHAR_TYPE       shift and go to state 112

    Datatype                       shift and go to state 127

state 126

    (58) Intervalo -> INTEGER . . . INTEGER

    INTEGER         shift and go to state 128


state 127

    (51) Tipo -> ARRAY [ Intervalo ] OF Datatype .

    ;               reduce using rule 51 (Tipo -> ARRAY [ Intervalo ] OF Datatype .)


state 128

    (58) Intervalo -> INTEGER . . INTEGER .

    ]               reduce using rule 58 (Intervalo -> INTEGER . . INTEGER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for ; in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 99 resolved as shift
WARNING: shift/reduce conflict for ; in state 100 resolved as shift
WARNING: shift/reduce conflict for ; in state 119 resolved as shift
WARNING: shift/reduce conflict for ; in state 120 resolved as shift
WARNING: reduce/reduce conflict in state 43 resolved using rule (DeclaracaoCondicao -> TRUE)
WARNING: rejected rule (Fator -> TRUE) in state 43
WARNING: reduce/reduce conflict in state 44 resolved using rule (DeclaracaoCondicao -> FALSE)
WARNING: rejected rule (Fator -> FALSE) in state 44
