Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CASE
    CONST
    FILE
    GOTO
    IN
    KEYWORD
    LABEL
    MULTILINECOMMENTS
    NIL
    ONELINECOMMENTS
    PACKED
    RECORD
    REPEAT
    SET
    TYPE
    UNTIL
    WITH

Grammar

Rule 0     S' -> Programa
Rule 1     LocalInstsList -> LocalInstsList ; Instrucao
Rule 2     Condicao -> Condicao AND Condicao
Rule 3     Condicao -> Condicao OR Condicao
Rule 4     Condicao -> NOT Condicao
Rule 5     Condicao -> DeclaracaoCondicao
Rule 6     Condicao -> ( Condicao )
Rule 7     Dvariaveis -> VAR Listavariaveis
Rule 8     Duses -> USES UseList ;
Rule 9     Duses -> <empty>
Rule 10    Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .
Rule 11    InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse
Rule 12    Atribuicao -> Atribuido ASSIGN Expressao
Rule 13    Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList END ;
Rule 14    LocalInstsList -> LocalInstsList ;
Rule 15    Listavariaveis -> Listavariaveis Variaveis : Tipo ;
Rule 16    Listavariaveis -> <empty>
Rule 17    UseList -> UseList , ID
Rule 18    UseList -> ID
Rule 19    While -> WHILE Condicao DO Instrucao
Rule 20    LocalInstsList -> Instrucao
Rule 21    Instrucao -> While
Rule 22    Instrucao -> CicloFor
Rule 23    Instrucao -> InstrucaoCondicional
Rule 24    Instrucao -> Atribuicao
Rule 25    Instrucao -> Expressao
Rule 26    GlobalInsts -> GlobalInsts GlobalInst
Rule 27    GlobalInsts -> <empty>
Rule 28    DeclaracaoCondicao -> Expressao SimboloCondicional Expressao
Rule 29    DeclaracaoCondicao -> Expressao
Rule 30    BlocoCondicional -> Instrucao
Rule 31    GlobalInst -> Dfuncao
Rule 32    GlobalInst -> Dprocedimento
Rule 33    Instrucao -> Bloco
Rule 34    ParteElse -> ELSE Instrucao
Rule 35    ParteElse -> <empty>
Rule 36    BufferVar -> BufferVar Dvariaveis
Rule 37    BufferVar -> <empty>
Rule 38    CicloFor -> FOR Atribuicao DirecaoFor Expressao DO Instrucao
Rule 39    GlobalInst -> Dvariaveis
Rule 40    Bloco -> BEGIN LocalInstsList END
Rule 41    BlocoPrincipal -> BEGIN LocalInstsList END
Rule 42    FuncReturn -> ID : = Expressao ;
Rule 43    Variaveis -> Variaveis , ID
Rule 44    Variaveis -> ID
Rule 45    FuncDec -> Cabeca ArgumentosSetter : Tipo ;
Rule 46    Tipo -> Datatype
Rule 47    Tipo -> ARRAY [ Intervalo ] OF Datatype
Rule 48    Tipo -> ID
Rule 49    Cabeca -> FUNCTION ID
Rule 50    Intervalo -> INTEGER . . INTEGER
Rule 51    Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ;
Rule 52    Datatype -> REAL_TYPE
Rule 53    Datatype -> INTEGER_TYPE
Rule 54    Datatype -> STRING_TYPE
Rule 55    Datatype -> BOOLEAN_TYPE
Rule 56    Datatype -> CHAR_TYPE
Rule 57    ArgumentosProcedimentoOpc -> ArgumentosSetter
Rule 58    ArgumentosProcedimentoOpc -> <empty>
Rule 59    SimboloCondicional -> =
Rule 60    SimboloCondicional -> DIFFERENT
Rule 61    SimboloCondicional -> LESSOREQUAL
Rule 62    SimboloCondicional -> <
Rule 63    SimboloCondicional -> GREATEROREQUAL
Rule 64    SimboloCondicional -> >
Rule 65    ArgumentosGetter -> ( ArgumentosGetterInit )
Rule 66    ArgumentosGetterInit -> ArgumentosGetterBuffer Expressao
Rule 67    ArgumentosGetterInit -> <empty>
Rule 68    Atribuido -> ID
Rule 69    Atribuido -> Acesso_array
Rule 70    ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao ,
Rule 71    ArgumentosGetterBuffer -> <empty>
Rule 72    DirecaoFor -> TO
Rule 73    DirecaoFor -> DOWNTO
Rule 74    Acesso_array -> Variavel_array [ Expressao ]
Rule 75    ArgumentosSetter -> ( ArgumentosSetterBuffer )
Rule 76    ArgumentosSetterBuffer -> ArgumentosSetterBuffer , Argumento
Rule 77    ArgumentosSetterBuffer -> Argumento
Rule 78    ArgumentosSetterBuffer -> <empty>
Rule 79    Argumento -> OutrosArgumentos ID : Tipo
Rule 80    Variavel_array -> ID
Rule 81    Variavel_array -> Acesso_array
Rule 82    OutrosArgumentos -> OutrosArgumentos ID ,
Rule 83    OutrosArgumentos -> <empty>
Rule 84    Expressao -> Expressao + Termo
Rule 85    Expressao -> Expressao - Termo
Rule 86    Expressao -> Termo
Rule 87    Termo -> Termo * Fator
Rule 88    Termo -> Termo MOD Fator
Rule 89    Termo -> Termo DIV Fator
Rule 90    Termo -> Fator
Rule 91    Fator -> ID
Rule 92    Fator -> INTEGER
Rule 93    Fator -> REAL
Rule 94    Fator -> STRING
Rule 95    Fator -> TRUE
Rule 96    Fator -> FALSE
Rule 97    Fator -> ( Expressao )
Rule 98    Fator -> Acesso_array
Rule 99    Fator -> ChamadaFuncao
Rule 100   ChamadaFuncao -> ID ArgumentosGetter
Rule 101   ArgumentosGetter -> ( ListaArgumentos )
Rule 102   ArgumentosGetter -> ( )
Rule 103   ListaArgumentos -> ListaArgumentos , Expressao
Rule 104   ListaArgumentos -> Expressao

Terminals, with rules where they appear

(                    : 6 65 75 97 101 102
)                    : 6 65 75 97 101 102
*                    : 87
+                    : 84
,                    : 17 43 70 76 82 103
-                    : 85
.                    : 10 50 50
:                    : 15 42 45 79
;                    : 1 8 10 13 14 15 42 45 51 51
<                    : 62
=                    : 42 59
>                    : 64
AND                  : 2
ARRAY                : 47
ASSIGN               : 12
BEGIN                : 13 40 41 51
BOOLEAN_TYPE         : 55
CASE                 : 
CHAR_TYPE            : 56
CONST                : 
DIFFERENT            : 60
DIV                  : 89
DO                   : 19 38
DOWNTO               : 73
ELSE                 : 34
END                  : 13 40 41 51
FALSE                : 96
FILE                 : 
FOR                  : 38
FUNCTION             : 49
GOTO                 : 
GREATEROREQUAL       : 63
ID                   : 10 17 18 42 43 44 48 49 51 68 79 80 82 91 100
IF                   : 11
IN                   : 
INTEGER              : 50 50 92
INTEGER_TYPE         : 53
KEYWORD              : 
LABEL                : 
LESSOREQUAL          : 61
MOD                  : 88
MULTILINECOMMENTS    : 
NIL                  : 
NOT                  : 4
OF                   : 47
ONELINECOMMENTS      : 
OR                   : 3
PACKED               : 
PROCEDURE            : 51
PROGRAM              : 10
REAL                 : 93
REAL_TYPE            : 52
RECORD               : 
REPEAT               : 
SET                  : 
STRING               : 94
STRING_TYPE          : 54
THEN                 : 11
TO                   : 72
TRUE                 : 95
TYPE                 : 
UNTIL                : 
USES                 : 8
VAR                  : 7
WHILE                : 19
WITH                 : 
[                    : 47 74
]                    : 47 74
error                : 

Nonterminals, with rules where they appear

Acesso_array         : 69 81 98
Argumento            : 76 77
ArgumentosGetter     : 100
ArgumentosGetterBuffer : 66 70
ArgumentosGetterInit : 65
ArgumentosProcedimentoOpc : 51
ArgumentosSetter     : 45 57
ArgumentosSetterBuffer : 75 76
Atribuicao           : 24 38
Atribuido            : 12
Bloco                : 33
BlocoCondicional     : 11
BlocoPrincipal       : 10
BufferVar            : 13 36
Cabeca               : 45
ChamadaFuncao        : 99
CicloFor             : 22
Condicao             : 2 2 3 3 4 6 11 19
Datatype             : 46 47
DeclaracaoCondicao   : 5
Dfuncao              : 31
DirecaoFor           : 38
Dprocedimento        : 32
Duses                : 10
Dvariaveis           : 36 39
Expressao            : 12 25 28 28 29 38 42 66 70 74 84 85 97 103 104
Fator                : 87 88 89 90
FuncDec              : 13
FuncReturn           : 
GlobalInst           : 26
GlobalInsts          : 10 26 51
Instrucao            : 1 19 20 30 34 38
InstrucaoCondicional : 23
Intervalo            : 47
ListaArgumentos      : 101 103
Listavariaveis       : 7 15
LocalInstsList       : 1 13 14 40 41 51
OutrosArgumentos     : 79 82
ParteElse            : 11
Programa             : 0
SimboloCondicional   : 28
Termo                : 84 85 86 87 88 89
Tipo                 : 15 45 79
UseList              : 8 17
Variaveis            : 15 43
Variavel_array       : 74
While                : 21

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (10) Programa -> . PROGRAM ID ; Duses GlobalInsts BlocoPrincipal .

    PROGRAM         shift and go to state 2

    Programa                       shift and go to state 1

state 1

    (0) S' -> Programa .



state 2

    (10) Programa -> PROGRAM . ID ; Duses GlobalInsts BlocoPrincipal .

    ID              shift and go to state 3


state 3

    (10) Programa -> PROGRAM ID . ; Duses GlobalInsts BlocoPrincipal .

    ;               shift and go to state 4


state 4

    (10) Programa -> PROGRAM ID ; . Duses GlobalInsts BlocoPrincipal .
    (8) Duses -> . USES UseList ;
    (9) Duses -> .

    USES            shift and go to state 6
    BEGIN           reduce using rule 9 (Duses -> .)
    PROCEDURE       reduce using rule 9 (Duses -> .)
    VAR             reduce using rule 9 (Duses -> .)
    FUNCTION        reduce using rule 9 (Duses -> .)

    Duses                          shift and go to state 5

state 5

    (10) Programa -> PROGRAM ID ; Duses . GlobalInsts BlocoPrincipal .
    (26) GlobalInsts -> . GlobalInsts GlobalInst
    (27) GlobalInsts -> .

    BEGIN           reduce using rule 27 (GlobalInsts -> .)
    PROCEDURE       reduce using rule 27 (GlobalInsts -> .)
    VAR             reduce using rule 27 (GlobalInsts -> .)
    FUNCTION        reduce using rule 27 (GlobalInsts -> .)

    GlobalInsts                    shift and go to state 7

state 6

    (8) Duses -> USES . UseList ;
    (17) UseList -> . UseList , ID
    (18) UseList -> . ID

    ID              shift and go to state 9

    UseList                        shift and go to state 8

state 7

    (10) Programa -> PROGRAM ID ; Duses GlobalInsts . BlocoPrincipal .
    (26) GlobalInsts -> GlobalInsts . GlobalInst
    (41) BlocoPrincipal -> . BEGIN LocalInstsList END
    (31) GlobalInst -> . Dfuncao
    (32) GlobalInst -> . Dprocedimento
    (39) GlobalInst -> . Dvariaveis
    (13) Dfuncao -> . FuncDec BufferVar BEGIN LocalInstsList END ;
    (51) Dprocedimento -> . PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ;
    (7) Dvariaveis -> . VAR Listavariaveis
    (45) FuncDec -> . Cabeca ArgumentosSetter : Tipo ;
    (49) Cabeca -> . FUNCTION ID

    BEGIN           shift and go to state 12
    PROCEDURE       shift and go to state 17
    VAR             shift and go to state 18
    FUNCTION        shift and go to state 20

    BlocoPrincipal                 shift and go to state 10
    GlobalInst                     shift and go to state 11
    Dfuncao                        shift and go to state 13
    Dprocedimento                  shift and go to state 14
    Dvariaveis                     shift and go to state 15
    FuncDec                        shift and go to state 16
    Cabeca                         shift and go to state 19

state 8

    (8) Duses -> USES UseList . ;
    (17) UseList -> UseList . , ID

    ;               shift and go to state 21
    ,               shift and go to state 22


state 9

    (18) UseList -> ID .

    ;               reduce using rule 18 (UseList -> ID .)
    ,               reduce using rule 18 (UseList -> ID .)


state 10

    (10) Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal . .

    .               shift and go to state 23


state 11

    (26) GlobalInsts -> GlobalInsts GlobalInst .

    BEGIN           reduce using rule 26 (GlobalInsts -> GlobalInsts GlobalInst .)
    PROCEDURE       reduce using rule 26 (GlobalInsts -> GlobalInsts GlobalInst .)
    VAR             reduce using rule 26 (GlobalInsts -> GlobalInsts GlobalInst .)
    FUNCTION        reduce using rule 26 (GlobalInsts -> GlobalInsts GlobalInst .)


state 12

    (41) BlocoPrincipal -> BEGIN . LocalInstsList END
    (1) LocalInstsList -> . LocalInstsList ; Instrucao
    (14) LocalInstsList -> . LocalInstsList ;
    (20) LocalInstsList -> . Instrucao
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    LocalInstsList                 shift and go to state 25
    Instrucao                      shift and go to state 26
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 13

    (31) GlobalInst -> Dfuncao .

    BEGIN           reduce using rule 31 (GlobalInst -> Dfuncao .)
    PROCEDURE       reduce using rule 31 (GlobalInst -> Dfuncao .)
    VAR             reduce using rule 31 (GlobalInst -> Dfuncao .)
    FUNCTION        reduce using rule 31 (GlobalInst -> Dfuncao .)


state 14

    (32) GlobalInst -> Dprocedimento .

    BEGIN           reduce using rule 32 (GlobalInst -> Dprocedimento .)
    PROCEDURE       reduce using rule 32 (GlobalInst -> Dprocedimento .)
    VAR             reduce using rule 32 (GlobalInst -> Dprocedimento .)
    FUNCTION        reduce using rule 32 (GlobalInst -> Dprocedimento .)


state 15

    (39) GlobalInst -> Dvariaveis .

    BEGIN           reduce using rule 39 (GlobalInst -> Dvariaveis .)
    PROCEDURE       reduce using rule 39 (GlobalInst -> Dvariaveis .)
    VAR             reduce using rule 39 (GlobalInst -> Dvariaveis .)
    FUNCTION        reduce using rule 39 (GlobalInst -> Dvariaveis .)


state 16

    (13) Dfuncao -> FuncDec . BufferVar BEGIN LocalInstsList END ;
    (36) BufferVar -> . BufferVar Dvariaveis
    (37) BufferVar -> .

    BEGIN           reduce using rule 37 (BufferVar -> .)
    VAR             reduce using rule 37 (BufferVar -> .)

    BufferVar                      shift and go to state 49

state 17

    (51) Dprocedimento -> PROCEDURE . ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ;

    ID              shift and go to state 50


state 18

    (7) Dvariaveis -> VAR . Listavariaveis
    (15) Listavariaveis -> . Listavariaveis Variaveis : Tipo ;
    (16) Listavariaveis -> .

    ID              reduce using rule 16 (Listavariaveis -> .)
    BEGIN           reduce using rule 16 (Listavariaveis -> .)
    PROCEDURE       reduce using rule 16 (Listavariaveis -> .)
    VAR             reduce using rule 16 (Listavariaveis -> .)
    FUNCTION        reduce using rule 16 (Listavariaveis -> .)

    Listavariaveis                 shift and go to state 51

state 19

    (45) FuncDec -> Cabeca . ArgumentosSetter : Tipo ;
    (75) ArgumentosSetter -> . ( ArgumentosSetterBuffer )

    (               shift and go to state 53

    ArgumentosSetter               shift and go to state 52

state 20

    (49) Cabeca -> FUNCTION . ID

    ID              shift and go to state 54


state 21

    (8) Duses -> USES UseList ; .

    BEGIN           reduce using rule 8 (Duses -> USES UseList ; .)
    PROCEDURE       reduce using rule 8 (Duses -> USES UseList ; .)
    VAR             reduce using rule 8 (Duses -> USES UseList ; .)
    FUNCTION        reduce using rule 8 (Duses -> USES UseList ; .)


state 22

    (17) UseList -> UseList , . ID

    ID              shift and go to state 55


state 23

    (10) Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal . .

    $end            reduce using rule 10 (Programa -> PROGRAM ID ; Duses GlobalInsts BlocoPrincipal . .)


state 24

    (40) Bloco -> BEGIN . LocalInstsList END
    (1) LocalInstsList -> . LocalInstsList ; Instrucao
    (14) LocalInstsList -> . LocalInstsList ;
    (20) LocalInstsList -> . Instrucao
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    LocalInstsList                 shift and go to state 56
    Instrucao                      shift and go to state 26
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 25

    (41) BlocoPrincipal -> BEGIN LocalInstsList . END
    (1) LocalInstsList -> LocalInstsList . ; Instrucao
    (14) LocalInstsList -> LocalInstsList . ;

    END             shift and go to state 57
    ;               shift and go to state 58


state 26

    (20) LocalInstsList -> Instrucao .

    END             reduce using rule 20 (LocalInstsList -> Instrucao .)
    ;               reduce using rule 20 (LocalInstsList -> Instrucao .)


state 27

    (21) Instrucao -> While .

    END             reduce using rule 21 (Instrucao -> While .)
    ;               reduce using rule 21 (Instrucao -> While .)
    ELSE            reduce using rule 21 (Instrucao -> While .)


state 28

    (22) Instrucao -> CicloFor .

    END             reduce using rule 22 (Instrucao -> CicloFor .)
    ;               reduce using rule 22 (Instrucao -> CicloFor .)
    ELSE            reduce using rule 22 (Instrucao -> CicloFor .)


state 29

    (23) Instrucao -> InstrucaoCondicional .

    END             reduce using rule 23 (Instrucao -> InstrucaoCondicional .)
    ;               reduce using rule 23 (Instrucao -> InstrucaoCondicional .)
    ELSE            reduce using rule 23 (Instrucao -> InstrucaoCondicional .)


state 30

    (24) Instrucao -> Atribuicao .

    END             reduce using rule 24 (Instrucao -> Atribuicao .)
    ;               reduce using rule 24 (Instrucao -> Atribuicao .)
    ELSE            reduce using rule 24 (Instrucao -> Atribuicao .)


state 31

    (25) Instrucao -> Expressao .
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    END             reduce using rule 25 (Instrucao -> Expressao .)
    ;               reduce using rule 25 (Instrucao -> Expressao .)
    ELSE            reduce using rule 25 (Instrucao -> Expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 32

    (33) Instrucao -> Bloco .

    END             reduce using rule 33 (Instrucao -> Bloco .)
    ;               reduce using rule 33 (Instrucao -> Bloco .)
    ELSE            reduce using rule 33 (Instrucao -> Bloco .)


state 33

    (19) While -> WHILE . Condicao DO Instrucao
    (2) Condicao -> . Condicao AND Condicao
    (3) Condicao -> . Condicao OR Condicao
    (4) Condicao -> . NOT Condicao
    (5) Condicao -> . DeclaracaoCondicao
    (6) Condicao -> . ( Condicao )
    (28) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (29) DeclaracaoCondicao -> . Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    NOT             shift and go to state 62
    (               shift and go to state 64
    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    Condicao                       shift and go to state 61
    DeclaracaoCondicao             shift and go to state 63
    Expressao                      shift and go to state 65
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 34

    (38) CicloFor -> FOR . Atribuicao DirecaoFor Expressao DO Instrucao
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 69

    Atribuicao                     shift and go to state 68
    Atribuido                      shift and go to state 36
    Acesso_array                   shift and go to state 70
    Variavel_array                 shift and go to state 41

state 35

    (11) InstrucaoCondicional -> IF . Condicao THEN BlocoCondicional ParteElse
    (2) Condicao -> . Condicao AND Condicao
    (3) Condicao -> . Condicao OR Condicao
    (4) Condicao -> . NOT Condicao
    (5) Condicao -> . DeclaracaoCondicao
    (6) Condicao -> . ( Condicao )
    (28) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (29) DeclaracaoCondicao -> . Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    NOT             shift and go to state 62
    (               shift and go to state 64
    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    Condicao                       shift and go to state 71
    DeclaracaoCondicao             shift and go to state 63
    Expressao                      shift and go to state 65
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 36

    (12) Atribuicao -> Atribuido . ASSIGN Expressao

    ASSIGN          shift and go to state 72


state 37

    (86) Expressao -> Termo .
    (87) Termo -> Termo . * Fator
    (88) Termo -> Termo . MOD Fator
    (89) Termo -> Termo . DIV Fator

    +               reduce using rule 86 (Expressao -> Termo .)
    -               reduce using rule 86 (Expressao -> Termo .)
    END             reduce using rule 86 (Expressao -> Termo .)
    ;               reduce using rule 86 (Expressao -> Termo .)
    =               reduce using rule 86 (Expressao -> Termo .)
    DIFFERENT       reduce using rule 86 (Expressao -> Termo .)
    LESSOREQUAL     reduce using rule 86 (Expressao -> Termo .)
    <               reduce using rule 86 (Expressao -> Termo .)
    GREATEROREQUAL  reduce using rule 86 (Expressao -> Termo .)
    >               reduce using rule 86 (Expressao -> Termo .)
    DO              reduce using rule 86 (Expressao -> Termo .)
    AND             reduce using rule 86 (Expressao -> Termo .)
    OR              reduce using rule 86 (Expressao -> Termo .)
    THEN            reduce using rule 86 (Expressao -> Termo .)
    )               reduce using rule 86 (Expressao -> Termo .)
    TO              reduce using rule 86 (Expressao -> Termo .)
    DOWNTO          reduce using rule 86 (Expressao -> Termo .)
    ELSE            reduce using rule 86 (Expressao -> Termo .)
    ,               reduce using rule 86 (Expressao -> Termo .)
    ]               reduce using rule 86 (Expressao -> Termo .)
    *               shift and go to state 73
    MOD             shift and go to state 74
    DIV             shift and go to state 75


state 38

    (68) Atribuido -> ID .
    (91) Fator -> ID .
    (80) Variavel_array -> ID .
    (100) ChamadaFuncao -> ID . ArgumentosGetter
    (65) ArgumentosGetter -> . ( ArgumentosGetterInit )
    (101) ArgumentosGetter -> . ( ListaArgumentos )
    (102) ArgumentosGetter -> . ( )

    ASSIGN          reduce using rule 68 (Atribuido -> ID .)
    *               reduce using rule 91 (Fator -> ID .)
    MOD             reduce using rule 91 (Fator -> ID .)
    DIV             reduce using rule 91 (Fator -> ID .)
    +               reduce using rule 91 (Fator -> ID .)
    -               reduce using rule 91 (Fator -> ID .)
    END             reduce using rule 91 (Fator -> ID .)
    ;               reduce using rule 91 (Fator -> ID .)
    ELSE            reduce using rule 91 (Fator -> ID .)
    [               reduce using rule 80 (Variavel_array -> ID .)
    (               shift and go to state 77

    ArgumentosGetter               shift and go to state 76

state 39

    (69) Atribuido -> Acesso_array .
    (98) Fator -> Acesso_array .
    (81) Variavel_array -> Acesso_array .

    ASSIGN          reduce using rule 69 (Atribuido -> Acesso_array .)
    *               reduce using rule 98 (Fator -> Acesso_array .)
    MOD             reduce using rule 98 (Fator -> Acesso_array .)
    DIV             reduce using rule 98 (Fator -> Acesso_array .)
    +               reduce using rule 98 (Fator -> Acesso_array .)
    -               reduce using rule 98 (Fator -> Acesso_array .)
    END             reduce using rule 98 (Fator -> Acesso_array .)
    ;               reduce using rule 98 (Fator -> Acesso_array .)
    ELSE            reduce using rule 98 (Fator -> Acesso_array .)
    [               reduce using rule 81 (Variavel_array -> Acesso_array .)


state 40

    (90) Termo -> Fator .

    *               reduce using rule 90 (Termo -> Fator .)
    MOD             reduce using rule 90 (Termo -> Fator .)
    DIV             reduce using rule 90 (Termo -> Fator .)
    +               reduce using rule 90 (Termo -> Fator .)
    -               reduce using rule 90 (Termo -> Fator .)
    END             reduce using rule 90 (Termo -> Fator .)
    ;               reduce using rule 90 (Termo -> Fator .)
    =               reduce using rule 90 (Termo -> Fator .)
    DIFFERENT       reduce using rule 90 (Termo -> Fator .)
    LESSOREQUAL     reduce using rule 90 (Termo -> Fator .)
    <               reduce using rule 90 (Termo -> Fator .)
    GREATEROREQUAL  reduce using rule 90 (Termo -> Fator .)
    >               reduce using rule 90 (Termo -> Fator .)
    DO              reduce using rule 90 (Termo -> Fator .)
    AND             reduce using rule 90 (Termo -> Fator .)
    OR              reduce using rule 90 (Termo -> Fator .)
    THEN            reduce using rule 90 (Termo -> Fator .)
    )               reduce using rule 90 (Termo -> Fator .)
    TO              reduce using rule 90 (Termo -> Fator .)
    DOWNTO          reduce using rule 90 (Termo -> Fator .)
    ELSE            reduce using rule 90 (Termo -> Fator .)
    ,               reduce using rule 90 (Termo -> Fator .)
    ]               reduce using rule 90 (Termo -> Fator .)


state 41

    (74) Acesso_array -> Variavel_array . [ Expressao ]

    [               shift and go to state 78


state 42

    (92) Fator -> INTEGER .

    *               reduce using rule 92 (Fator -> INTEGER .)
    MOD             reduce using rule 92 (Fator -> INTEGER .)
    DIV             reduce using rule 92 (Fator -> INTEGER .)
    +               reduce using rule 92 (Fator -> INTEGER .)
    -               reduce using rule 92 (Fator -> INTEGER .)
    END             reduce using rule 92 (Fator -> INTEGER .)
    ;               reduce using rule 92 (Fator -> INTEGER .)
    =               reduce using rule 92 (Fator -> INTEGER .)
    DIFFERENT       reduce using rule 92 (Fator -> INTEGER .)
    LESSOREQUAL     reduce using rule 92 (Fator -> INTEGER .)
    <               reduce using rule 92 (Fator -> INTEGER .)
    GREATEROREQUAL  reduce using rule 92 (Fator -> INTEGER .)
    >               reduce using rule 92 (Fator -> INTEGER .)
    DO              reduce using rule 92 (Fator -> INTEGER .)
    AND             reduce using rule 92 (Fator -> INTEGER .)
    OR              reduce using rule 92 (Fator -> INTEGER .)
    THEN            reduce using rule 92 (Fator -> INTEGER .)
    )               reduce using rule 92 (Fator -> INTEGER .)
    TO              reduce using rule 92 (Fator -> INTEGER .)
    DOWNTO          reduce using rule 92 (Fator -> INTEGER .)
    ELSE            reduce using rule 92 (Fator -> INTEGER .)
    ,               reduce using rule 92 (Fator -> INTEGER .)
    ]               reduce using rule 92 (Fator -> INTEGER .)


state 43

    (93) Fator -> REAL .

    *               reduce using rule 93 (Fator -> REAL .)
    MOD             reduce using rule 93 (Fator -> REAL .)
    DIV             reduce using rule 93 (Fator -> REAL .)
    +               reduce using rule 93 (Fator -> REAL .)
    -               reduce using rule 93 (Fator -> REAL .)
    END             reduce using rule 93 (Fator -> REAL .)
    ;               reduce using rule 93 (Fator -> REAL .)
    =               reduce using rule 93 (Fator -> REAL .)
    DIFFERENT       reduce using rule 93 (Fator -> REAL .)
    LESSOREQUAL     reduce using rule 93 (Fator -> REAL .)
    <               reduce using rule 93 (Fator -> REAL .)
    GREATEROREQUAL  reduce using rule 93 (Fator -> REAL .)
    >               reduce using rule 93 (Fator -> REAL .)
    DO              reduce using rule 93 (Fator -> REAL .)
    AND             reduce using rule 93 (Fator -> REAL .)
    OR              reduce using rule 93 (Fator -> REAL .)
    THEN            reduce using rule 93 (Fator -> REAL .)
    )               reduce using rule 93 (Fator -> REAL .)
    TO              reduce using rule 93 (Fator -> REAL .)
    DOWNTO          reduce using rule 93 (Fator -> REAL .)
    ELSE            reduce using rule 93 (Fator -> REAL .)
    ,               reduce using rule 93 (Fator -> REAL .)
    ]               reduce using rule 93 (Fator -> REAL .)


state 44

    (94) Fator -> STRING .

    *               reduce using rule 94 (Fator -> STRING .)
    MOD             reduce using rule 94 (Fator -> STRING .)
    DIV             reduce using rule 94 (Fator -> STRING .)
    +               reduce using rule 94 (Fator -> STRING .)
    -               reduce using rule 94 (Fator -> STRING .)
    END             reduce using rule 94 (Fator -> STRING .)
    ;               reduce using rule 94 (Fator -> STRING .)
    =               reduce using rule 94 (Fator -> STRING .)
    DIFFERENT       reduce using rule 94 (Fator -> STRING .)
    LESSOREQUAL     reduce using rule 94 (Fator -> STRING .)
    <               reduce using rule 94 (Fator -> STRING .)
    GREATEROREQUAL  reduce using rule 94 (Fator -> STRING .)
    >               reduce using rule 94 (Fator -> STRING .)
    DO              reduce using rule 94 (Fator -> STRING .)
    AND             reduce using rule 94 (Fator -> STRING .)
    OR              reduce using rule 94 (Fator -> STRING .)
    THEN            reduce using rule 94 (Fator -> STRING .)
    )               reduce using rule 94 (Fator -> STRING .)
    TO              reduce using rule 94 (Fator -> STRING .)
    DOWNTO          reduce using rule 94 (Fator -> STRING .)
    ELSE            reduce using rule 94 (Fator -> STRING .)
    ,               reduce using rule 94 (Fator -> STRING .)
    ]               reduce using rule 94 (Fator -> STRING .)


state 45

    (95) Fator -> TRUE .

    *               reduce using rule 95 (Fator -> TRUE .)
    MOD             reduce using rule 95 (Fator -> TRUE .)
    DIV             reduce using rule 95 (Fator -> TRUE .)
    +               reduce using rule 95 (Fator -> TRUE .)
    -               reduce using rule 95 (Fator -> TRUE .)
    END             reduce using rule 95 (Fator -> TRUE .)
    ;               reduce using rule 95 (Fator -> TRUE .)
    =               reduce using rule 95 (Fator -> TRUE .)
    DIFFERENT       reduce using rule 95 (Fator -> TRUE .)
    LESSOREQUAL     reduce using rule 95 (Fator -> TRUE .)
    <               reduce using rule 95 (Fator -> TRUE .)
    GREATEROREQUAL  reduce using rule 95 (Fator -> TRUE .)
    >               reduce using rule 95 (Fator -> TRUE .)
    DO              reduce using rule 95 (Fator -> TRUE .)
    AND             reduce using rule 95 (Fator -> TRUE .)
    OR              reduce using rule 95 (Fator -> TRUE .)
    THEN            reduce using rule 95 (Fator -> TRUE .)
    )               reduce using rule 95 (Fator -> TRUE .)
    TO              reduce using rule 95 (Fator -> TRUE .)
    DOWNTO          reduce using rule 95 (Fator -> TRUE .)
    ELSE            reduce using rule 95 (Fator -> TRUE .)
    ,               reduce using rule 95 (Fator -> TRUE .)
    ]               reduce using rule 95 (Fator -> TRUE .)


state 46

    (96) Fator -> FALSE .

    *               reduce using rule 96 (Fator -> FALSE .)
    MOD             reduce using rule 96 (Fator -> FALSE .)
    DIV             reduce using rule 96 (Fator -> FALSE .)
    +               reduce using rule 96 (Fator -> FALSE .)
    -               reduce using rule 96 (Fator -> FALSE .)
    END             reduce using rule 96 (Fator -> FALSE .)
    ;               reduce using rule 96 (Fator -> FALSE .)
    =               reduce using rule 96 (Fator -> FALSE .)
    DIFFERENT       reduce using rule 96 (Fator -> FALSE .)
    LESSOREQUAL     reduce using rule 96 (Fator -> FALSE .)
    <               reduce using rule 96 (Fator -> FALSE .)
    GREATEROREQUAL  reduce using rule 96 (Fator -> FALSE .)
    >               reduce using rule 96 (Fator -> FALSE .)
    DO              reduce using rule 96 (Fator -> FALSE .)
    AND             reduce using rule 96 (Fator -> FALSE .)
    OR              reduce using rule 96 (Fator -> FALSE .)
    THEN            reduce using rule 96 (Fator -> FALSE .)
    )               reduce using rule 96 (Fator -> FALSE .)
    TO              reduce using rule 96 (Fator -> FALSE .)
    DOWNTO          reduce using rule 96 (Fator -> FALSE .)
    ELSE            reduce using rule 96 (Fator -> FALSE .)
    ,               reduce using rule 96 (Fator -> FALSE .)
    ]               reduce using rule 96 (Fator -> FALSE .)


state 47

    (97) Fator -> ( . Expressao )
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Expressao                      shift and go to state 79
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 48

    (99) Fator -> ChamadaFuncao .

    *               reduce using rule 99 (Fator -> ChamadaFuncao .)
    MOD             reduce using rule 99 (Fator -> ChamadaFuncao .)
    DIV             reduce using rule 99 (Fator -> ChamadaFuncao .)
    +               reduce using rule 99 (Fator -> ChamadaFuncao .)
    -               reduce using rule 99 (Fator -> ChamadaFuncao .)
    END             reduce using rule 99 (Fator -> ChamadaFuncao .)
    ;               reduce using rule 99 (Fator -> ChamadaFuncao .)
    =               reduce using rule 99 (Fator -> ChamadaFuncao .)
    DIFFERENT       reduce using rule 99 (Fator -> ChamadaFuncao .)
    LESSOREQUAL     reduce using rule 99 (Fator -> ChamadaFuncao .)
    <               reduce using rule 99 (Fator -> ChamadaFuncao .)
    GREATEROREQUAL  reduce using rule 99 (Fator -> ChamadaFuncao .)
    >               reduce using rule 99 (Fator -> ChamadaFuncao .)
    DO              reduce using rule 99 (Fator -> ChamadaFuncao .)
    AND             reduce using rule 99 (Fator -> ChamadaFuncao .)
    OR              reduce using rule 99 (Fator -> ChamadaFuncao .)
    THEN            reduce using rule 99 (Fator -> ChamadaFuncao .)
    )               reduce using rule 99 (Fator -> ChamadaFuncao .)
    TO              reduce using rule 99 (Fator -> ChamadaFuncao .)
    DOWNTO          reduce using rule 99 (Fator -> ChamadaFuncao .)
    ELSE            reduce using rule 99 (Fator -> ChamadaFuncao .)
    ,               reduce using rule 99 (Fator -> ChamadaFuncao .)
    ]               reduce using rule 99 (Fator -> ChamadaFuncao .)


state 49

    (13) Dfuncao -> FuncDec BufferVar . BEGIN LocalInstsList END ;
    (36) BufferVar -> BufferVar . Dvariaveis
    (7) Dvariaveis -> . VAR Listavariaveis

    BEGIN           shift and go to state 80
    VAR             shift and go to state 18

    Dvariaveis                     shift and go to state 81

state 50

    (51) Dprocedimento -> PROCEDURE ID . ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ;
    (57) ArgumentosProcedimentoOpc -> . ArgumentosSetter
    (58) ArgumentosProcedimentoOpc -> .
    (75) ArgumentosSetter -> . ( ArgumentosSetterBuffer )

    ;               reduce using rule 58 (ArgumentosProcedimentoOpc -> .)
    (               shift and go to state 53

    ArgumentosProcedimentoOpc      shift and go to state 82
    ArgumentosSetter               shift and go to state 83

state 51

    (7) Dvariaveis -> VAR Listavariaveis .
    (15) Listavariaveis -> Listavariaveis . Variaveis : Tipo ;
    (43) Variaveis -> . Variaveis , ID
    (44) Variaveis -> . ID

    BEGIN           reduce using rule 7 (Dvariaveis -> VAR Listavariaveis .)
    PROCEDURE       reduce using rule 7 (Dvariaveis -> VAR Listavariaveis .)
    VAR             reduce using rule 7 (Dvariaveis -> VAR Listavariaveis .)
    FUNCTION        reduce using rule 7 (Dvariaveis -> VAR Listavariaveis .)
    ID              shift and go to state 85

    Variaveis                      shift and go to state 84

state 52

    (45) FuncDec -> Cabeca ArgumentosSetter . : Tipo ;

    :               shift and go to state 86


state 53

    (75) ArgumentosSetter -> ( . ArgumentosSetterBuffer )
    (76) ArgumentosSetterBuffer -> . ArgumentosSetterBuffer , Argumento
    (77) ArgumentosSetterBuffer -> . Argumento
    (78) ArgumentosSetterBuffer -> .
    (79) Argumento -> . OutrosArgumentos ID : Tipo
    (82) OutrosArgumentos -> . OutrosArgumentos ID ,
    (83) OutrosArgumentos -> .

    )               reduce using rule 78 (ArgumentosSetterBuffer -> .)
    ,               reduce using rule 78 (ArgumentosSetterBuffer -> .)
    ID              reduce using rule 83 (OutrosArgumentos -> .)

    ArgumentosSetterBuffer         shift and go to state 87
    Argumento                      shift and go to state 88
    OutrosArgumentos               shift and go to state 89

state 54

    (49) Cabeca -> FUNCTION ID .

    (               reduce using rule 49 (Cabeca -> FUNCTION ID .)


state 55

    (17) UseList -> UseList , ID .

    ;               reduce using rule 17 (UseList -> UseList , ID .)
    ,               reduce using rule 17 (UseList -> UseList , ID .)


state 56

    (40) Bloco -> BEGIN LocalInstsList . END
    (1) LocalInstsList -> LocalInstsList . ; Instrucao
    (14) LocalInstsList -> LocalInstsList . ;

    END             shift and go to state 90
    ;               shift and go to state 58


state 57

    (41) BlocoPrincipal -> BEGIN LocalInstsList END .

    .               reduce using rule 41 (BlocoPrincipal -> BEGIN LocalInstsList END .)


state 58

    (1) LocalInstsList -> LocalInstsList ; . Instrucao
    (14) LocalInstsList -> LocalInstsList ; .
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    END             reduce using rule 14 (LocalInstsList -> LocalInstsList ; .)
    ;               reduce using rule 14 (LocalInstsList -> LocalInstsList ; .)
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Instrucao                      shift and go to state 91
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 59

    (84) Expressao -> Expressao + . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Termo                          shift and go to state 92
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 60

    (85) Expressao -> Expressao - . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Termo                          shift and go to state 93
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 61

    (19) While -> WHILE Condicao . DO Instrucao
    (2) Condicao -> Condicao . AND Condicao
    (3) Condicao -> Condicao . OR Condicao

    DO              shift and go to state 94
    AND             shift and go to state 95
    OR              shift and go to state 96


state 62

    (4) Condicao -> NOT . Condicao
    (2) Condicao -> . Condicao AND Condicao
    (3) Condicao -> . Condicao OR Condicao
    (4) Condicao -> . NOT Condicao
    (5) Condicao -> . DeclaracaoCondicao
    (6) Condicao -> . ( Condicao )
    (28) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (29) DeclaracaoCondicao -> . Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    NOT             shift and go to state 62
    (               shift and go to state 64
    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    Condicao                       shift and go to state 97
    DeclaracaoCondicao             shift and go to state 63
    Expressao                      shift and go to state 65
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 63

    (5) Condicao -> DeclaracaoCondicao .

    DO              reduce using rule 5 (Condicao -> DeclaracaoCondicao .)
    AND             reduce using rule 5 (Condicao -> DeclaracaoCondicao .)
    OR              reduce using rule 5 (Condicao -> DeclaracaoCondicao .)
    THEN            reduce using rule 5 (Condicao -> DeclaracaoCondicao .)
    )               reduce using rule 5 (Condicao -> DeclaracaoCondicao .)


state 64

    (6) Condicao -> ( . Condicao )
    (97) Fator -> ( . Expressao )
    (2) Condicao -> . Condicao AND Condicao
    (3) Condicao -> . Condicao OR Condicao
    (4) Condicao -> . NOT Condicao
    (5) Condicao -> . DeclaracaoCondicao
    (6) Condicao -> . ( Condicao )
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (28) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (29) DeclaracaoCondicao -> . Expressao
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    NOT             shift and go to state 62
    (               shift and go to state 64
    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    Condicao                       shift and go to state 98
    Expressao                      shift and go to state 99
    DeclaracaoCondicao             shift and go to state 63
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 65

    (28) DeclaracaoCondicao -> Expressao . SimboloCondicional Expressao
    (29) DeclaracaoCondicao -> Expressao .
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo
    (59) SimboloCondicional -> . =
    (60) SimboloCondicional -> . DIFFERENT
    (61) SimboloCondicional -> . LESSOREQUAL
    (62) SimboloCondicional -> . <
    (63) SimboloCondicional -> . GREATEROREQUAL
    (64) SimboloCondicional -> . >

    DO              reduce using rule 29 (DeclaracaoCondicao -> Expressao .)
    AND             reduce using rule 29 (DeclaracaoCondicao -> Expressao .)
    OR              reduce using rule 29 (DeclaracaoCondicao -> Expressao .)
    THEN            reduce using rule 29 (DeclaracaoCondicao -> Expressao .)
    )               reduce using rule 29 (DeclaracaoCondicao -> Expressao .)
    +               shift and go to state 59
    -               shift and go to state 60
    =               shift and go to state 101
    DIFFERENT       shift and go to state 102
    LESSOREQUAL     shift and go to state 103
    <               shift and go to state 104
    GREATEROREQUAL  shift and go to state 105
    >               shift and go to state 106

    SimboloCondicional             shift and go to state 100

state 66

    (91) Fator -> ID .
    (100) ChamadaFuncao -> ID . ArgumentosGetter
    (80) Variavel_array -> ID .
    (65) ArgumentosGetter -> . ( ArgumentosGetterInit )
    (101) ArgumentosGetter -> . ( ListaArgumentos )
    (102) ArgumentosGetter -> . ( )

    *               reduce using rule 91 (Fator -> ID .)
    MOD             reduce using rule 91 (Fator -> ID .)
    DIV             reduce using rule 91 (Fator -> ID .)
    +               reduce using rule 91 (Fator -> ID .)
    -               reduce using rule 91 (Fator -> ID .)
    =               reduce using rule 91 (Fator -> ID .)
    DIFFERENT       reduce using rule 91 (Fator -> ID .)
    LESSOREQUAL     reduce using rule 91 (Fator -> ID .)
    <               reduce using rule 91 (Fator -> ID .)
    GREATEROREQUAL  reduce using rule 91 (Fator -> ID .)
    >               reduce using rule 91 (Fator -> ID .)
    DO              reduce using rule 91 (Fator -> ID .)
    AND             reduce using rule 91 (Fator -> ID .)
    OR              reduce using rule 91 (Fator -> ID .)
    THEN            reduce using rule 91 (Fator -> ID .)
    )               reduce using rule 91 (Fator -> ID .)
    END             reduce using rule 91 (Fator -> ID .)
    ;               reduce using rule 91 (Fator -> ID .)
    TO              reduce using rule 91 (Fator -> ID .)
    DOWNTO          reduce using rule 91 (Fator -> ID .)
    ELSE            reduce using rule 91 (Fator -> ID .)
    ,               reduce using rule 91 (Fator -> ID .)
    ]               reduce using rule 91 (Fator -> ID .)
    [               reduce using rule 80 (Variavel_array -> ID .)
    (               shift and go to state 77

    ArgumentosGetter               shift and go to state 76

state 67

    (98) Fator -> Acesso_array .
    (81) Variavel_array -> Acesso_array .

    *               reduce using rule 98 (Fator -> Acesso_array .)
    MOD             reduce using rule 98 (Fator -> Acesso_array .)
    DIV             reduce using rule 98 (Fator -> Acesso_array .)
    +               reduce using rule 98 (Fator -> Acesso_array .)
    -               reduce using rule 98 (Fator -> Acesso_array .)
    =               reduce using rule 98 (Fator -> Acesso_array .)
    DIFFERENT       reduce using rule 98 (Fator -> Acesso_array .)
    LESSOREQUAL     reduce using rule 98 (Fator -> Acesso_array .)
    <               reduce using rule 98 (Fator -> Acesso_array .)
    GREATEROREQUAL  reduce using rule 98 (Fator -> Acesso_array .)
    >               reduce using rule 98 (Fator -> Acesso_array .)
    DO              reduce using rule 98 (Fator -> Acesso_array .)
    AND             reduce using rule 98 (Fator -> Acesso_array .)
    OR              reduce using rule 98 (Fator -> Acesso_array .)
    THEN            reduce using rule 98 (Fator -> Acesso_array .)
    )               reduce using rule 98 (Fator -> Acesso_array .)
    END             reduce using rule 98 (Fator -> Acesso_array .)
    ;               reduce using rule 98 (Fator -> Acesso_array .)
    TO              reduce using rule 98 (Fator -> Acesso_array .)
    DOWNTO          reduce using rule 98 (Fator -> Acesso_array .)
    ELSE            reduce using rule 98 (Fator -> Acesso_array .)
    ,               reduce using rule 98 (Fator -> Acesso_array .)
    ]               reduce using rule 98 (Fator -> Acesso_array .)
    [               reduce using rule 81 (Variavel_array -> Acesso_array .)


state 68

    (38) CicloFor -> FOR Atribuicao . DirecaoFor Expressao DO Instrucao
    (72) DirecaoFor -> . TO
    (73) DirecaoFor -> . DOWNTO

    TO              shift and go to state 108
    DOWNTO          shift and go to state 109

    DirecaoFor                     shift and go to state 107

state 69

    (68) Atribuido -> ID .
    (80) Variavel_array -> ID .

    ASSIGN          reduce using rule 68 (Atribuido -> ID .)
    [               reduce using rule 80 (Variavel_array -> ID .)


state 70

    (69) Atribuido -> Acesso_array .
    (81) Variavel_array -> Acesso_array .

    ASSIGN          reduce using rule 69 (Atribuido -> Acesso_array .)
    [               reduce using rule 81 (Variavel_array -> Acesso_array .)


state 71

    (11) InstrucaoCondicional -> IF Condicao . THEN BlocoCondicional ParteElse
    (2) Condicao -> Condicao . AND Condicao
    (3) Condicao -> Condicao . OR Condicao

    THEN            shift and go to state 110
    AND             shift and go to state 95
    OR              shift and go to state 96


state 72

    (12) Atribuicao -> Atribuido ASSIGN . Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Expressao                      shift and go to state 111
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 73

    (87) Termo -> Termo * . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Fator                          shift and go to state 112
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 74

    (88) Termo -> Termo MOD . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Fator                          shift and go to state 113
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 75

    (89) Termo -> Termo DIV . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Fator                          shift and go to state 114
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 76

    (100) ChamadaFuncao -> ID ArgumentosGetter .

    *               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    MOD             reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    DIV             reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    +               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    -               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    END             reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    ;               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    =               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    DIFFERENT       reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    LESSOREQUAL     reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    <               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    GREATEROREQUAL  reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    >               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    DO              reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    AND             reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    OR              reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    THEN            reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    )               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    TO              reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    DOWNTO          reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    ELSE            reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    ,               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)
    ]               reduce using rule 100 (ChamadaFuncao -> ID ArgumentosGetter .)


state 77

    (65) ArgumentosGetter -> ( . ArgumentosGetterInit )
    (101) ArgumentosGetter -> ( . ListaArgumentos )
    (102) ArgumentosGetter -> ( . )
    (66) ArgumentosGetterInit -> . ArgumentosGetterBuffer Expressao
    (67) ArgumentosGetterInit -> .
    (103) ListaArgumentos -> . ListaArgumentos , Expressao
    (104) ListaArgumentos -> . Expressao
    (70) ArgumentosGetterBuffer -> . ArgumentosGetterBuffer Expressao ,
    (71) ArgumentosGetterBuffer -> .
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

  ! shift/reduce conflict for ) resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
    )               shift and go to state 116
    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

  ! )               [ reduce using rule 67 (ArgumentosGetterInit -> .) ]
  ! ID              [ reduce using rule 71 (ArgumentosGetterBuffer -> .) ]
  ! INTEGER         [ reduce using rule 71 (ArgumentosGetterBuffer -> .) ]
  ! REAL            [ reduce using rule 71 (ArgumentosGetterBuffer -> .) ]
  ! STRING          [ reduce using rule 71 (ArgumentosGetterBuffer -> .) ]
  ! TRUE            [ reduce using rule 71 (ArgumentosGetterBuffer -> .) ]
  ! FALSE           [ reduce using rule 71 (ArgumentosGetterBuffer -> .) ]
  ! (               [ reduce using rule 71 (ArgumentosGetterBuffer -> .) ]

    ArgumentosGetterInit           shift and go to state 115
    ListaArgumentos                shift and go to state 117
    ArgumentosGetterBuffer         shift and go to state 118
    Expressao                      shift and go to state 119
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 78

    (74) Acesso_array -> Variavel_array [ . Expressao ]
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Variavel_array                 shift and go to state 41
    Expressao                      shift and go to state 120
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48

state 79

    (97) Fator -> ( Expressao . )
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    )               shift and go to state 121
    +               shift and go to state 59
    -               shift and go to state 60


state 80

    (13) Dfuncao -> FuncDec BufferVar BEGIN . LocalInstsList END ;
    (1) LocalInstsList -> . LocalInstsList ; Instrucao
    (14) LocalInstsList -> . LocalInstsList ;
    (20) LocalInstsList -> . Instrucao
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    LocalInstsList                 shift and go to state 122
    Instrucao                      shift and go to state 26
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 81

    (36) BufferVar -> BufferVar Dvariaveis .

    BEGIN           reduce using rule 36 (BufferVar -> BufferVar Dvariaveis .)
    VAR             reduce using rule 36 (BufferVar -> BufferVar Dvariaveis .)


state 82

    (51) Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc . ; GlobalInsts BEGIN LocalInstsList END ;

    ;               shift and go to state 123


state 83

    (57) ArgumentosProcedimentoOpc -> ArgumentosSetter .

    ;               reduce using rule 57 (ArgumentosProcedimentoOpc -> ArgumentosSetter .)


state 84

    (15) Listavariaveis -> Listavariaveis Variaveis . : Tipo ;
    (43) Variaveis -> Variaveis . , ID

    :               shift and go to state 124
    ,               shift and go to state 125


state 85

    (44) Variaveis -> ID .

    :               reduce using rule 44 (Variaveis -> ID .)
    ,               reduce using rule 44 (Variaveis -> ID .)


state 86

    (45) FuncDec -> Cabeca ArgumentosSetter : . Tipo ;
    (46) Tipo -> . Datatype
    (47) Tipo -> . ARRAY [ Intervalo ] OF Datatype
    (48) Tipo -> . ID
    (52) Datatype -> . REAL_TYPE
    (53) Datatype -> . INTEGER_TYPE
    (54) Datatype -> . STRING_TYPE
    (55) Datatype -> . BOOLEAN_TYPE
    (56) Datatype -> . CHAR_TYPE

    ARRAY           shift and go to state 128
    ID              shift and go to state 129
    REAL_TYPE       shift and go to state 130
    INTEGER_TYPE    shift and go to state 131
    STRING_TYPE     shift and go to state 132
    BOOLEAN_TYPE    shift and go to state 133
    CHAR_TYPE       shift and go to state 134

    Tipo                           shift and go to state 126
    Datatype                       shift and go to state 127

state 87

    (75) ArgumentosSetter -> ( ArgumentosSetterBuffer . )
    (76) ArgumentosSetterBuffer -> ArgumentosSetterBuffer . , Argumento

    )               shift and go to state 135
    ,               shift and go to state 136


state 88

    (77) ArgumentosSetterBuffer -> Argumento .

    )               reduce using rule 77 (ArgumentosSetterBuffer -> Argumento .)
    ,               reduce using rule 77 (ArgumentosSetterBuffer -> Argumento .)


state 89

    (79) Argumento -> OutrosArgumentos . ID : Tipo
    (82) OutrosArgumentos -> OutrosArgumentos . ID ,

    ID              shift and go to state 137


state 90

    (40) Bloco -> BEGIN LocalInstsList END .

    END             reduce using rule 40 (Bloco -> BEGIN LocalInstsList END .)
    ;               reduce using rule 40 (Bloco -> BEGIN LocalInstsList END .)
    ELSE            reduce using rule 40 (Bloco -> BEGIN LocalInstsList END .)


state 91

    (1) LocalInstsList -> LocalInstsList ; Instrucao .

    END             reduce using rule 1 (LocalInstsList -> LocalInstsList ; Instrucao .)
    ;               reduce using rule 1 (LocalInstsList -> LocalInstsList ; Instrucao .)


state 92

    (84) Expressao -> Expressao + Termo .
    (87) Termo -> Termo . * Fator
    (88) Termo -> Termo . MOD Fator
    (89) Termo -> Termo . DIV Fator

    +               reduce using rule 84 (Expressao -> Expressao + Termo .)
    -               reduce using rule 84 (Expressao -> Expressao + Termo .)
    END             reduce using rule 84 (Expressao -> Expressao + Termo .)
    ;               reduce using rule 84 (Expressao -> Expressao + Termo .)
    =               reduce using rule 84 (Expressao -> Expressao + Termo .)
    DIFFERENT       reduce using rule 84 (Expressao -> Expressao + Termo .)
    LESSOREQUAL     reduce using rule 84 (Expressao -> Expressao + Termo .)
    <               reduce using rule 84 (Expressao -> Expressao + Termo .)
    GREATEROREQUAL  reduce using rule 84 (Expressao -> Expressao + Termo .)
    >               reduce using rule 84 (Expressao -> Expressao + Termo .)
    DO              reduce using rule 84 (Expressao -> Expressao + Termo .)
    AND             reduce using rule 84 (Expressao -> Expressao + Termo .)
    OR              reduce using rule 84 (Expressao -> Expressao + Termo .)
    THEN            reduce using rule 84 (Expressao -> Expressao + Termo .)
    )               reduce using rule 84 (Expressao -> Expressao + Termo .)
    TO              reduce using rule 84 (Expressao -> Expressao + Termo .)
    DOWNTO          reduce using rule 84 (Expressao -> Expressao + Termo .)
    ELSE            reduce using rule 84 (Expressao -> Expressao + Termo .)
    ,               reduce using rule 84 (Expressao -> Expressao + Termo .)
    ]               reduce using rule 84 (Expressao -> Expressao + Termo .)
    *               shift and go to state 73
    MOD             shift and go to state 74
    DIV             shift and go to state 75


state 93

    (85) Expressao -> Expressao - Termo .
    (87) Termo -> Termo . * Fator
    (88) Termo -> Termo . MOD Fator
    (89) Termo -> Termo . DIV Fator

    +               reduce using rule 85 (Expressao -> Expressao - Termo .)
    -               reduce using rule 85 (Expressao -> Expressao - Termo .)
    END             reduce using rule 85 (Expressao -> Expressao - Termo .)
    ;               reduce using rule 85 (Expressao -> Expressao - Termo .)
    =               reduce using rule 85 (Expressao -> Expressao - Termo .)
    DIFFERENT       reduce using rule 85 (Expressao -> Expressao - Termo .)
    LESSOREQUAL     reduce using rule 85 (Expressao -> Expressao - Termo .)
    <               reduce using rule 85 (Expressao -> Expressao - Termo .)
    GREATEROREQUAL  reduce using rule 85 (Expressao -> Expressao - Termo .)
    >               reduce using rule 85 (Expressao -> Expressao - Termo .)
    DO              reduce using rule 85 (Expressao -> Expressao - Termo .)
    AND             reduce using rule 85 (Expressao -> Expressao - Termo .)
    OR              reduce using rule 85 (Expressao -> Expressao - Termo .)
    THEN            reduce using rule 85 (Expressao -> Expressao - Termo .)
    )               reduce using rule 85 (Expressao -> Expressao - Termo .)
    TO              reduce using rule 85 (Expressao -> Expressao - Termo .)
    DOWNTO          reduce using rule 85 (Expressao -> Expressao - Termo .)
    ELSE            reduce using rule 85 (Expressao -> Expressao - Termo .)
    ,               reduce using rule 85 (Expressao -> Expressao - Termo .)
    ]               reduce using rule 85 (Expressao -> Expressao - Termo .)
    *               shift and go to state 73
    MOD             shift and go to state 74
    DIV             shift and go to state 75


state 94

    (19) While -> WHILE Condicao DO . Instrucao
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Instrucao                      shift and go to state 138
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 95

    (2) Condicao -> Condicao AND . Condicao
    (2) Condicao -> . Condicao AND Condicao
    (3) Condicao -> . Condicao OR Condicao
    (4) Condicao -> . NOT Condicao
    (5) Condicao -> . DeclaracaoCondicao
    (6) Condicao -> . ( Condicao )
    (28) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (29) DeclaracaoCondicao -> . Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    NOT             shift and go to state 62
    (               shift and go to state 64
    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    Condicao                       shift and go to state 139
    DeclaracaoCondicao             shift and go to state 63
    Expressao                      shift and go to state 65
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 96

    (3) Condicao -> Condicao OR . Condicao
    (2) Condicao -> . Condicao AND Condicao
    (3) Condicao -> . Condicao OR Condicao
    (4) Condicao -> . NOT Condicao
    (5) Condicao -> . DeclaracaoCondicao
    (6) Condicao -> . ( Condicao )
    (28) DeclaracaoCondicao -> . Expressao SimboloCondicional Expressao
    (29) DeclaracaoCondicao -> . Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    NOT             shift and go to state 62
    (               shift and go to state 64
    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    Condicao                       shift and go to state 140
    DeclaracaoCondicao             shift and go to state 63
    Expressao                      shift and go to state 65
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 97

    (4) Condicao -> NOT Condicao .
    (2) Condicao -> Condicao . AND Condicao
    (3) Condicao -> Condicao . OR Condicao

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    DO              reduce using rule 4 (Condicao -> NOT Condicao .)
    THEN            reduce using rule 4 (Condicao -> NOT Condicao .)
    )               reduce using rule 4 (Condicao -> NOT Condicao .)
    AND             shift and go to state 95
    OR              shift and go to state 96

  ! AND             [ reduce using rule 4 (Condicao -> NOT Condicao .) ]
  ! OR              [ reduce using rule 4 (Condicao -> NOT Condicao .) ]


state 98

    (6) Condicao -> ( Condicao . )
    (2) Condicao -> Condicao . AND Condicao
    (3) Condicao -> Condicao . OR Condicao

    )               shift and go to state 141
    AND             shift and go to state 95
    OR              shift and go to state 96


state 99

    (97) Fator -> ( Expressao . )
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo
    (28) DeclaracaoCondicao -> Expressao . SimboloCondicional Expressao
    (29) DeclaracaoCondicao -> Expressao .
    (59) SimboloCondicional -> . =
    (60) SimboloCondicional -> . DIFFERENT
    (61) SimboloCondicional -> . LESSOREQUAL
    (62) SimboloCondicional -> . <
    (63) SimboloCondicional -> . GREATEROREQUAL
    (64) SimboloCondicional -> . >

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 121
    +               shift and go to state 59
    -               shift and go to state 60
    AND             reduce using rule 29 (DeclaracaoCondicao -> Expressao .)
    OR              reduce using rule 29 (DeclaracaoCondicao -> Expressao .)
    =               shift and go to state 101
    DIFFERENT       shift and go to state 102
    LESSOREQUAL     shift and go to state 103
    <               shift and go to state 104
    GREATEROREQUAL  shift and go to state 105
    >               shift and go to state 106

  ! )               [ reduce using rule 29 (DeclaracaoCondicao -> Expressao .) ]

    SimboloCondicional             shift and go to state 100

state 100

    (28) DeclaracaoCondicao -> Expressao SimboloCondicional . Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Expressao                      shift and go to state 142
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 101

    (59) SimboloCondicional -> = .

    ID              reduce using rule 59 (SimboloCondicional -> = .)
    INTEGER         reduce using rule 59 (SimboloCondicional -> = .)
    REAL            reduce using rule 59 (SimboloCondicional -> = .)
    STRING          reduce using rule 59 (SimboloCondicional -> = .)
    TRUE            reduce using rule 59 (SimboloCondicional -> = .)
    FALSE           reduce using rule 59 (SimboloCondicional -> = .)
    (               reduce using rule 59 (SimboloCondicional -> = .)


state 102

    (60) SimboloCondicional -> DIFFERENT .

    ID              reduce using rule 60 (SimboloCondicional -> DIFFERENT .)
    INTEGER         reduce using rule 60 (SimboloCondicional -> DIFFERENT .)
    REAL            reduce using rule 60 (SimboloCondicional -> DIFFERENT .)
    STRING          reduce using rule 60 (SimboloCondicional -> DIFFERENT .)
    TRUE            reduce using rule 60 (SimboloCondicional -> DIFFERENT .)
    FALSE           reduce using rule 60 (SimboloCondicional -> DIFFERENT .)
    (               reduce using rule 60 (SimboloCondicional -> DIFFERENT .)


state 103

    (61) SimboloCondicional -> LESSOREQUAL .

    ID              reduce using rule 61 (SimboloCondicional -> LESSOREQUAL .)
    INTEGER         reduce using rule 61 (SimboloCondicional -> LESSOREQUAL .)
    REAL            reduce using rule 61 (SimboloCondicional -> LESSOREQUAL .)
    STRING          reduce using rule 61 (SimboloCondicional -> LESSOREQUAL .)
    TRUE            reduce using rule 61 (SimboloCondicional -> LESSOREQUAL .)
    FALSE           reduce using rule 61 (SimboloCondicional -> LESSOREQUAL .)
    (               reduce using rule 61 (SimboloCondicional -> LESSOREQUAL .)


state 104

    (62) SimboloCondicional -> < .

    ID              reduce using rule 62 (SimboloCondicional -> < .)
    INTEGER         reduce using rule 62 (SimboloCondicional -> < .)
    REAL            reduce using rule 62 (SimboloCondicional -> < .)
    STRING          reduce using rule 62 (SimboloCondicional -> < .)
    TRUE            reduce using rule 62 (SimboloCondicional -> < .)
    FALSE           reduce using rule 62 (SimboloCondicional -> < .)
    (               reduce using rule 62 (SimboloCondicional -> < .)


state 105

    (63) SimboloCondicional -> GREATEROREQUAL .

    ID              reduce using rule 63 (SimboloCondicional -> GREATEROREQUAL .)
    INTEGER         reduce using rule 63 (SimboloCondicional -> GREATEROREQUAL .)
    REAL            reduce using rule 63 (SimboloCondicional -> GREATEROREQUAL .)
    STRING          reduce using rule 63 (SimboloCondicional -> GREATEROREQUAL .)
    TRUE            reduce using rule 63 (SimboloCondicional -> GREATEROREQUAL .)
    FALSE           reduce using rule 63 (SimboloCondicional -> GREATEROREQUAL .)
    (               reduce using rule 63 (SimboloCondicional -> GREATEROREQUAL .)


state 106

    (64) SimboloCondicional -> > .

    ID              reduce using rule 64 (SimboloCondicional -> > .)
    INTEGER         reduce using rule 64 (SimboloCondicional -> > .)
    REAL            reduce using rule 64 (SimboloCondicional -> > .)
    STRING          reduce using rule 64 (SimboloCondicional -> > .)
    TRUE            reduce using rule 64 (SimboloCondicional -> > .)
    FALSE           reduce using rule 64 (SimboloCondicional -> > .)
    (               reduce using rule 64 (SimboloCondicional -> > .)


state 107

    (38) CicloFor -> FOR Atribuicao DirecaoFor . Expressao DO Instrucao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Expressao                      shift and go to state 143
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 108

    (72) DirecaoFor -> TO .

    ID              reduce using rule 72 (DirecaoFor -> TO .)
    INTEGER         reduce using rule 72 (DirecaoFor -> TO .)
    REAL            reduce using rule 72 (DirecaoFor -> TO .)
    STRING          reduce using rule 72 (DirecaoFor -> TO .)
    TRUE            reduce using rule 72 (DirecaoFor -> TO .)
    FALSE           reduce using rule 72 (DirecaoFor -> TO .)
    (               reduce using rule 72 (DirecaoFor -> TO .)


state 109

    (73) DirecaoFor -> DOWNTO .

    ID              reduce using rule 73 (DirecaoFor -> DOWNTO .)
    INTEGER         reduce using rule 73 (DirecaoFor -> DOWNTO .)
    REAL            reduce using rule 73 (DirecaoFor -> DOWNTO .)
    STRING          reduce using rule 73 (DirecaoFor -> DOWNTO .)
    TRUE            reduce using rule 73 (DirecaoFor -> DOWNTO .)
    FALSE           reduce using rule 73 (DirecaoFor -> DOWNTO .)
    (               reduce using rule 73 (DirecaoFor -> DOWNTO .)


state 110

    (11) InstrucaoCondicional -> IF Condicao THEN . BlocoCondicional ParteElse
    (30) BlocoCondicional -> . Instrucao
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    BlocoCondicional               shift and go to state 144
    Instrucao                      shift and go to state 145
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 111

    (12) Atribuicao -> Atribuido ASSIGN Expressao .
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    END             reduce using rule 12 (Atribuicao -> Atribuido ASSIGN Expressao .)
    ;               reduce using rule 12 (Atribuicao -> Atribuido ASSIGN Expressao .)
    TO              reduce using rule 12 (Atribuicao -> Atribuido ASSIGN Expressao .)
    DOWNTO          reduce using rule 12 (Atribuicao -> Atribuido ASSIGN Expressao .)
    ELSE            reduce using rule 12 (Atribuicao -> Atribuido ASSIGN Expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 112

    (87) Termo -> Termo * Fator .

    *               reduce using rule 87 (Termo -> Termo * Fator .)
    MOD             reduce using rule 87 (Termo -> Termo * Fator .)
    DIV             reduce using rule 87 (Termo -> Termo * Fator .)
    +               reduce using rule 87 (Termo -> Termo * Fator .)
    -               reduce using rule 87 (Termo -> Termo * Fator .)
    END             reduce using rule 87 (Termo -> Termo * Fator .)
    ;               reduce using rule 87 (Termo -> Termo * Fator .)
    =               reduce using rule 87 (Termo -> Termo * Fator .)
    DIFFERENT       reduce using rule 87 (Termo -> Termo * Fator .)
    LESSOREQUAL     reduce using rule 87 (Termo -> Termo * Fator .)
    <               reduce using rule 87 (Termo -> Termo * Fator .)
    GREATEROREQUAL  reduce using rule 87 (Termo -> Termo * Fator .)
    >               reduce using rule 87 (Termo -> Termo * Fator .)
    DO              reduce using rule 87 (Termo -> Termo * Fator .)
    AND             reduce using rule 87 (Termo -> Termo * Fator .)
    OR              reduce using rule 87 (Termo -> Termo * Fator .)
    THEN            reduce using rule 87 (Termo -> Termo * Fator .)
    )               reduce using rule 87 (Termo -> Termo * Fator .)
    TO              reduce using rule 87 (Termo -> Termo * Fator .)
    DOWNTO          reduce using rule 87 (Termo -> Termo * Fator .)
    ELSE            reduce using rule 87 (Termo -> Termo * Fator .)
    ,               reduce using rule 87 (Termo -> Termo * Fator .)
    ]               reduce using rule 87 (Termo -> Termo * Fator .)


state 113

    (88) Termo -> Termo MOD Fator .

    *               reduce using rule 88 (Termo -> Termo MOD Fator .)
    MOD             reduce using rule 88 (Termo -> Termo MOD Fator .)
    DIV             reduce using rule 88 (Termo -> Termo MOD Fator .)
    +               reduce using rule 88 (Termo -> Termo MOD Fator .)
    -               reduce using rule 88 (Termo -> Termo MOD Fator .)
    END             reduce using rule 88 (Termo -> Termo MOD Fator .)
    ;               reduce using rule 88 (Termo -> Termo MOD Fator .)
    =               reduce using rule 88 (Termo -> Termo MOD Fator .)
    DIFFERENT       reduce using rule 88 (Termo -> Termo MOD Fator .)
    LESSOREQUAL     reduce using rule 88 (Termo -> Termo MOD Fator .)
    <               reduce using rule 88 (Termo -> Termo MOD Fator .)
    GREATEROREQUAL  reduce using rule 88 (Termo -> Termo MOD Fator .)
    >               reduce using rule 88 (Termo -> Termo MOD Fator .)
    DO              reduce using rule 88 (Termo -> Termo MOD Fator .)
    AND             reduce using rule 88 (Termo -> Termo MOD Fator .)
    OR              reduce using rule 88 (Termo -> Termo MOD Fator .)
    THEN            reduce using rule 88 (Termo -> Termo MOD Fator .)
    )               reduce using rule 88 (Termo -> Termo MOD Fator .)
    TO              reduce using rule 88 (Termo -> Termo MOD Fator .)
    DOWNTO          reduce using rule 88 (Termo -> Termo MOD Fator .)
    ELSE            reduce using rule 88 (Termo -> Termo MOD Fator .)
    ,               reduce using rule 88 (Termo -> Termo MOD Fator .)
    ]               reduce using rule 88 (Termo -> Termo MOD Fator .)


state 114

    (89) Termo -> Termo DIV Fator .

    *               reduce using rule 89 (Termo -> Termo DIV Fator .)
    MOD             reduce using rule 89 (Termo -> Termo DIV Fator .)
    DIV             reduce using rule 89 (Termo -> Termo DIV Fator .)
    +               reduce using rule 89 (Termo -> Termo DIV Fator .)
    -               reduce using rule 89 (Termo -> Termo DIV Fator .)
    END             reduce using rule 89 (Termo -> Termo DIV Fator .)
    ;               reduce using rule 89 (Termo -> Termo DIV Fator .)
    =               reduce using rule 89 (Termo -> Termo DIV Fator .)
    DIFFERENT       reduce using rule 89 (Termo -> Termo DIV Fator .)
    LESSOREQUAL     reduce using rule 89 (Termo -> Termo DIV Fator .)
    <               reduce using rule 89 (Termo -> Termo DIV Fator .)
    GREATEROREQUAL  reduce using rule 89 (Termo -> Termo DIV Fator .)
    >               reduce using rule 89 (Termo -> Termo DIV Fator .)
    DO              reduce using rule 89 (Termo -> Termo DIV Fator .)
    AND             reduce using rule 89 (Termo -> Termo DIV Fator .)
    OR              reduce using rule 89 (Termo -> Termo DIV Fator .)
    THEN            reduce using rule 89 (Termo -> Termo DIV Fator .)
    )               reduce using rule 89 (Termo -> Termo DIV Fator .)
    TO              reduce using rule 89 (Termo -> Termo DIV Fator .)
    DOWNTO          reduce using rule 89 (Termo -> Termo DIV Fator .)
    ELSE            reduce using rule 89 (Termo -> Termo DIV Fator .)
    ,               reduce using rule 89 (Termo -> Termo DIV Fator .)
    ]               reduce using rule 89 (Termo -> Termo DIV Fator .)


state 115

    (65) ArgumentosGetter -> ( ArgumentosGetterInit . )

    )               shift and go to state 146


state 116

    (102) ArgumentosGetter -> ( ) .

    *               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    MOD             reduce using rule 102 (ArgumentosGetter -> ( ) .)
    DIV             reduce using rule 102 (ArgumentosGetter -> ( ) .)
    +               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    -               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    END             reduce using rule 102 (ArgumentosGetter -> ( ) .)
    ;               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    ELSE            reduce using rule 102 (ArgumentosGetter -> ( ) .)
    =               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    DIFFERENT       reduce using rule 102 (ArgumentosGetter -> ( ) .)
    LESSOREQUAL     reduce using rule 102 (ArgumentosGetter -> ( ) .)
    <               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    GREATEROREQUAL  reduce using rule 102 (ArgumentosGetter -> ( ) .)
    >               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    DO              reduce using rule 102 (ArgumentosGetter -> ( ) .)
    AND             reduce using rule 102 (ArgumentosGetter -> ( ) .)
    OR              reduce using rule 102 (ArgumentosGetter -> ( ) .)
    THEN            reduce using rule 102 (ArgumentosGetter -> ( ) .)
    )               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    TO              reduce using rule 102 (ArgumentosGetter -> ( ) .)
    DOWNTO          reduce using rule 102 (ArgumentosGetter -> ( ) .)
    ,               reduce using rule 102 (ArgumentosGetter -> ( ) .)
    ]               reduce using rule 102 (ArgumentosGetter -> ( ) .)


state 117

    (101) ArgumentosGetter -> ( ListaArgumentos . )
    (103) ListaArgumentos -> ListaArgumentos . , Expressao

    )               shift and go to state 147
    ,               shift and go to state 148


state 118

    (66) ArgumentosGetterInit -> ArgumentosGetterBuffer . Expressao
    (70) ArgumentosGetterBuffer -> ArgumentosGetterBuffer . Expressao ,
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Expressao                      shift and go to state 149
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 119

    (104) ListaArgumentos -> Expressao .
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    )               reduce using rule 104 (ListaArgumentos -> Expressao .)
    ,               reduce using rule 104 (ListaArgumentos -> Expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 120

    (74) Acesso_array -> Variavel_array [ Expressao . ]
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    ]               shift and go to state 150
    +               shift and go to state 59
    -               shift and go to state 60


state 121

    (97) Fator -> ( Expressao ) .

    *               reduce using rule 97 (Fator -> ( Expressao ) .)
    MOD             reduce using rule 97 (Fator -> ( Expressao ) .)
    DIV             reduce using rule 97 (Fator -> ( Expressao ) .)
    +               reduce using rule 97 (Fator -> ( Expressao ) .)
    -               reduce using rule 97 (Fator -> ( Expressao ) .)
    END             reduce using rule 97 (Fator -> ( Expressao ) .)
    ;               reduce using rule 97 (Fator -> ( Expressao ) .)
    =               reduce using rule 97 (Fator -> ( Expressao ) .)
    DIFFERENT       reduce using rule 97 (Fator -> ( Expressao ) .)
    LESSOREQUAL     reduce using rule 97 (Fator -> ( Expressao ) .)
    <               reduce using rule 97 (Fator -> ( Expressao ) .)
    GREATEROREQUAL  reduce using rule 97 (Fator -> ( Expressao ) .)
    >               reduce using rule 97 (Fator -> ( Expressao ) .)
    DO              reduce using rule 97 (Fator -> ( Expressao ) .)
    AND             reduce using rule 97 (Fator -> ( Expressao ) .)
    OR              reduce using rule 97 (Fator -> ( Expressao ) .)
    THEN            reduce using rule 97 (Fator -> ( Expressao ) .)
    )               reduce using rule 97 (Fator -> ( Expressao ) .)
    TO              reduce using rule 97 (Fator -> ( Expressao ) .)
    DOWNTO          reduce using rule 97 (Fator -> ( Expressao ) .)
    ELSE            reduce using rule 97 (Fator -> ( Expressao ) .)
    ,               reduce using rule 97 (Fator -> ( Expressao ) .)
    ]               reduce using rule 97 (Fator -> ( Expressao ) .)


state 122

    (13) Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList . END ;
    (1) LocalInstsList -> LocalInstsList . ; Instrucao
    (14) LocalInstsList -> LocalInstsList . ;

    END             shift and go to state 151
    ;               shift and go to state 58


state 123

    (51) Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; . GlobalInsts BEGIN LocalInstsList END ;
    (26) GlobalInsts -> . GlobalInsts GlobalInst
    (27) GlobalInsts -> .

    BEGIN           reduce using rule 27 (GlobalInsts -> .)
    PROCEDURE       reduce using rule 27 (GlobalInsts -> .)
    VAR             reduce using rule 27 (GlobalInsts -> .)
    FUNCTION        reduce using rule 27 (GlobalInsts -> .)

    GlobalInsts                    shift and go to state 152

state 124

    (15) Listavariaveis -> Listavariaveis Variaveis : . Tipo ;
    (46) Tipo -> . Datatype
    (47) Tipo -> . ARRAY [ Intervalo ] OF Datatype
    (48) Tipo -> . ID
    (52) Datatype -> . REAL_TYPE
    (53) Datatype -> . INTEGER_TYPE
    (54) Datatype -> . STRING_TYPE
    (55) Datatype -> . BOOLEAN_TYPE
    (56) Datatype -> . CHAR_TYPE

    ARRAY           shift and go to state 128
    ID              shift and go to state 129
    REAL_TYPE       shift and go to state 130
    INTEGER_TYPE    shift and go to state 131
    STRING_TYPE     shift and go to state 132
    BOOLEAN_TYPE    shift and go to state 133
    CHAR_TYPE       shift and go to state 134

    Tipo                           shift and go to state 153
    Datatype                       shift and go to state 127

state 125

    (43) Variaveis -> Variaveis , . ID

    ID              shift and go to state 154


state 126

    (45) FuncDec -> Cabeca ArgumentosSetter : Tipo . ;

    ;               shift and go to state 155


state 127

    (46) Tipo -> Datatype .

    ;               reduce using rule 46 (Tipo -> Datatype .)
    )               reduce using rule 46 (Tipo -> Datatype .)
    ,               reduce using rule 46 (Tipo -> Datatype .)


state 128

    (47) Tipo -> ARRAY . [ Intervalo ] OF Datatype

    [               shift and go to state 156


state 129

    (48) Tipo -> ID .

    ;               reduce using rule 48 (Tipo -> ID .)
    )               reduce using rule 48 (Tipo -> ID .)
    ,               reduce using rule 48 (Tipo -> ID .)


state 130

    (52) Datatype -> REAL_TYPE .

    ;               reduce using rule 52 (Datatype -> REAL_TYPE .)
    )               reduce using rule 52 (Datatype -> REAL_TYPE .)
    ,               reduce using rule 52 (Datatype -> REAL_TYPE .)


state 131

    (53) Datatype -> INTEGER_TYPE .

    ;               reduce using rule 53 (Datatype -> INTEGER_TYPE .)
    )               reduce using rule 53 (Datatype -> INTEGER_TYPE .)
    ,               reduce using rule 53 (Datatype -> INTEGER_TYPE .)


state 132

    (54) Datatype -> STRING_TYPE .

    ;               reduce using rule 54 (Datatype -> STRING_TYPE .)
    )               reduce using rule 54 (Datatype -> STRING_TYPE .)
    ,               reduce using rule 54 (Datatype -> STRING_TYPE .)


state 133

    (55) Datatype -> BOOLEAN_TYPE .

    ;               reduce using rule 55 (Datatype -> BOOLEAN_TYPE .)
    )               reduce using rule 55 (Datatype -> BOOLEAN_TYPE .)
    ,               reduce using rule 55 (Datatype -> BOOLEAN_TYPE .)


state 134

    (56) Datatype -> CHAR_TYPE .

    ;               reduce using rule 56 (Datatype -> CHAR_TYPE .)
    )               reduce using rule 56 (Datatype -> CHAR_TYPE .)
    ,               reduce using rule 56 (Datatype -> CHAR_TYPE .)


state 135

    (75) ArgumentosSetter -> ( ArgumentosSetterBuffer ) .

    :               reduce using rule 75 (ArgumentosSetter -> ( ArgumentosSetterBuffer ) .)
    ;               reduce using rule 75 (ArgumentosSetter -> ( ArgumentosSetterBuffer ) .)


state 136

    (76) ArgumentosSetterBuffer -> ArgumentosSetterBuffer , . Argumento
    (79) Argumento -> . OutrosArgumentos ID : Tipo
    (82) OutrosArgumentos -> . OutrosArgumentos ID ,
    (83) OutrosArgumentos -> .

    ID              reduce using rule 83 (OutrosArgumentos -> .)

    Argumento                      shift and go to state 157
    OutrosArgumentos               shift and go to state 89

state 137

    (79) Argumento -> OutrosArgumentos ID . : Tipo
    (82) OutrosArgumentos -> OutrosArgumentos ID . ,

    :               shift and go to state 158
    ,               shift and go to state 159


state 138

    (19) While -> WHILE Condicao DO Instrucao .

    END             reduce using rule 19 (While -> WHILE Condicao DO Instrucao .)
    ;               reduce using rule 19 (While -> WHILE Condicao DO Instrucao .)
    ELSE            reduce using rule 19 (While -> WHILE Condicao DO Instrucao .)


state 139

    (2) Condicao -> Condicao AND Condicao .
    (2) Condicao -> Condicao . AND Condicao
    (3) Condicao -> Condicao . OR Condicao

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    DO              reduce using rule 2 (Condicao -> Condicao AND Condicao .)
    THEN            reduce using rule 2 (Condicao -> Condicao AND Condicao .)
    )               reduce using rule 2 (Condicao -> Condicao AND Condicao .)
    AND             shift and go to state 95
    OR              shift and go to state 96

  ! AND             [ reduce using rule 2 (Condicao -> Condicao AND Condicao .) ]
  ! OR              [ reduce using rule 2 (Condicao -> Condicao AND Condicao .) ]


state 140

    (3) Condicao -> Condicao OR Condicao .
    (2) Condicao -> Condicao . AND Condicao
    (3) Condicao -> Condicao . OR Condicao

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    DO              reduce using rule 3 (Condicao -> Condicao OR Condicao .)
    THEN            reduce using rule 3 (Condicao -> Condicao OR Condicao .)
    )               reduce using rule 3 (Condicao -> Condicao OR Condicao .)
    AND             shift and go to state 95
    OR              shift and go to state 96

  ! AND             [ reduce using rule 3 (Condicao -> Condicao OR Condicao .) ]
  ! OR              [ reduce using rule 3 (Condicao -> Condicao OR Condicao .) ]


state 141

    (6) Condicao -> ( Condicao ) .

    DO              reduce using rule 6 (Condicao -> ( Condicao ) .)
    AND             reduce using rule 6 (Condicao -> ( Condicao ) .)
    OR              reduce using rule 6 (Condicao -> ( Condicao ) .)
    THEN            reduce using rule 6 (Condicao -> ( Condicao ) .)
    )               reduce using rule 6 (Condicao -> ( Condicao ) .)


state 142

    (28) DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    DO              reduce using rule 28 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    AND             reduce using rule 28 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    OR              reduce using rule 28 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    THEN            reduce using rule 28 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    )               reduce using rule 28 (DeclaracaoCondicao -> Expressao SimboloCondicional Expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 143

    (38) CicloFor -> FOR Atribuicao DirecaoFor Expressao . DO Instrucao
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    DO              shift and go to state 160
    +               shift and go to state 59
    -               shift and go to state 60


state 144

    (11) InstrucaoCondicional -> IF Condicao THEN BlocoCondicional . ParteElse
    (34) ParteElse -> . ELSE Instrucao
    (35) ParteElse -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 162
    END             reduce using rule 35 (ParteElse -> .)
    ;               reduce using rule 35 (ParteElse -> .)

  ! ELSE            [ reduce using rule 35 (ParteElse -> .) ]

    ParteElse                      shift and go to state 161

state 145

    (30) BlocoCondicional -> Instrucao .

    END             reduce using rule 30 (BlocoCondicional -> Instrucao .)
    ;               reduce using rule 30 (BlocoCondicional -> Instrucao .)
    ELSE            reduce using rule 30 (BlocoCondicional -> Instrucao .)


state 146

    (65) ArgumentosGetter -> ( ArgumentosGetterInit ) .

    *               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    MOD             reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    DIV             reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    +               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    -               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    END             reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    ;               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    ELSE            reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    =               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    DIFFERENT       reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    LESSOREQUAL     reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    <               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    GREATEROREQUAL  reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    >               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    DO              reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    AND             reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    OR              reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    THEN            reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    )               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    TO              reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    DOWNTO          reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    ,               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)
    ]               reduce using rule 65 (ArgumentosGetter -> ( ArgumentosGetterInit ) .)


state 147

    (101) ArgumentosGetter -> ( ListaArgumentos ) .

    *               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    MOD             reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    DIV             reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    +               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    -               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    END             reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    ;               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    ELSE            reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    =               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    DIFFERENT       reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    LESSOREQUAL     reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    <               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    GREATEROREQUAL  reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    >               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    DO              reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    AND             reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    OR              reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    THEN            reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    )               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    TO              reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    DOWNTO          reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    ,               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)
    ]               reduce using rule 101 (ArgumentosGetter -> ( ListaArgumentos ) .)


state 148

    (103) ListaArgumentos -> ListaArgumentos , . Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (100) ChamadaFuncao -> . ID ArgumentosGetter
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array

    ID              shift and go to state 66
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Expressao                      shift and go to state 163
    Termo                          shift and go to state 37
    Fator                          shift and go to state 40
    Acesso_array                   shift and go to state 67
    ChamadaFuncao                  shift and go to state 48
    Variavel_array                 shift and go to state 41

state 149

    (66) ArgumentosGetterInit -> ArgumentosGetterBuffer Expressao .
    (70) ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao . ,
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    )               reduce using rule 66 (ArgumentosGetterInit -> ArgumentosGetterBuffer Expressao .)
    ,               shift and go to state 164
    +               shift and go to state 59
    -               shift and go to state 60


state 150

    (74) Acesso_array -> Variavel_array [ Expressao ] .

    ASSIGN          reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    *               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    MOD             reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    DIV             reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    +               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    -               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    END             reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    ;               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    [               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    =               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    DIFFERENT       reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    LESSOREQUAL     reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    <               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    GREATEROREQUAL  reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    >               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    DO              reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    AND             reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    OR              reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    THEN            reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    )               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    TO              reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    DOWNTO          reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    ELSE            reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    ,               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)
    ]               reduce using rule 74 (Acesso_array -> Variavel_array [ Expressao ] .)


state 151

    (13) Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList END . ;

    ;               shift and go to state 165


state 152

    (51) Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts . BEGIN LocalInstsList END ;
    (26) GlobalInsts -> GlobalInsts . GlobalInst
    (31) GlobalInst -> . Dfuncao
    (32) GlobalInst -> . Dprocedimento
    (39) GlobalInst -> . Dvariaveis
    (13) Dfuncao -> . FuncDec BufferVar BEGIN LocalInstsList END ;
    (51) Dprocedimento -> . PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ;
    (7) Dvariaveis -> . VAR Listavariaveis
    (45) FuncDec -> . Cabeca ArgumentosSetter : Tipo ;
    (49) Cabeca -> . FUNCTION ID

    BEGIN           shift and go to state 166
    PROCEDURE       shift and go to state 17
    VAR             shift and go to state 18
    FUNCTION        shift and go to state 20

    GlobalInst                     shift and go to state 11
    Dfuncao                        shift and go to state 13
    Dprocedimento                  shift and go to state 14
    Dvariaveis                     shift and go to state 15
    FuncDec                        shift and go to state 16
    Cabeca                         shift and go to state 19

state 153

    (15) Listavariaveis -> Listavariaveis Variaveis : Tipo . ;

    ;               shift and go to state 167


state 154

    (43) Variaveis -> Variaveis , ID .

    :               reduce using rule 43 (Variaveis -> Variaveis , ID .)
    ,               reduce using rule 43 (Variaveis -> Variaveis , ID .)


state 155

    (45) FuncDec -> Cabeca ArgumentosSetter : Tipo ; .

    BEGIN           reduce using rule 45 (FuncDec -> Cabeca ArgumentosSetter : Tipo ; .)
    VAR             reduce using rule 45 (FuncDec -> Cabeca ArgumentosSetter : Tipo ; .)


state 156

    (47) Tipo -> ARRAY [ . Intervalo ] OF Datatype
    (50) Intervalo -> . INTEGER . . INTEGER

    INTEGER         shift and go to state 169

    Intervalo                      shift and go to state 168

state 157

    (76) ArgumentosSetterBuffer -> ArgumentosSetterBuffer , Argumento .

    )               reduce using rule 76 (ArgumentosSetterBuffer -> ArgumentosSetterBuffer , Argumento .)
    ,               reduce using rule 76 (ArgumentosSetterBuffer -> ArgumentosSetterBuffer , Argumento .)


state 158

    (79) Argumento -> OutrosArgumentos ID : . Tipo
    (46) Tipo -> . Datatype
    (47) Tipo -> . ARRAY [ Intervalo ] OF Datatype
    (48) Tipo -> . ID
    (52) Datatype -> . REAL_TYPE
    (53) Datatype -> . INTEGER_TYPE
    (54) Datatype -> . STRING_TYPE
    (55) Datatype -> . BOOLEAN_TYPE
    (56) Datatype -> . CHAR_TYPE

    ARRAY           shift and go to state 128
    ID              shift and go to state 129
    REAL_TYPE       shift and go to state 130
    INTEGER_TYPE    shift and go to state 131
    STRING_TYPE     shift and go to state 132
    BOOLEAN_TYPE    shift and go to state 133
    CHAR_TYPE       shift and go to state 134

    Tipo                           shift and go to state 170
    Datatype                       shift and go to state 127

state 159

    (82) OutrosArgumentos -> OutrosArgumentos ID , .

    ID              reduce using rule 82 (OutrosArgumentos -> OutrosArgumentos ID , .)


state 160

    (38) CicloFor -> FOR Atribuicao DirecaoFor Expressao DO . Instrucao
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Instrucao                      shift and go to state 171
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 161

    (11) InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse .

    END             reduce using rule 11 (InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse .)
    ;               reduce using rule 11 (InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse .)
    ELSE            reduce using rule 11 (InstrucaoCondicional -> IF Condicao THEN BlocoCondicional ParteElse .)


state 162

    (34) ParteElse -> ELSE . Instrucao
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    Instrucao                      shift and go to state 172
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 163

    (103) ListaArgumentos -> ListaArgumentos , Expressao .
    (84) Expressao -> Expressao . + Termo
    (85) Expressao -> Expressao . - Termo

    )               reduce using rule 103 (ListaArgumentos -> ListaArgumentos , Expressao .)
    ,               reduce using rule 103 (ListaArgumentos -> ListaArgumentos , Expressao .)
    +               shift and go to state 59
    -               shift and go to state 60


state 164

    (70) ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao , .

    ID              reduce using rule 70 (ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao , .)
    INTEGER         reduce using rule 70 (ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao , .)
    REAL            reduce using rule 70 (ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao , .)
    STRING          reduce using rule 70 (ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao , .)
    TRUE            reduce using rule 70 (ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao , .)
    FALSE           reduce using rule 70 (ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao , .)
    (               reduce using rule 70 (ArgumentosGetterBuffer -> ArgumentosGetterBuffer Expressao , .)


state 165

    (13) Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList END ; .

    BEGIN           reduce using rule 13 (Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList END ; .)
    PROCEDURE       reduce using rule 13 (Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList END ; .)
    VAR             reduce using rule 13 (Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList END ; .)
    FUNCTION        reduce using rule 13 (Dfuncao -> FuncDec BufferVar BEGIN LocalInstsList END ; .)


state 166

    (51) Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN . LocalInstsList END ;
    (1) LocalInstsList -> . LocalInstsList ; Instrucao
    (14) LocalInstsList -> . LocalInstsList ;
    (20) LocalInstsList -> . Instrucao
    (21) Instrucao -> . While
    (22) Instrucao -> . CicloFor
    (23) Instrucao -> . InstrucaoCondicional
    (24) Instrucao -> . Atribuicao
    (25) Instrucao -> . Expressao
    (33) Instrucao -> . Bloco
    (19) While -> . WHILE Condicao DO Instrucao
    (38) CicloFor -> . FOR Atribuicao DirecaoFor Expressao DO Instrucao
    (11) InstrucaoCondicional -> . IF Condicao THEN BlocoCondicional ParteElse
    (12) Atribuicao -> . Atribuido ASSIGN Expressao
    (84) Expressao -> . Expressao + Termo
    (85) Expressao -> . Expressao - Termo
    (86) Expressao -> . Termo
    (40) Bloco -> . BEGIN LocalInstsList END
    (68) Atribuido -> . ID
    (69) Atribuido -> . Acesso_array
    (87) Termo -> . Termo * Fator
    (88) Termo -> . Termo MOD Fator
    (89) Termo -> . Termo DIV Fator
    (90) Termo -> . Fator
    (74) Acesso_array -> . Variavel_array [ Expressao ]
    (91) Fator -> . ID
    (92) Fator -> . INTEGER
    (93) Fator -> . REAL
    (94) Fator -> . STRING
    (95) Fator -> . TRUE
    (96) Fator -> . FALSE
    (97) Fator -> . ( Expressao )
    (98) Fator -> . Acesso_array
    (99) Fator -> . ChamadaFuncao
    (80) Variavel_array -> . ID
    (81) Variavel_array -> . Acesso_array
    (100) ChamadaFuncao -> . ID ArgumentosGetter

    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    BEGIN           shift and go to state 24
    ID              shift and go to state 38
    INTEGER         shift and go to state 42
    REAL            shift and go to state 43
    STRING          shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    (               shift and go to state 47

    LocalInstsList                 shift and go to state 173
    Instrucao                      shift and go to state 26
    While                          shift and go to state 27
    CicloFor                       shift and go to state 28
    InstrucaoCondicional           shift and go to state 29
    Atribuicao                     shift and go to state 30
    Expressao                      shift and go to state 31
    Bloco                          shift and go to state 32
    Atribuido                      shift and go to state 36
    Termo                          shift and go to state 37
    Acesso_array                   shift and go to state 39
    Fator                          shift and go to state 40
    Variavel_array                 shift and go to state 41
    ChamadaFuncao                  shift and go to state 48

state 167

    (15) Listavariaveis -> Listavariaveis Variaveis : Tipo ; .

    ID              reduce using rule 15 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)
    BEGIN           reduce using rule 15 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)
    PROCEDURE       reduce using rule 15 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)
    VAR             reduce using rule 15 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)
    FUNCTION        reduce using rule 15 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)


state 168

    (47) Tipo -> ARRAY [ Intervalo . ] OF Datatype

    ]               shift and go to state 174


state 169

    (50) Intervalo -> INTEGER . . . INTEGER

    .               shift and go to state 175


state 170

    (79) Argumento -> OutrosArgumentos ID : Tipo .

    )               reduce using rule 79 (Argumento -> OutrosArgumentos ID : Tipo .)
    ,               reduce using rule 79 (Argumento -> OutrosArgumentos ID : Tipo .)


state 171

    (38) CicloFor -> FOR Atribuicao DirecaoFor Expressao DO Instrucao .

    END             reduce using rule 38 (CicloFor -> FOR Atribuicao DirecaoFor Expressao DO Instrucao .)
    ;               reduce using rule 38 (CicloFor -> FOR Atribuicao DirecaoFor Expressao DO Instrucao .)
    ELSE            reduce using rule 38 (CicloFor -> FOR Atribuicao DirecaoFor Expressao DO Instrucao .)


state 172

    (34) ParteElse -> ELSE Instrucao .

    END             reduce using rule 34 (ParteElse -> ELSE Instrucao .)
    ;               reduce using rule 34 (ParteElse -> ELSE Instrucao .)
    ELSE            reduce using rule 34 (ParteElse -> ELSE Instrucao .)


state 173

    (51) Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList . END ;
    (1) LocalInstsList -> LocalInstsList . ; Instrucao
    (14) LocalInstsList -> LocalInstsList . ;

    END             shift and go to state 176
    ;               shift and go to state 58


state 174

    (47) Tipo -> ARRAY [ Intervalo ] . OF Datatype

    OF              shift and go to state 177


state 175

    (50) Intervalo -> INTEGER . . . INTEGER

    .               shift and go to state 178


state 176

    (51) Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END . ;

    ;               shift and go to state 179


state 177

    (47) Tipo -> ARRAY [ Intervalo ] OF . Datatype
    (52) Datatype -> . REAL_TYPE
    (53) Datatype -> . INTEGER_TYPE
    (54) Datatype -> . STRING_TYPE
    (55) Datatype -> . BOOLEAN_TYPE
    (56) Datatype -> . CHAR_TYPE

    REAL_TYPE       shift and go to state 130
    INTEGER_TYPE    shift and go to state 131
    STRING_TYPE     shift and go to state 132
    BOOLEAN_TYPE    shift and go to state 133
    CHAR_TYPE       shift and go to state 134

    Datatype                       shift and go to state 180

state 178

    (50) Intervalo -> INTEGER . . . INTEGER

    INTEGER         shift and go to state 181


state 179

    (51) Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ; .

    BEGIN           reduce using rule 51 (Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ; .)
    PROCEDURE       reduce using rule 51 (Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ; .)
    VAR             reduce using rule 51 (Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ; .)
    FUNCTION        reduce using rule 51 (Dprocedimento -> PROCEDURE ID ArgumentosProcedimentoOpc ; GlobalInsts BEGIN LocalInstsList END ; .)


state 180

    (47) Tipo -> ARRAY [ Intervalo ] OF Datatype .

    ;               reduce using rule 47 (Tipo -> ARRAY [ Intervalo ] OF Datatype .)
    )               reduce using rule 47 (Tipo -> ARRAY [ Intervalo ] OF Datatype .)
    ,               reduce using rule 47 (Tipo -> ARRAY [ Intervalo ] OF Datatype .)


state 181

    (50) Intervalo -> INTEGER . . INTEGER .

    ]               reduce using rule 50 (Intervalo -> INTEGER . . INTEGER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ) in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 77 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 77 resolved as shift
WARNING: shift/reduce conflict for REAL in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING in state 77 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 77 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 77 resolved as shift
WARNING: shift/reduce conflict for ( in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for ) in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 139 resolved as shift
WARNING: shift/reduce conflict for OR in state 139 resolved as shift
WARNING: shift/reduce conflict for AND in state 140 resolved as shift
WARNING: shift/reduce conflict for OR in state 140 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 144 resolved as shift
