Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ASSIGN
    CASE
    CONST
    DIFFERENT
    DIV
    DO
    DOWNTO
    ELSE
    FALSE
    FILE
    FOR
    FUNCTION
    GOTO
    GREATEROREQUAL
    IF
    IN
    KEYWORD
    LABEL
    LESSOREQUAL
    MOD
    MULTILINECOMMENTS
    NIL
    NOT
    ONELINECOMMENTS
    OR
    PACKED
    PROCEDURE
    REAL
    RECORD
    REPEAT
    SET
    STRING
    THEN
    TO
    TRUE
    TYPE
    UNTIL
    WHILE
    WITH

Grammar

Rule 0     S' -> Programa
Rule 1     Dvariaveis -> VAR Listavariaveis
Rule 2     Corpo -> BEGIN conteudo END
Rule 3     Programa -> Cabecalho Dvariaveis Corpo .
Rule 4     Programa -> Cabecalho Corpo
Rule 5     Listavariaveis -> Listavariaveis Variaveis : Tipo ;
Rule 6     Listavariaveis -> <empty>
Rule 7     conteudo -> <empty>
Rule 8     Cabecalho -> PROGRAM Programname ;
Rule 9     Variaveis -> Variaveis , ID
Rule 10    Variaveis -> ID
Rule 11    Programname -> ID
Rule 12    Tipo -> Datatype
Rule 13    Tipo -> ARRAY [ Intervalo ] OF Datatype
Rule 14    Tipo -> ID
Rule 15    Intervalo -> INTEGER . . INTEGER
Rule 16    Datatype -> REAL_TYPE
Rule 17    Datatype -> INTEGER_TYPE
Rule 18    Datatype -> STRING_TYPE
Rule 19    Datatype -> BOOLEAN_TYPE
Rule 20    Datatype -> CHAR_TYPE

Terminals, with rules where they appear

,                    : 9
.                    : 3 15 15
:                    : 5
;                    : 5 8
AND                  : 
ARRAY                : 13
ASSIGN               : 
BEGIN                : 2
BOOLEAN_TYPE         : 19
CASE                 : 
CHAR_TYPE            : 20
CONST                : 
DIFFERENT            : 
DIV                  : 
DO                   : 
DOWNTO               : 
ELSE                 : 
END                  : 2
FALSE                : 
FILE                 : 
FOR                  : 
FUNCTION             : 
GOTO                 : 
GREATEROREQUAL       : 
ID                   : 9 10 11 14
IF                   : 
IN                   : 
INTEGER              : 15 15
INTEGER_TYPE         : 17
KEYWORD              : 
LABEL                : 
LESSOREQUAL          : 
MOD                  : 
MULTILINECOMMENTS    : 
NIL                  : 
NOT                  : 
OF                   : 13
ONELINECOMMENTS      : 
OR                   : 
PACKED               : 
PROCEDURE            : 
PROGRAM              : 8
REAL                 : 
REAL_TYPE            : 16
RECORD               : 
REPEAT               : 
SET                  : 
STRING               : 
STRING_TYPE          : 18
THEN                 : 
TO                   : 
TRUE                 : 
TYPE                 : 
UNTIL                : 
VAR                  : 1
WHILE                : 
WITH                 : 
[                    : 13
]                    : 13
error                : 

Nonterminals, with rules where they appear

Cabecalho            : 3 4
Corpo                : 3 4
Datatype             : 12 13
Dvariaveis           : 3
Intervalo            : 13
Listavariaveis       : 1 5
Programa             : 0
Programname          : 8
Tipo                 : 5
Variaveis            : 5 9
conteudo             : 2

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (3) Programa -> . Cabecalho Dvariaveis Corpo .
    (4) Programa -> . Cabecalho Corpo
    (8) Cabecalho -> . PROGRAM Programname ;

    PROGRAM         shift and go to state 3

    Programa                       shift and go to state 1
    Cabecalho                      shift and go to state 2

state 1

    (0) S' -> Programa .



state 2

    (3) Programa -> Cabecalho . Dvariaveis Corpo .
    (4) Programa -> Cabecalho . Corpo
    (1) Dvariaveis -> . VAR Listavariaveis
    (2) Corpo -> . BEGIN conteudo END

    VAR             shift and go to state 6
    BEGIN           shift and go to state 7

    Dvariaveis                     shift and go to state 4
    Corpo                          shift and go to state 5

state 3

    (8) Cabecalho -> PROGRAM . Programname ;
    (11) Programname -> . ID

    ID              shift and go to state 9

    Programname                    shift and go to state 8

state 4

    (3) Programa -> Cabecalho Dvariaveis . Corpo .
    (2) Corpo -> . BEGIN conteudo END

    BEGIN           shift and go to state 7

    Corpo                          shift and go to state 10

state 5

    (4) Programa -> Cabecalho Corpo .

    $end            reduce using rule 4 (Programa -> Cabecalho Corpo .)


state 6

    (1) Dvariaveis -> VAR . Listavariaveis
    (5) Listavariaveis -> . Listavariaveis Variaveis : Tipo ;
    (6) Listavariaveis -> .

    ID              reduce using rule 6 (Listavariaveis -> .)
    BEGIN           reduce using rule 6 (Listavariaveis -> .)

    Listavariaveis                 shift and go to state 11

state 7

    (2) Corpo -> BEGIN . conteudo END
    (7) conteudo -> .

    END             reduce using rule 7 (conteudo -> .)

    conteudo                       shift and go to state 12

state 8

    (8) Cabecalho -> PROGRAM Programname . ;

    ;               shift and go to state 13


state 9

    (11) Programname -> ID .

    ;               reduce using rule 11 (Programname -> ID .)


state 10

    (3) Programa -> Cabecalho Dvariaveis Corpo . .

    .               shift and go to state 14


state 11

    (1) Dvariaveis -> VAR Listavariaveis .
    (5) Listavariaveis -> Listavariaveis . Variaveis : Tipo ;
    (9) Variaveis -> . Variaveis , ID
    (10) Variaveis -> . ID

    BEGIN           reduce using rule 1 (Dvariaveis -> VAR Listavariaveis .)
    ID              shift and go to state 16

    Variaveis                      shift and go to state 15

state 12

    (2) Corpo -> BEGIN conteudo . END

    END             shift and go to state 17


state 13

    (8) Cabecalho -> PROGRAM Programname ; .

    VAR             reduce using rule 8 (Cabecalho -> PROGRAM Programname ; .)
    BEGIN           reduce using rule 8 (Cabecalho -> PROGRAM Programname ; .)


state 14

    (3) Programa -> Cabecalho Dvariaveis Corpo . .

    $end            reduce using rule 3 (Programa -> Cabecalho Dvariaveis Corpo . .)


state 15

    (5) Listavariaveis -> Listavariaveis Variaveis . : Tipo ;
    (9) Variaveis -> Variaveis . , ID

    :               shift and go to state 18
    ,               shift and go to state 19


state 16

    (10) Variaveis -> ID .

    :               reduce using rule 10 (Variaveis -> ID .)
    ,               reduce using rule 10 (Variaveis -> ID .)


state 17

    (2) Corpo -> BEGIN conteudo END .

    $end            reduce using rule 2 (Corpo -> BEGIN conteudo END .)
    .               reduce using rule 2 (Corpo -> BEGIN conteudo END .)


state 18

    (5) Listavariaveis -> Listavariaveis Variaveis : . Tipo ;
    (12) Tipo -> . Datatype
    (13) Tipo -> . ARRAY [ Intervalo ] OF Datatype
    (14) Tipo -> . ID
    (16) Datatype -> . REAL_TYPE
    (17) Datatype -> . INTEGER_TYPE
    (18) Datatype -> . STRING_TYPE
    (19) Datatype -> . BOOLEAN_TYPE
    (20) Datatype -> . CHAR_TYPE

    ARRAY           shift and go to state 22
    ID              shift and go to state 23
    REAL_TYPE       shift and go to state 24
    INTEGER_TYPE    shift and go to state 25
    STRING_TYPE     shift and go to state 26
    BOOLEAN_TYPE    shift and go to state 27
    CHAR_TYPE       shift and go to state 28

    Tipo                           shift and go to state 20
    Datatype                       shift and go to state 21

state 19

    (9) Variaveis -> Variaveis , . ID

    ID              shift and go to state 29


state 20

    (5) Listavariaveis -> Listavariaveis Variaveis : Tipo . ;

    ;               shift and go to state 30


state 21

    (12) Tipo -> Datatype .

    ;               reduce using rule 12 (Tipo -> Datatype .)


state 22

    (13) Tipo -> ARRAY . [ Intervalo ] OF Datatype

    [               shift and go to state 31


state 23

    (14) Tipo -> ID .

    ;               reduce using rule 14 (Tipo -> ID .)


state 24

    (16) Datatype -> REAL_TYPE .

    ;               reduce using rule 16 (Datatype -> REAL_TYPE .)


state 25

    (17) Datatype -> INTEGER_TYPE .

    ;               reduce using rule 17 (Datatype -> INTEGER_TYPE .)


state 26

    (18) Datatype -> STRING_TYPE .

    ;               reduce using rule 18 (Datatype -> STRING_TYPE .)


state 27

    (19) Datatype -> BOOLEAN_TYPE .

    ;               reduce using rule 19 (Datatype -> BOOLEAN_TYPE .)


state 28

    (20) Datatype -> CHAR_TYPE .

    ;               reduce using rule 20 (Datatype -> CHAR_TYPE .)


state 29

    (9) Variaveis -> Variaveis , ID .

    :               reduce using rule 9 (Variaveis -> Variaveis , ID .)
    ,               reduce using rule 9 (Variaveis -> Variaveis , ID .)


state 30

    (5) Listavariaveis -> Listavariaveis Variaveis : Tipo ; .

    ID              reduce using rule 5 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)
    BEGIN           reduce using rule 5 (Listavariaveis -> Listavariaveis Variaveis : Tipo ; .)


state 31

    (13) Tipo -> ARRAY [ . Intervalo ] OF Datatype
    (15) Intervalo -> . INTEGER . . INTEGER

    INTEGER         shift and go to state 33

    Intervalo                      shift and go to state 32

state 32

    (13) Tipo -> ARRAY [ Intervalo . ] OF Datatype

    ]               shift and go to state 34


state 33

    (15) Intervalo -> INTEGER . . . INTEGER

    .               shift and go to state 35


state 34

    (13) Tipo -> ARRAY [ Intervalo ] . OF Datatype

    OF              shift and go to state 36


state 35

    (15) Intervalo -> INTEGER . . . INTEGER

    .               shift and go to state 37


state 36

    (13) Tipo -> ARRAY [ Intervalo ] OF . Datatype
    (16) Datatype -> . REAL_TYPE
    (17) Datatype -> . INTEGER_TYPE
    (18) Datatype -> . STRING_TYPE
    (19) Datatype -> . BOOLEAN_TYPE
    (20) Datatype -> . CHAR_TYPE

    REAL_TYPE       shift and go to state 24
    INTEGER_TYPE    shift and go to state 25
    STRING_TYPE     shift and go to state 26
    BOOLEAN_TYPE    shift and go to state 27
    CHAR_TYPE       shift and go to state 28

    Datatype                       shift and go to state 38

state 37

    (15) Intervalo -> INTEGER . . . INTEGER

    INTEGER         shift and go to state 39


state 38

    (13) Tipo -> ARRAY [ Intervalo ] OF Datatype .

    ;               reduce using rule 13 (Tipo -> ARRAY [ Intervalo ] OF Datatype .)


state 39

    (15) Intervalo -> INTEGER . . INTEGER .

    ]               reduce using rule 15 (Intervalo -> INTEGER . . INTEGER .)

